{"version":3,"sources":["components/Header/Login.js","components/Header/index.js","components/Menu/index.js","helpers.js","components/Drawer/index.js","components/Test/Slide.js","components/Test/User.js","config.js","actions.js","components/Test/index.js","components/Admin/index.js","components/Forbidden/index.js","components/CreateTest/index.js","components/CreateQuestion/index.js","components/App/index.js","index.js"],"names":["withRouter","props","login","authFail","isLogging","react_default","a","createElement","className","onSubmit","type","name","placeholder","disabled","value","isAdmin","logoff","Link","to","onClick","Header_Login","Menu","React","Component","handleResponse","response","json","then","ok","Promise","reject","setToken","token","localStorage","setItem","getToken","getItem","comments","right","yellow","red1","red2","time","Drawer","canvas","Object","classCallCheck","this","ctx","getContext","zones","x1","x2","y1","y2","prevProperties","clearListeners","isDrawing","handelMouseUp","bind","handelMouseMove","handelMouseDown","clearZones","e","offsetX","offsetY","clearPreviousRect","rectProperties","getRectProperties","drawRect","saveZones","_this$ctx","color","arguments","length","undefined","strokeStyle","rect","apply","toConsumableArray","stroke","_this$prevProperties","slicedToArray","x","y","width","heigth","clearRect","beginPath","leftUpCorner","getLeftUpCorner","rightDownCorner","getRightDownCorner","push","concat","rectArray","_this","forEach","dimensions","height","Math","min","max","addEventListener","removeEventListener","Slide","_this$props","possibleConstructorReturn","getPrototypeOf","call","settings","question","state","canvasBackground","canvasDraw","comment","warningShowed","answered","result","slideShowed","clickAllowed","photoShowed","setClear","assertThisInitialized","nextQuestion","handleCanvasClick","clearTimers","setQuestionTimers","showWarning","handleTimer","prepareCanvas","setNewQuestion","showPhoto","timers","drawer","document","querySelector","prevProps","prevState","prevQuestion","_this$props2","setState","_this2","setCanvasDimensions","background","Image","src","imgPath","onload","setCanvasBackground","animateSlideShow","catch","window","alert","_this3","resolve","bg","getCanvasBackground","dl","getCanvasDraw","offsetLeft","_this$state$question$","drawImage","c","dangerZones","drawOldZones","isDanger","redError","finishQuestion","timer","l","totalTimers","setTimeout","_this$state$settings","timeWarning","setTimer","clearTimeout","_this$state$settings2","yellowError","persist","checkIfClickInDangerZone","nativeEvent","isRight","some","zone","_this4","handlePhotoPosition","photo","style","top","clientY","naturalHeight","left","clientX","naturalWidth","classList","add","drawDangerZone","showResult","sendResult","_this5","_this$state","dangerPicture","id","alt","PureComponent","handleSubmit","handleChange","onChange","required","API_URL","defaultFetch","method","body","configFetch","mode","headers","Accept","Content-Type","assign","JSON","stringify","postData","url","data","fetch","rep","err","getData","deleteData","postFile","downloadFile","filename","res","blob","download","Test","loading","testStarted","testFinished","user","tests","currentQuestion","questions","total","setSettings","getSettings","getTests","target","preventDefault","chooseTest","settingsArray","settingsObject","tune","howMany","chosenTest","floor","random","getQuestions","setCurrentQuestion","errorThreshold","components_Test_Slide","components_Test_User","Admin","submitting","deleteObj","refreshTest","saveDb","handleDbRecovery","obj","confirm","getTestData","_e$target","description","dataset","handleTypes","i","_id","val","typesMap","number","Number","_this6","finally","_this7","handleFormData","FormData","append","files","_this8","_this9","accept","map","key","data-description","test","q","Forbidden","CreateTest","CreateQuestion","uploadPhotos","handleUpload","clearCanvas","saveQuestion","checkIfQuestionCreated","reset","location","search","URLSearchParams","get","getQuestion","slide","_this$state$dimension","start","_this$state2","getZones","_this$state3","pattern","App","handleAuth","password","console","log","auth","BrowserRouter","components_Header","Switch","Route","path","render","exact","ReactDom","components_App","getElementById"],"mappings":"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","file":"static/js/main.a819e6df.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './Header.sass'\r\n\r\nconst Login = props => {\r\n  const { login, authFail, isLogging } = props\r\n\r\n  return (\r\n      <form className='loginForm' onSubmit = { login }>\r\n        {\r\n          authFail ?\r\n            <div className='authFailMessage'>Неверное имя пользователя или пароль!</div>\r\n          :\r\n            ''\r\n        }\r\n        <span>\r\n          <input type='login' name='login' placeholder='login'/>\r\n          <input type='password' name='password' placeholder='password'/>\r\n        </span>\r\n        <span>\r\n          <input disabled = { isLogging } type='submit' value='Войти'/>\r\n        </span>\r\n      </form>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Login)\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Login from './Login'\r\nimport './Header.sass'\r\n\r\nconst Header = props => {\r\n  const { isAdmin, authFail, logoff, login } = props\r\n\r\n  return (\r\n    <div className='headerArea'>\r\n      <Link className='header' to='/'>\r\n        <h1>XRay-test</h1>\r\n      </Link>\r\n      {\r\n        isAdmin\r\n          ? <div className='loginArea'>\r\n            Вход выполнен\r\n            <a className='logoff' onClick={logoff}>\r\n              Выйти\r\n            </a>\r\n          </div>\r\n          : <Login login={login} authFail={authFail}/>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  isAdmin: PropTypes.bool.isRequired,\r\n  logoff: PropTypes.func.isRequired,\r\n  login: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import React from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport './Menu.sass'\r\n\r\nclass Menu extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className='container'>\r\n        <div className='menuItem'>\r\n          <Link className='menuButton' to='/test'>Начать тест</Link>\r\n        </div>\r\n        <div className='menuItem'>\r\n          <Link className='menuButton' to='/admin'>Настройки</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Menu)\n","/**\r\n * Fetch method helper makes json transformation\r\n * @param {object} response - response object got from server\r\n * @returns {Promise} - boolean represents if json operation success\r\n */\r\nexport const handleResponse = response => response.json().then(json => response.ok ? json : Promise.reject(json))\r\n\r\n/**\r\n * Function saves access token in localStorage\r\n * @param {object} data - object that contains access token data (login, token, id)\r\n * @returns {null} - returns nothing if param wasnt defined\r\n */\r\nexport const setToken = token => {\r\n  return localStorage.setItem('token', token);\r\n}\r\n\r\n/**\r\n * Function get access token from localStorage\r\n * @returns {string} - if access token is stored in localStorage\r\n * @returns {boolean} - false boolean represents if is no access token\r\n */\r\nexport const getToken = () => {\r\n  if (localStorage.getItem('token')) {\n    return localStorage.getItem('token')\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Comments for differen results\r\n */\r\nexport const comments = {\r\n  right: 'Поздравляем! Правильный ответ.',\r\n  yellow: 'Ошибка! Опасных предметов нет!',\r\n  red1: 'Ошибка! Опасный предмет есть!',\r\n  red2: 'Ошибка! Опасного предмета нет в обозначенной Вами области!',\r\n  time: 'Время истекло!'\r\n}\r\n","class Drawer {\r\n  constructor (canvas) {\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d');\r\n\r\n    this.zones = [];\r\n\r\n    this.x1 = 0;\r\n    this.x2 = 0;\r\n    this.y1 = 0;\r\n    this.y2 = 0;\r\n\r\n    this.prevProperties = [0, 0, 0, 0];\r\n\r\n    this.clearListeners();\r\n    this.isDrawing = false;\r\n\r\n    this.handelMouseUp = this.handelMouseUp.bind(this);\r\n    this.handelMouseMove = this.handelMouseMove.bind(this);\r\n    this.handelMouseDown = this.handelMouseDown.bind(this);\r\n    this.clearZones = this.clearZones.bind(this);\r\n  }\r\n\r\n  handelMouseDown (e) {\r\n    this.isDrawing = true;\r\n\r\n    this.x1 = e.offsetX;\r\n    this.y1 = e.offsetY;\r\n  }\r\n\r\n  handelMouseMove (e) {\r\n    if (this.isDrawing) {\r\n      this.clearPreviousRect();\r\n\r\n      this.x2 = e.offsetX;\r\n      this.y2 = e.offsetY;\r\n\r\n      const rectProperties = this.getRectProperties();\r\n\r\n      this.drawRect(rectProperties);\r\n      this.prevProperties = rectProperties;\r\n    }\r\n  }\r\n\r\n  handelMouseUp (e) {\r\n    this.isDrawing = false;\r\n\r\n    this.clearPreviousRect();\r\n\r\n    this.x2 = e.offsetX;\r\n    this.y2 = e.offsetY;\r\n\r\n    const rectProperties = this.getRectProperties();\r\n\r\n    this.drawRect(rectProperties);\r\n    this.prevProperties = [0, 0, 0, 0];\r\n    this.saveZones();\r\n  }\r\n\r\n  drawRect (rectProperties, color = 'red') {\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.rect(...rectProperties);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  clearPreviousRect () {\r\n    const [x, y, width, heigth] = this.prevProperties;\r\n\r\n    this.ctx.clearRect(x - 1, y - 1, width + 2, heigth + 2);\r\n    this.ctx.beginPath();\r\n  }\r\n\r\n  saveZones () {\r\n    const leftUpCorner = this.getLeftUpCorner();\r\n    const rightDownCorner = this.getRightDownCorner();\r\n\r\n    this.zones.push([...leftUpCorner, ...rightDownCorner]);\r\n  }\r\n\r\n  /**\r\n   * Method draws rectangles got from API\r\n   */\r\n  drawOldZones (rectArray) {\r\n    this.zones = rectArray;\r\n\r\n    rectArray.forEach(dimensions => {\r\n      const rectProperties = [dimensions[0], dimensions[1]];\r\n      const width = dimensions[2] - dimensions[0];\r\n      const height = dimensions[3] - dimensions[1];\r\n\r\n      rectProperties.push(width);\r\n      rectProperties.push(height);\r\n\r\n      this.drawRect(rectProperties);\r\n    })\r\n  }\r\n\r\n  getLeftUpCorner () {\r\n    const { x1, x2, y1, y2 } = this;\r\n\r\n    return [Math.min(x1, x2), Math.min(y1, y2)]\r\n  }\r\n\r\n  getRightDownCorner () {\r\n    const { x1, x2, y1, y2 } = this;\r\n\r\n    return [Math.max(x1, x2), Math.max(y1, y2)]\r\n  }\r\n\r\n  getRectProperties () {\r\n    const leftUpCorner = this.getLeftUpCorner();\r\n    const rightDownCorner = this.getRightDownCorner();\r\n\r\n    let width = rightDownCorner[0] - leftUpCorner[0];\r\n    let height = rightDownCorner[1] - leftUpCorner[1];\r\n\r\n    return [...leftUpCorner, width, height];\r\n  }\r\n\r\n  start () {\r\n    this.canvas.addEventListener('mousedown', this.handelMouseDown)\r\n    this.canvas.addEventListener('mouseup', this.handelMouseUp)\r\n    this.canvas.addEventListener('mousemove', this.handelMouseMove)\r\n  }\r\n\r\n  clearListeners () {\r\n    this.canvas.removeEventListener('mousedown', this.handelMouseDown)\r\n    this.canvas.removeEventListener('mouseup', this.handelMouseUp)\r\n    this.canvas.removeEventListener('mousemove', this.handelMouseMove)\r\n  }\r\n\r\n  getZones () {\r\n    return this.zones;\r\n  }\r\n\r\n  clearZones () {\r\n    this.zones = [];\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.ctx.beginPath();\r\n  }\r\n\r\n  reset () {\r\n    this.clearListeners();\r\n    this.clearZones();\r\n  }\r\n}\r\n\r\nexport default Drawer;\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './Slide.sass'\r\nimport { comments } from './../../helpers';\r\nimport Drawer from '../Drawer'\r\n\r\nclass Slide extends React.PureComponent {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    const { settings, question } = this.props;\r\n    const canvasDraw = '#canvasDrawArea';\r\n    const canvasBackground = '#canvasBackground';\r\n\r\n    this.state = {\r\n      settings,\r\n      question,\r\n      canvasBackground,\r\n      canvasDraw,\r\n      comment: comments.right,\r\n      warningShowed: false,\r\n      answered: false,\r\n      result: 0,\r\n      slideShowed: false,\r\n      clickAllowed: false,\r\n      photoShowed: false\r\n    }\r\n\r\n    this.setClear = this.setClear.bind(this);\r\n    this.nextQuestion = this.nextQuestion.bind(this);\r\n    this.handleCanvasClick = this.handleCanvasClick.bind(this);\r\n    this.clearTimers = this.clearTimers.bind(this);\r\n    this.setQuestionTimers = this.setQuestionTimers.bind(this);\r\n    this.showWarning = this.showWarning.bind(this);\r\n    this.handleTimer = this.handleTimer.bind(this);\r\n    this.prepareCanvas = this.prepareCanvas.bind(this);\r\n    this.setNewQuestion = this.setNewQuestion.bind(this);\r\n    this.showPhoto = this.showPhoto.bind(this);\r\n\r\n    this.timers = [];\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { canvasDraw } = this.state;\r\n\r\n    this.drawer = this.props.drawer || new Drawer(document.querySelector(canvasDraw));\r\n    this.prepareCanvas = this.props.prepareCanvas || this.prepareCanvas;\r\n    this.setNewQuestion();\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState) {\r\n    const prevQuestion = prevProps.question;\r\n    const newQuestion = this.props.question;\r\n\r\n    if (newQuestion.name !== prevQuestion.name) {\r\n       this.setNewQuestion()\r\n    }\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this.clearTimers();\r\n  }\r\n\r\n  setNewQuestion () {\r\n    const { settings, question } = this.props;\r\n\r\n    this.setState({\r\n      settings,\r\n      question,\r\n      comment: comments.right,\r\n      answered: false,\r\n      slideShowed: true,\r\n      warningShowed: false,\r\n      result: 0\r\n    }, this.prepareCanvas);\r\n  }\r\n\r\n  /**\r\n   * Method sets canvas width and heigth, add background image\r\n   * and inits drawing dangerzone rectangels\r\n   * @returns {void}\r\n   */\r\n  prepareCanvas () {\r\n    this.setCanvasDimensions();\r\n\r\n    const background = new Image();\r\n\r\n    background.src = this.state.question.imgPath;\r\n    background.onload = () => {\r\n      this.setCanvasBackground(background);\r\n      this.animateSlideShow()\r\n          .then(() => {\r\n            this.setQuestionTimers();\r\n            this.setState({ clickAllowed: true });\r\n          })\r\n          .catch(window.alert);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method removes class 'canvasBeyondScreen' from canvasBackground\r\n   * to make it animated drive from the right end of screen\r\n   * @returns {void}\r\n   */\r\n  animateSlideShow () {\r\n    return new Promise((resolve, reject) => {\r\n        const bg = this.getCanvasBackground();\r\n        const dl = this.getCanvasDraw();\r\n\r\n        // If slide was loading too long and animation is over now\r\n        if (bg.offsetLeft === dl.offsetLeft) resolve();\r\n        else this.getCanvasBackground().addEventListener('animationend', resolve);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method set canvas width and heigth - both for background and draw layers\r\n   * @returns {void}\r\n   */\r\n  setCanvasDimensions () {\r\n    const { width, height } = this.state.question.dimensions;\r\n\r\n    this.getCanvasDraw().width = width;\r\n    this.getCanvasDraw().height = height;\r\n    this.getCanvasBackground().width = width;\r\n    this.getCanvasBackground().height = height;\r\n  }\r\n\r\n  /**\r\n   * Method calls background layer canvas to draw background\r\n   * @returns {Function} - drawImage method of canvas\r\n   */\r\n  setCanvasBackground (bg) {\r\n    return this.getCanvasBackground().getContext('2d').drawImage(bg, 0, 0)\r\n  }\r\n\r\n  /**\r\n   * Method draws old rectangles got from API if any\r\n   * and starts to listen to new user draw\r\n   * @returns {Function} - draw method of this.draw\r\n   */\r\n  drawDangerZone (c) {\r\n    const { dangerZones } = this.state.question;\r\n    if (dangerZones.length > 0) return this.drawer.drawOldZones(dangerZones);\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas draw layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasDraw () {\r\n    return document.querySelector(this.state.canvasDraw)\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas background layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasBackground () {\r\n    return document.querySelector(this.state.canvasBackground)\r\n  }\r\n\r\n  setClear () {\r\n    const { isDanger } = this.state.question;\r\n    const { redError } = this.state.settings;\r\n\r\n    if (isDanger === '1') {\r\n      this.setState({\r\n        comment: comments.red1,\r\n        result: redError\r\n      }, this.finishQuestion)\r\n    } else this.finishQuestion();\r\n  }\r\n\r\n  /**\r\n   * Method add timer to this.timers array\r\n   * for proper handling them\r\n   * @param {Function} timer - function to be called in time l\r\n   * @param {Number} l - time to call function\r\n   * @returns {void}\r\n   */\r\n  setTimer (timer, l) {\r\n    const totalTimers = this.timers.length;\r\n\r\n    this.timers[totalTimers] = setTimeout(timer, l);\r\n  }\r\n\r\n  /**\r\n   * Method adds timers for showing warning and\r\n   * for total time for question\r\n   * @returns {void}\r\n   */\r\n  setQuestionTimers () {\r\n    const { timeWarning, time } = this.state.settings;\r\n\r\n    this.setTimer(this.showWarning, timeWarning * 1000)\r\n    this.setTimer(this.handleTimer, time * 1000)\r\n  }\r\n\r\n  /**\r\n   * Method clears all timers in this.timers array\r\n   * @returns {void}\r\n   */\r\n  clearTimers () {\r\n    this.timers.forEach(timer => {\r\n      clearTimeout(timer)\r\n    });\r\n\r\n    this.timers = [];\r\n  }\r\n\r\n  handleTimer () {\r\n    const { answered } = this.state;\r\n    const { redError, yellowError } = this.state.settings;\r\n    const { isDanger } = this.state.question;\r\n\r\n    if (!answered) {\r\n      let result;\r\n\r\n      result = isDanger === '1' ? redError : yellowError;\r\n      return this.setState({ comment: comments.time, answered: true, result }, this.finishQuestion)\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  showWarning () {\r\n    return this.setState({ warningShowed: true })\r\n  }\r\n\r\n  handleCanvasClick (e) {\r\n    e.persist();\r\n\r\n    const { answered } = this.state;\r\n    const { isDanger } = this.state.question;\r\n    const { yellowError } = this.state.settings;\r\n\r\n    if (isDanger === '0' && !answered) {\r\n      return this.setState({ comment: comments.yellow, result: yellowError }, this.finishQuestion)\r\n    }\r\n\r\n    return this.checkIfClickInDangerZone(e.nativeEvent)\r\n  }\r\n\r\n  checkIfClickInDangerZone (e) {\r\n    const x = e.offsetX;\r\n    const y = e.offsetY;\r\n    const { answered } = this.state;\r\n    const { dangerZones } = this.state.question;\r\n    const { redError } = this.state.settings;\r\n    const isRight = dangerZones.some(zone =>\r\n      x > zone[0] && y > zone[1] && x < zone[2] && y < zone[3]\r\n    );\r\n\r\n    if (!answered) {\r\n      if (isRight) this.finishQuestion();\r\n      else this.setState({ comment: comments.red2, result: redError }, this.finishQuestion)\r\n    }\r\n\r\n    if (isRight) this.showPhoto(e);\r\n  }\r\n\r\n  showPhoto (e) {\r\n    this.setState({ photoShowed: true }, () => {\r\n      this.handlePhotoPosition(e);\r\n      this.setTimer(this.setState.bind(this, { photoShowed: false }), 2000)\r\n    });\r\n  }\r\n\r\n  handlePhotoPosition (e) {\r\n    const photo = document.querySelector('.dangerPicture');\r\n\r\n    if (!photo) return false;\r\n\r\n    photo.style.top = e.clientY - (photo.naturalHeight / 2) + 'px';\r\n    photo.style.left = e.clientX - (photo.naturalWidth / 2) + 'px';\r\n    this.setTimer(() => photo.classList.add('naturalSize'), 20);\r\n  }\r\n\r\n  finishQuestion () {\r\n    this.setState({ answered: true });\r\n    this.clearTimers();\r\n    this.drawDangerZone();\r\n    this.showResult();\r\n  }\r\n\r\n  showResult () {\r\n    const { result } = this.state;\r\n    const { sendResult } = this.props;\r\n\r\n    return sendResult(result);\r\n  }\r\n\r\n  nextQuestion () {\r\n    const { nextQuestion } = this.props;\r\n\r\n    this.setState({ slideShowed: false, clickAllowed: false });\r\n\r\n    return nextQuestion();\r\n  }\r\n\r\n  render () {\r\n    const { answered, question, warningShowed, result, photoShowed, comment, slideShowed, clickAllowed } = this.state;\r\n    const { yellowError } = this.state.settings;\r\n    const { dangerPicture } = question;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          Вопрос { question.name}\r\n        </div>\r\n        <div className='canvasArea'>\r\n          <div className='actionComment_container speech'>\r\n            {\r\n              answered ?\r\n              <div id='actionComment' className = { result === 0 ? 'green' : result === yellowError ? 'yellow' : 'red'} >{ answered ? comment : '' }</div> :\r\n              ''\r\n            }\r\n          </div>\r\n          <div className='markIcon_cotainer'>\r\n            {\r\n              answered ?\r\n              <span\r\n                id='markIcon'\r\n                className = { result === 0 ? 'greenMark' : result === yellowError ? 'yellowError' : 'redError'}\r\n              ></span> :\r\n              ''\r\n            }\r\n          </div>\r\n          <div className='clearButton_container'>\r\n            <button id='clearButton' disabled = { answered || !clickAllowed } onClick= { this.setClear } >&#9745;</button>\r\n          </div>\r\n          <div className='canvas_container'>\r\n            { slideShowed ?\r\n                <canvas className='animatedShow' id=\"canvasBackground\"></canvas>\r\n              :\r\n              ''\r\n            }\r\n          </div>\r\n          <div className='canvas_container'>\r\n            <canvas id=\"canvasDrawArea\" onClick= { clickAllowed ? (e) => this.handleCanvasClick(e) : () => {}}></canvas>\r\n          </div>\r\n          <div className='timerWarning_container'>\r\n            { warningShowed ?\r\n                <span id='timerWarning'>Внимание! Время истекает!</span>\r\n              :\r\n                ''\r\n            }\r\n          </div>\r\n          <div className='forwardButton_container'>\r\n            { /* Disabled when photoShowed coz otherwise you can see next danger picture when clicking 'forward' before prev danger picture disappears */ }\r\n            <button id='forwardButton' disabled = { !answered || photoShowed} onClick = { this.nextQuestion }>&#x25ba;</button>\r\n          </div>\r\n        </div>\r\n        <img className={photoShowed ? 'dangerPicture' : 'hidden'} src= { dangerPicture } alt='Опасный предмет'/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSlide.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  question: PropTypes.object.isRequired,\r\n  sendResult: PropTypes.func.isRequired,\r\n  nextQuestion: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Slide)\r\nexport { Slide }\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './User.sass'\r\n\r\nconst User = props => {\r\n  const { handleSubmit, handleChange } = props;\r\n\r\n  return (\r\n      <div>\r\n        <div className='paranja'>\r\n        </div>\r\n        <div className='userLoginArea'>\r\n          <form className = 'userLogin' onSubmit = { handleSubmit }>\r\n            <div>\r\n              <span>\r\n                <label>\r\n                  Ваше имя: &emsp;\r\n                  <input type='text' id='user' onChange = { handleChange } required/>\r\n                </label>\r\n              </span>\r\n              <span>\r\n                <input type='submit' value='Начать тест'/>\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nUser.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(User)\r\nexport { User }\r\n","import { getToken } from './helpers'\r\n\r\nexport const API_URL = 'http://K47_8:9245'\r\n\r\nexport const defaultFetch = function (method = 'GET', body) {\r\n  const configFetch = {\r\n      method,\r\n      mode: 'cors',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'token': getToken()\r\n      }\r\n    }\r\n\r\n  if (body) Object.assign(configFetch, { body: JSON.stringify(body) })\r\n\r\n  return configFetch\r\n}\n\nexport const fileFetch = function (body) {\n  return {\n      method: 'POST',\n      mode: 'cors',\n      body: body,\n      headers: {\n        'token': getToken()\n      }\n    }\n}\n\nexport const downLoadFetch = function () {\n  return {\n    method: 'GET',\n    mode: 'cors',\n    headers: {\n      'token': getToken()\n    }\n  }\n}\n","import download from 'downloadjs';\r\nimport { API_URL, defaultFetch, fileFetch, downLoadFetch } from './config'\r\nimport { handleResponse } from './helpers'\r\n\r\nconst postData = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, defaultFetch('POST', data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst getData = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, defaultFetch('GET', data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst deleteData = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, defaultFetch('DELETE', data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst postFile = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, fileFetch(data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst downloadFile = function (url, filename) {\r\n  return fetch(`${API_URL}/${url}`, downLoadFetch())\r\n          .then(res => res.blob())\r\n          .then(blob => download(blob, filename));\r\n}\r\n\r\nexport { postData, getData, postFile, deleteData, downloadFile }\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Slide from './Slide'\r\nimport User from './User'\r\nimport './Test.sass'\r\nimport { getData } from './../../actions'\r\n\r\nclass Test extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      loading: false,\r\n      testStarted: false,\r\n      testFinished: false,\r\n      user: '',\r\n      settings: {},\r\n      tests: [],\r\n      currentQuestion: -1,\r\n      questions: [],\r\n      total: 100\r\n    }\r\n\r\n    this.setSettings = this.setSettings.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.nextQuestion = this.nextQuestion.bind(this);\r\n    this.sendResult = this.sendResult.bind(this);\r\n\r\n    this.getData = this.props.getData || getData;\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getSettings();\r\n    this.getTests();\r\n  }\r\n\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault()\r\n\r\n    this.chooseTest()\r\n  }\r\n\r\n  getSettings () {\r\n    return this.getData('settings')\r\n               .then(settings => this.setSettings(settings))\r\n               .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTests () {\r\n    return this.getData('tests')\r\n               .then(tests => this.setState({ tests }))\r\n               .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  setSettings (settingsArray) {\r\n    const settingsObject = {};\r\n\r\n    settingsArray.forEach(tune => {\r\n      settingsObject[tune.name] = tune.value;\r\n    })\r\n\r\n    this.setState({ settings: settingsObject })\r\n  }\r\n\r\n  chooseTest () {\r\n    const { tests } = this.state;\r\n    const howMany = tests.length;\r\n    const variant = Math.floor(Math.random() * howMany);\r\n    const chosenTest = tests[variant].name;\r\n\r\n    this.getQuestions(chosenTest);\r\n  }\r\n\r\n  getQuestions (chosenTest) {\r\n    return this.getData(`questions/${chosenTest}`)\r\n               .then(questions => this.setState({ questions }, this.setCurrentQuestion))\r\n               .catch(err => window.alert(err))\r\n  }\r\n\r\n  setCurrentQuestion () {\r\n    const currentQuestion = this.state.currentQuestion + 1;\r\n    const totalQuestions = this.state.questions.length;\r\n\r\n    if (currentQuestion < totalQuestions) this.setState({ testStarted: true, currentQuestion })\r\n    else this.setState({ testFinished: true, testStarted: false })\r\n  }\r\n\r\n  nextQuestion () {\r\n    return this.setCurrentQuestion();\r\n  }\r\n\r\n  sendResult (result) {\r\n    let { total } = this.state;\r\n\r\n    total = total - result;\r\n    this.setState({ total });\r\n  }\r\n\r\n  render () {\r\n    const { testStarted, settings, currentQuestion, questions, total, testFinished } = this.state;\r\n    const { drawer, prepareCanvas } = this.props;\r\n    const { errorThreshold } = settings;\r\n\r\n    return (\r\n      <div className='container'>\r\n        { testStarted ?\r\n            (<div className='testArea'>\r\n              <div>\r\n                Итого: { total }%\r\n              </div>\r\n              <Slide\r\n                prepareCanvas = { prepareCanvas }\r\n                drawer = { drawer }\r\n                question = { questions[currentQuestion] }\r\n                settings = { settings }\r\n                sendResult = { this.sendResult }\r\n                nextQuestion = { this.nextQuestion }\r\n              />\r\n            </div>)\r\n          :\r\n          testFinished ?\r\n            (<div className='resultArea'>\r\n              <h2>\r\n                Ваш результат:\r\n                <span\r\n                className = { total < errorThreshold ? 'fail' : total < 100 ? 'enought' : 'perfect'}\r\n                > { total }%</span>\r\n              </h2>\r\n            </div>)\r\n          :\r\n            (<div className='userArea'>\r\n              <User\r\n                handleChange = { this.handleChange }\r\n                handleSubmit = { this.handleSubmit }\r\n              />\r\n            </div>)\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Test)\nexport { Test }\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { getData, deleteData, postData, postFile, downloadFile } from './../../actions'\r\n\r\nclass Admin extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      questions: [],\r\n      settings: [],\r\n      tests: [],\r\n      submitting: false,\r\n      err: false\r\n    }\r\n\r\n    this.deleteObj = this.deleteObj.bind(this);\r\n    this.refreshTest = this.refreshTest.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.saveDb = this.saveDb.bind(this);\r\n    this.handleDbRecovery = this.handleDbRecovery.bind(this);\r\n\r\n    this.getData = this.props.getData || getData;\r\n    this.postData = this.props.postData || postData;\r\n    this.postFile = this.props.postFile || postFile;\r\n    this.deleteData = this.props.deleteData || deleteData;\r\n    this.downloadFile = this.props.downloadFile || downloadFile;\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getSettings();\r\n    this.getTests();\r\n    this.getQuestions();\r\n  }\r\n\r\n  getSettings () {\r\n    return this.getData('settings')\r\n               .then(settings => this.setState({ settings }))\r\n               .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTests () {\r\n    return this.getData('tests')\r\n               .then(tests => this.setState({ tests }))\r\n               .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getQuestions () {\r\n    return this.getData('questions')\r\n               .then(questions => this.setState({ questions }))\r\n               .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTestData () {\r\n    this.getTests();\r\n    this.getQuestions();\r\n  }\r\n\r\n  deleteObj (obj, name) {\r\n    let conf = window.confirm('Вы уверены?');\r\n\r\n    if (conf) {\r\n      return this.deleteData(`deleteobj/${obj}/${name}`)\r\n                 .then(rep => this.getTestData())\r\n                 .catch(err => this.setState({ err: true }))\r\n    }\r\n  }\r\n\r\n  refreshTest (name) {\r\n    return this.postData('test', { name })\r\n               .then(rep => window.alert('Успешно обновлено!'))\r\n               .catch(window.alert)\r\n  }\r\n\r\n  handleChange (e) {\r\n    let { value, type } = e.target;\r\n    const { description } = e.target && e.target.dataset;\r\n    const name = e.target.id;\r\n    const { settings } = this.state;\r\n\r\n    value = this.handleTypes(value, type);\r\n\r\n    settings.forEach((tune, i) => {\r\n      if (name === tune.name) settings[i] = { _id: tune._id, name, value, type, description }\r\n    })\r\n\r\n    this.setState({ settings })\r\n  }\r\n\r\n  handleTypes (val, type) {\r\n    const typesMap = {\r\n      number: () => Number(val)\r\n    }\r\n\r\n    if (typesMap[type]) return typesMap[type](val)\r\n    else return val\r\n  }\r\n\r\n  saveDb () {\r\n    this.setState({ submitting: true })\r\n\r\n    return this.getData('savedb')\r\n               .then(() => {\r\n                  // Added timeout, otherwise firefox downloads only 1 file\r\n                  this.downloadFile('download_dump/tests.json', 'tests.json');\r\n                  setTimeout(() =>\r\n                    this.downloadFile('download_dump/questions.json', 'questions.json'),\r\n                  100);\r\n               })\r\n               .catch(window.alert)\r\n               .finally(() => this.setState({ submitting: false }))\r\n  }\r\n\r\n  handleDbRecovery (e) {\r\n    e.preventDefault();\r\n\r\n    let sure = window.confirm('Вы уверены? Текущая база данных будет перезаписана!')\r\n\r\n    if (!sure) return;\r\n\r\n    this.setState({ submitting: true })\r\n\r\n    const data = this.props.handleFormData || this.handleFormData()\r\n\r\n    return this.postFile('loaddb', data)\r\n               .then(() => {\r\n                  window.alert('Успешно восстановлено!');\r\n                  this.getTestData();\r\n               })\r\n               .catch(window.alert)\r\n               .finally(() => this.setState({ submitting: false }))\r\n  }\r\n\r\n  handleFormData () {\r\n    const questions = document.querySelector('input[type=\"file\"][name=\"questions\"]');\r\n    const tests = document.querySelector('input[type=\"file\"][name=\"tests\"]');\r\n    const data = new FormData();\r\n\r\n    data.append('questions', questions.files[0]);\r\n    data.append('tests', tests.files[0]);\r\n\r\n    return data;\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault();\r\n    this.setState({ submitting: true })\r\n\r\n    const { settings } = this.state;\r\n\r\n    return this.postData('settings', { settings })\r\n               .then(rep => window.alert('Успешно сохранено!'))\r\n               .catch(window.alert)\r\n               .finally(() => this.setState({ submitting: false }))\r\n  }\r\n\r\n  render () {\r\n    const { settings, tests, questions, submitting } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='newTest'>\r\n          <div className='menuItem'>\r\n            <Link className='menuButton' to='/create/test'>Создать новый тест</Link>\r\n            <Link className='menuButton' to='/create/question'>Создать новый вопрос</Link>\r\n          </div>\r\n          <div className='dbControls'>\r\n            <button disabled={submitting} className='menuButton small saveDb' onClick={this.saveDb}>Сохранить базу</button>\r\n            <form className='loadDb' onSubmit={this.handleDbRecovery}>\r\n              <label> Выберите JSON файл с вопросами &emsp;\r\n                <input type='file' name='questions' accept='.json' required/>\r\n              </label><br/>\r\n              <label> Выберите JSON файл с тестами &emsp;\r\n                <input type='file' name='tests' accept='.json' required/>\r\n              </label><br/>\r\n              <input disabled={submitting} type='submit' value='Восстановить базу'/>\r\n            </form>\r\n          </div>\r\n        </div>\r\n          <h2>Настройки</h2>\r\n          <div className='formArea'>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {\r\n                settings.map(tune => {\r\n                  return <div key={tune._id}>\r\n                    <label>\r\n                      {tune.description}: &emsp;\r\n                      <input\r\n                        id={tune.name}\r\n                        data-description={tune.description}\r\n                        type={tune.type}\r\n                        value={tune.value}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                })\r\n              }\r\n              <div>\r\n                <input disabled={submitting} type='submit' value='Сохранить'/>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        <div>\r\n        </div>\r\n        <div className='oldTest'>\r\n          <h2>Тесты</h2>\r\n          <ul>\r\n            {\r\n              tests.map(test => {\r\n                return <li key={test._id}>{test.name} &emsp;\r\n                <a onClick={() => this.refreshTest(test.name)}>Обновить</a> &emsp;\r\n                <a className='danger' onClick={() => this.deleteObj('Test', test.name)}>Удалить</a>\r\n                </li>\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n        <div className='oldQuestions'>\r\n          <h2>Вопросы</h2>\r\n          <ul>\r\n            {\r\n              questions.map(q => {\r\n                return <li key={q._id}>{q.name} &emsp;\r\n                  <Link to={`/create/question?question=${q.name}`}>Изменить</Link>&emsp;\r\n                  <a className='danger' onClick={() => this.deleteObj('Question', q.name)}>Удалить</a>\r\n                </li>\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Admin)\nexport { Admin }\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Forbidden extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>403 Нет доступа</h1>\r\n        <h3>Залогиньтесь для продолжения</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Forbidden)\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { postData } from './../../actions'\r\n\r\nclass CreateTest extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      err: false,\r\n      loading: false,\r\n      name: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.postData = props.postData || postData;\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault();\r\n\r\n    const { name } = this.state;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    return this.postData('test', { name })\r\n               .then(rep => window.alert('Успешно сохранено!'))\r\n               .catch(window.alert)\r\n               .finally(() => this.setState({ loading: false }))\r\n  }\r\n\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  render () {\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='formArea'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div>\r\n              <span>\r\n                <label>\r\n                  Номер теста: &emsp;<input id='name' onChange={this.handleChange} type='number' min='1'/>\r\n                </label>\r\n              </span>\r\n              <span>\r\n                <input disabled= { loading } type='submit' value='Создать'/>\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateTest);\r\nexport { CreateTest };\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { postFile, postData, getData } from './../../actions'\r\nimport Drawer from '../Drawer'\r\nimport './CreateQuestion.sass'\r\n\r\nclass CreateQuestion extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      loading: false,\r\n      err: false,\r\n      imgPath: '',\r\n      dimensions: { width: 0, height: 0 },\r\n      dangerZones: [],\r\n      name: '',\r\n      isDanger: '1'\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.uploadPhotos = this.uploadPhotos.bind(this);\r\n    this.handleUpload = this.handleUpload.bind(this);\r\n    this.clearCanvas = this.clearCanvas.bind(this);\r\n    this.saveQuestion = this.saveQuestion.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    const canvasDraw = '#canvasDrawArea';\r\n    const canvasBackground = '#canvasBackground';\r\n    this.setState({ canvasBackground, canvasDraw })\r\n\r\n    this.drawer = this.props.drawer || new Drawer(document.querySelector(canvasDraw));\r\n    this.postFile = this.props.postFile || postFile;\r\n    this.postData = this.props.postData || postData;\r\n    this.getData = this.props.getData || getData;\r\n    this.prepareCanvas = this.props.prepareCanvas || this.prepareCanvas;\r\n    this.checkIfQuestionCreated()\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this.drawer.reset();\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas draw layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasDraw () {\r\n    return document.querySelector(this.state.canvasDraw)\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas background layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasBackground () {\r\n    return document.querySelector(this.state.canvasBackground)\r\n  }\r\n\r\n  /**\r\n   * Method checks location query\r\n   * if query is defined ( /create/question?question=name )\r\n   * it means user want to edit old question\r\n   * so we fetch question to API\r\n   * @return {Function} - fetch to API for question data\r\n   */\r\n  checkIfQuestionCreated () {\r\n    if (this.props.location && this.props.location.search.length > 0) {\r\n      const query = new URLSearchParams(this.props.location.search);\r\n      const question = query.get('question');\r\n\r\n      return this.getQuestion(question)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method fetches to API for question data\r\n   * if any - renders it\r\n   * @returns {Function} - fetch to API\r\n   */\r\n  getQuestion (question) {\r\n    return this.getData(`question/${question}`)\r\n               .then(rep => {\r\n                  if (rep) {\r\n                    this.setState(rep, this.prepareCanvas)\r\n                  }\r\n               })\r\n               .catch(window.alert)\r\n  }\r\n\r\n  /**\r\n   * Method handles upload of slide and photo\r\n   * then it gets dimensions of slide and prepares canvas for it\r\n   * @return {void}\r\n   */\r\n  uploadPhotos (e) {\r\n    e.preventDefault();\r\n\r\n    const data = this.props.handleFormData || this.handleFormData();\r\n    const handleUpload = this.props.handleUpload || this.handleUpload;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    this.postFile('preupload', data)\r\n      .then(handleUpload)\r\n      .catch(window.alert)\r\n      .finally(() => this.setState({ loading: false }));\r\n  }\r\n\r\n  /**\r\n    * Method takes response form API and set state for canvas drawing\r\n    * @param {Object} rep - reply from API\r\n    * @retusn {void}\r\n    */\r\n  handleUpload (rep) {\r\n    const { name } = this.state;\r\n    const imgPath = `/images/${name}_slide.${rep.type}`;\r\n    this.drawer.reset();\r\n\r\n    this.setState({\r\n      imgPath: imgPath,\r\n      dimensions: rep\r\n    }, this.prepareCanvas)\r\n  }\r\n\r\n  /**\r\n   * Method gatheres all formData to single object for upload\r\n   * @return {Object} - object to upload\r\n   */\r\n  handleFormData () {\r\n    const slide = document.querySelector('input[name=\"slide\"]');\r\n    const photo = document.querySelector('input[name=\"photo\"]');\r\n    const { name, isDanger } = this.state;\r\n    const data = new FormData();\r\n\r\n    data.append('question', name);\r\n    data.append('slide', slide.files[0]);\r\n    if (isDanger === '1') data.append('photo', photo.files[0]);\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Method handles changes in input and pass it to state\r\n   * @returns {void}\r\n   */\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  /**\r\n   * Method sets canvas width and heigth, add background image\r\n   * and inits drawing dangerzone rectangels\r\n   * @returns {void}\r\n   */\r\n  prepareCanvas () {\r\n    this.setCanvasDimensions();\r\n\r\n    const background = new Image();\r\n\r\n    background.src = this.state.imgPath;\r\n    background.onload = () => {\r\n      this.setCanvasBackground(background)\r\n      this.drawDangerZone();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method set canvas width and heigth - both for background and draw layers\r\n   * @returns {void}\r\n   */\r\n  setCanvasDimensions () {\r\n    const { width, height } = this.state.dimensions;\r\n\r\n    this.getCanvasDraw().width = width;\r\n    this.getCanvasDraw().height = height;\r\n    this.getCanvasBackground().width = width;\r\n    this.getCanvasBackground().height = height;\r\n  }\r\n\r\n  /**\r\n   * Method calls background layer canvas to draw background\r\n   * @returns {Function} - drawImage method of canvas\r\n   */\r\n  setCanvasBackground (bg) {\r\n    return this.getCanvasBackground().getContext('2d').drawImage(bg, 0, 0)\r\n  }\r\n\r\n  /**\r\n   * Method draws old rectangles got from API if any\r\n   * and starts to listen to new user draw\r\n   * @returns {Function} - start method of this.draw\r\n   */\r\n  drawDangerZone (c) {\r\n    const { dangerZones } = this.state;\r\n\r\n    if (dangerZones.length > 0) this.drawer.drawOldZones(dangerZones);\r\n\r\n    return this.drawer.start()\r\n  }\r\n\r\n  /**\r\n   * Method calls clearZones mthod of this.drawer\r\n   * to clear canvas draw layer\r\n   */\r\n  clearCanvas () {\r\n    return this.drawer.clearZones()\r\n  }\r\n\r\n  /**\r\n   * Method gatheres all question data to single object and post to API\r\n   * @returns {Function} - fetch post API\r\n   */\r\n  saveQuestion () {\r\n    const { imgPath, name, isDanger, dimensions } = this.state;\r\n\r\n    const question = {\r\n      name,\r\n      isDanger,\r\n      dangerZones: this.drawer.getZones(),\r\n      imgPath,\r\n      dimensions\r\n     };\r\n\r\n     this.setState({ loading: true });\r\n\r\n     return this.postData('savequestion', question)\r\n                .then(rep => window.alert('Успешно сохранено!'))\r\n                .catch(window.alert)\r\n                .finally(() => this.setState({ loading: false }))\r\n  }\r\n\r\n  render () {\r\n    const { loading, isDanger, name } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='formArea'>\r\n          <form onSubmit={this.uploadPhotos}>\r\n            <div>\r\n              <label>\r\n                Вопрос: &emsp;\r\n                <input\r\n                  id='name'\r\n                  onChange={this.handleChange}\r\n                  pattern='[0-9]+_[0-9]+'\r\n                  name='name'\r\n                  type='text'\r\n                  value = {name.length > 0 ? name : ''}\r\n                  placeholder='№ Теста_№ вопроса'\r\n                  required\r\n                />\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                Загрузите слайд: &emsp;\r\n                <input\r\n                  name='slide'\r\n                  type='file'\r\n                  required\r\n                />\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                Багаж опасен? &emsp;\r\n                <select\r\n                  id='isDanger'\r\n                  onChange={this.handleChange}\r\n                  value={isDanger === '1' ? '1' : '0'}\r\n                >\r\n                  <option value='1'>Да</option>\r\n                  <option value='0'>нет</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            {\r\n              isDanger === '1' ?\r\n              <div>\r\n                <label>\r\n                  Загрузите фото: &emsp;\r\n                  <input\r\n                    name='photo'\r\n                    type='file'\r\n                    required\r\n                  />\r\n                </label>\r\n              </div> :\r\n              <span></span>\r\n            }\r\n            <div>\r\n              <input disabled={loading} type='submit' value='Продолжить'/>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <div className='canvasControls'>\r\n            <button className='danger' onClick={this.clearCanvas}>Очистить</button>\r\n            <button className='success' disabled={loading || name === ''} onClick={this.saveQuestion}>Сохранить</button>\r\n          </div>\r\n          <div className='createQuestion canvasArea'>\r\n            <canvas id=\"canvasBackground\"></canvas>\r\n            <canvas id=\"canvasDrawArea\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateQuestion)\r\nexport { CreateQuestion };\r\n","import React from 'react'\r\nimport Header from '../Header'\r\nimport Menu from '../Menu'\r\nimport Test from '../Test'\r\nimport Admin from '../Admin'\r\nimport Forbidden from '../Forbidden'\r\nimport CreateTest from '../CreateTest'\r\nimport CreateQuestion from '../CreateQuestion'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport '../../main.sass'\r\nimport { postData } from '../../actions.js'\r\nimport { setToken } from '../../helpers'\r\n\r\nclass App extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isAdmin: false,\r\n      authFail: false,\r\n      isLogging: false,\r\n      token: undefined\r\n    }\r\n\r\n    this.login = this.login.bind(this)\r\n    this.logoff = this.logoff.bind(this)\r\n    this.handleAuth = this.handleAuth.bind(this)\r\n\r\n    this.postData = this.props.postData || postData;\r\n    this.setToken = this.props.setToken || setToken;\r\n  }\r\n\r\n  login (e) {\r\n    e.preventDefault()\r\n\r\n    const data = {\r\n      login: e.target.login.value,\r\n      password: e.target.password.value\r\n    }\r\n\r\n    this.setState({ isLogging: true })\r\n\r\n    return this.postData('login', data)\r\n               .then(this.handleAuth)\r\n               .catch(console.log)\r\n               .finally(() => this.setState({ isLogging: false }))\r\n  }\r\n\r\n  handleAuth (rep) {\r\n    if (rep.auth) this.setToken(rep.token);\r\n    this.setState({ isAdmin: rep.auth, authFail: !rep.auth, token: rep.token })\r\n  }\r\n\r\n  logoff () {\r\n    this.setState({\r\n      isAdmin: false,\r\n      token: undefined\r\n     })\r\n\r\n     this.setToken(null)\r\n  }\r\n\r\n  render () {\r\n    const { isAdmin, authFail, isLogging } = this.state\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Header\r\n           isAdmin={isAdmin}\r\n           authFail={authFail}\r\n           isLogging = {isLogging}\r\n           login={this.login}\r\n           logoff={this.logoff}\r\n           />\r\n          <Switch>\r\n            <Route path='/' render={Menu} exact/>\r\n            <Route path='/test' render={Test}/>\r\n            <Route path='/admin' render={isAdmin ? Admin : Forbidden}/>\r\n            <Route path='/create/test' render={isAdmin ? CreateTest : Forbidden}/>\r\n            <Route path='/create/question' render={isAdmin ? CreateQuestion : Forbidden}/>\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDom.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}