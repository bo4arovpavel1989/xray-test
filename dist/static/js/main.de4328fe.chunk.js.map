{"version":3,"sources":["components/Header/Login.js","components/Header/index.js","components/Menu/index.js","helpers.js","components/Drawer/index.js","components/Test/Slide.js","components/Test/User.js","config.js","actions.js","components/Test/index.js","components/Admin/index.js","components/Forbidden/index.js","components/CreateTest/index.js","components/CreateQuestion/index.js","index.js"],"names":["withRouter","props","login","authFail","isLogging","react_default","a","createElement","className","onSubmit","type","name","placeholder","disabled","value","isAdmin","logoff","Link","to","onClick","Header_Login","Menu","React","Component","handleResponse","response","json","then","ok","Promise","reject","setToken","token","localStorage","setItem","getToken","getItem","comments","right","yellow","red1","red2","time","Drawer","canvas","Object","classCallCheck","this","ctx","getContext","zones","x1","x2","y1","y2","prevProperties","clearListeners","isDrawing","handelMouseUp","bind","handelMouseMove","handelMouseDown","clearZones","e","offsetX","offsetY","clearPreviousRect","rectProperties","getRectProperties","drawRect","saveZones","_this$ctx","color","arguments","length","undefined","strokeStyle","rect","apply","toConsumableArray","stroke","_this$prevProperties","slicedToArray","x","y","width","heigth","clearRect","beginPath","leftUpCorner","getLeftUpCorner","rightDownCorner","getRightDownCorner","push","concat","rectArray","_this","forEach","dimensions","height","Math","min","max","addEventListener","removeEventListener","Slide","_this$props","possibleConstructorReturn","getPrototypeOf","call","settings","question","state","canvasBackground","canvasDraw","comment","warningShowed","answered","result","photoShowed","setClear","assertThisInitialized","getResult","handleCanvasClick","clearTimers","setQuestionTimers","showWarning","handleTimer","prepareCanvas","setNewQuestion","showPhoto","timers","drawer","document","querySelector","prevProps","prevState","prevQuestion","removeClickListener","_this$props2","setState","getCanvasDraw","_this2","setCanvasDimensions","background","Image","src","imgPath","onload","setCanvasBackground","animateSlideShow","setClickListener","catch","window","alert","_this3","resolve","slide","getCanvasBackground","classList","add","setTimer","err","remove","_this$state$question$","bg","drawImage","c","dangerZones","drawOldZones","isDanger","redError","finishQuestion","timer","l","totalTimers","setTimeout","_this$state$settings","timeWarning","clearTimeout","_this$state$settings2","yellowError","checkIfClickInDangerZone","isRight","some","zone","_this4","handlePhotoPosition","photo","style","top","clientY","naturalHeight","left","clientX","naturalWidth","drawDangerZone","showResult","sendResult","nextQuestion","hideSlide","_this$state","dangerPicture","id","alt","PureComponent","handleSubmit","handleChange","onChange","required","API_URL","defaultFetch","method","body","configFetch","mode","headers","Accept","Content-Type","assign","JSON","stringify","postData","url","data","fetch","rep","getData","postFile","Test","loading","testStarted","testFinished","user","tests","currentTest","currentQuestion","questions","total","setSettings","getSettings","getTests","target","preventDefault","chooseTest","settingsArray","settingsObject","tune","howMany","chosenTest","floor","random","getQuestions","setCurrentQuestion","errorThreshold","components_Test_Slide","components_Test_User","Admin","deleteObj","refreshTest","obj","_this5","confirm","_e$target","description","dataset","handleTypes","i","val","typesMap","number","Number","_this6","map","key","_id","data-description","test","q","Forbidden","CreateTest","finally","CreateQuestion","uploadPhotos","clearCanvas","saveQuestion","checkIfQuestionCreated","reset","location","search","URLSearchParams","get","getQuestion","handleFormData","FormData","append","files","_this$state$dimension","start","_this$state2","getZones","_this$state3","pattern","App","handleAuth","password","console","log","auth","BrowserRouter","components_Header","Switch","Route","path","render","exact","ReactDom","src_App","getElementById"],"mappings":"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","file":"static/js/main.de4328fe.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './Header.sass'\r\n\r\nconst Login = props => {\r\n  const { login, authFail, isLogging } = props\r\n\r\n  return (\r\n      <form className='loginForm' onSubmit = { login }>\r\n        {\r\n          authFail ?\r\n            <div className='authFailMessage'>Неверное имя пользователя или пароль!</div>\r\n          :\r\n            ''\r\n        }\r\n        <span>\r\n          <input type='login' name='login' placeholder='login'/>\r\n          <input type='password' name='password' placeholder='password'/>\r\n        </span>\r\n        <span>\r\n          <input disabled = { isLogging } type='submit' value='Войти'/>\r\n        </span>\r\n      </form>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Login)\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Login from './Login'\r\nimport './Header.sass'\r\n\r\nconst Header = props => {\r\n  const { isAdmin, authFail, logoff, login } = props\r\n\r\n  return (\r\n    <div className='headerArea'>\r\n      <Link className='header' to='/'>\r\n        <h1>XRay-test</h1>\r\n      </Link>\r\n      {\r\n        isAdmin\r\n          ? <div className='loginArea'>\r\n            Вход выполнен\r\n            <a className='logoff' onClick={logoff}>\r\n              Выйти\r\n            </a>\r\n          </div>\r\n          : <Login login={login} authFail={authFail}/>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  isAdmin: PropTypes.bool.isRequired,\r\n  logoff: PropTypes.func.isRequired,\r\n  login: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import React from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport './Menu.sass'\r\n\r\nclass Menu extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className='container'>\r\n        <div className='menuItem'>\r\n          <Link className='menuButton' to='/test'>Начать тест</Link>\r\n        </div>\r\n        <div className='menuItem'>\r\n          <Link className='menuButton' to='/admin'>Настройки</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Menu)\n","/**\r\n * Fetch method helper makes json transformation\r\n * @param {object} response - response object got from server\r\n * @returns {Promise} - boolean represents if json operation success\r\n */\r\nexport const handleResponse = response => response.json().then(json => response.ok ? json : Promise.reject(json))\r\n\r\n/**\r\n * Function saves access token in localStorage\r\n * @param {object} data - object that contains access token data (login, token, id)\r\n * @returns {null} - returns nothing if param wasnt defined\r\n */\r\nexport const setToken = token => {\r\n  return localStorage.setItem('token', token);\r\n}\r\n\r\n/**\r\n * Function get access token from localStorage\r\n * @returns {string} - if access token is stored in localStorage\r\n * @returns {boolean} - false boolean represents if is no access token\r\n */\r\nexport const getToken = () => {\r\n  if (localStorage.getItem('token')) {\n    return localStorage.getItem('token')\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Comments for differen results\r\n */\r\nexport const comments = {\r\n  right: 'Поздравляем! Правильный ответ.',\r\n  yellow: 'Ошибка! Опасных предметов нет!',\r\n  red1: 'Ошибка! Опасный предмет есть!',\r\n  red2: 'Ошибка! Опасного предмета нет в обозначенной Вами области!',\r\n  time: 'Время истекло!'\r\n}\r\n","class Drawer {\r\n  constructor (canvas) {\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d');\r\n\r\n    this.zones = [];\r\n\r\n    this.x1 = 0;\r\n    this.x2 = 0;\r\n    this.y1 = 0;\r\n    this.y2 = 0;\r\n\r\n    this.prevProperties = [0, 0, 0, 0];\r\n\r\n    this.clearListeners();\r\n    this.isDrawing = false;\r\n\r\n    this.handelMouseUp = this.handelMouseUp.bind(this);\r\n    this.handelMouseMove = this.handelMouseMove.bind(this);\r\n    this.handelMouseDown = this.handelMouseDown.bind(this);\r\n    this.clearZones = this.clearZones.bind(this);\r\n  }\r\n\r\n  handelMouseDown (e) {\r\n    this.isDrawing = true;\r\n\r\n    this.x1 = e.offsetX;\r\n    this.y1 = e.offsetY;\r\n  }\r\n\r\n  handelMouseMove (e) {\r\n    if (this.isDrawing) {\r\n      this.clearPreviousRect();\r\n\r\n      this.x2 = e.offsetX;\r\n      this.y2 = e.offsetY;\r\n\r\n      const rectProperties = this.getRectProperties();\r\n\r\n      this.drawRect(rectProperties);\r\n      this.prevProperties = rectProperties;\r\n    }\r\n  }\r\n\r\n  handelMouseUp (e) {\r\n    this.isDrawing = false;\r\n\r\n    this.clearPreviousRect();\r\n\r\n    this.x2 = e.offsetX;\r\n    this.y2 = e.offsetY;\r\n\r\n    const rectProperties = this.getRectProperties();\r\n\r\n    this.drawRect(rectProperties);\r\n    this.prevProperties = [0, 0, 0, 0];\r\n    this.saveZones();\r\n  }\r\n\r\n  drawRect (rectProperties, color = 'red') {\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.rect(...rectProperties);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  clearPreviousRect () {\r\n    const [x, y, width, heigth] = this.prevProperties;\r\n\r\n    this.ctx.clearRect(x - 1, y - 1, width + 2, heigth + 2);\r\n    this.ctx.beginPath();\r\n  }\r\n\r\n  saveZones () {\r\n    const leftUpCorner = this.getLeftUpCorner();\r\n    const rightDownCorner = this.getRightDownCorner();\r\n\r\n    this.zones.push([...leftUpCorner, ...rightDownCorner]);\r\n  }\r\n\r\n  /**\r\n   * Method draws rectangles got from API\r\n   */\r\n  drawOldZones (rectArray) {\r\n    this.zones = rectArray;\r\n\r\n    rectArray.forEach(dimensions => {\r\n      const rectProperties = [dimensions[0], dimensions[1]];\r\n      const width = dimensions[2] - dimensions[0];\r\n      const height = dimensions[3] - dimensions[1];\r\n\r\n      rectProperties.push(width);\r\n      rectProperties.push(height);\r\n\r\n      this.drawRect(rectProperties);\r\n    })\r\n  }\r\n\r\n  getLeftUpCorner () {\r\n    const { x1, x2, y1, y2 } = this;\r\n\r\n    return [Math.min(x1, x2), Math.min(y1, y2)]\r\n  }\r\n\r\n  getRightDownCorner () {\r\n    const { x1, x2, y1, y2 } = this;\r\n\r\n    return [Math.max(x1, x2), Math.max(y1, y2)]\r\n  }\r\n\r\n  getRectProperties () {\r\n    const leftUpCorner = this.getLeftUpCorner();\r\n    const rightDownCorner = this.getRightDownCorner();\r\n\r\n    let width = rightDownCorner[0] - leftUpCorner[0];\r\n    let height = rightDownCorner[1] - leftUpCorner[1];\r\n\r\n    return [...leftUpCorner, width, height];\r\n  }\r\n\r\n  start () {\r\n    this.canvas.addEventListener('mousedown', this.handelMouseDown)\r\n    this.canvas.addEventListener('mouseup', this.handelMouseUp)\r\n    this.canvas.addEventListener('mousemove', this.handelMouseMove)\r\n  }\r\n\r\n  clearListeners () {\r\n    this.canvas.removeEventListener('mousedown', this.handelMouseDown)\r\n    this.canvas.removeEventListener('mouseup', this.handelMouseUp)\r\n    this.canvas.removeEventListener('mousemove', this.handelMouseMove)\r\n  }\r\n\r\n  getZones () {\r\n    return this.zones;\r\n  }\r\n\r\n  clearZones () {\r\n    this.zones = [];\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.ctx.beginPath();\r\n  }\r\n\r\n  reset () {\r\n    this.clearListeners();\r\n    this.clearZones();\r\n  }\r\n}\r\n\r\nexport default Drawer;\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './Slide.sass'\r\nimport { comments } from './../../helpers';\r\nimport Drawer from '../Drawer'\r\n\r\nclass Slide extends React.PureComponent {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    const { settings, question } = this.props;\r\n    const canvasDraw = '#canvasDrawArea';\r\n    const canvasBackground = '#canvasBackground';\r\n\r\n    this.state = {\r\n      settings,\r\n      question,\r\n      canvasBackground,\r\n      canvasDraw,\r\n      comment: comments.right,\r\n      warningShowed: false,\r\n      answered: false,\r\n      result: 0,\r\n      photoShowed: false\r\n    }\r\n\r\n    this.setClear = this.setClear.bind(this);\r\n    this.getResult = this.getResult.bind(this);\r\n    this.handleCanvasClick = this.handleCanvasClick.bind(this);\r\n    this.clearTimers = this.clearTimers.bind(this);\r\n    this.setQuestionTimers = this.setQuestionTimers.bind(this);\r\n    this.showWarning = this.showWarning.bind(this);\r\n    this.handleTimer = this.handleTimer.bind(this);\r\n    this.prepareCanvas = this.prepareCanvas.bind(this);\r\n    this.setNewQuestion = this.setNewQuestion.bind(this);\r\n    this.showPhoto = this.showPhoto.bind(this);\r\n\r\n    this.timers = [];\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { canvasDraw } = this.state;\r\n\r\n    this.drawer = new Drawer(document.querySelector(canvasDraw));\r\n    this.setNewQuestion();\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState) {\r\n    const prevQuestion = prevProps.question;\r\n    const newQuestion = this.props.question;\r\n\r\n    if (newQuestion.name !== prevQuestion.name) {\r\n       this.setNewQuestion()\r\n    }\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this.clearTimers();\r\n    this.removeClickListener();\r\n  }\r\n\r\n  setNewQuestion () {\r\n    const { settings, question } = this.props;\r\n\r\n    this.setState({\r\n      settings,\r\n      question,\r\n      comment: comments.right,\r\n      answered: false,\r\n      warningShowed: false,\r\n      result: 0\r\n    }, this.prepareCanvas);\r\n  }\r\n\r\n  removeClickListener () {\r\n    const drawLayer = this.getCanvasDraw();\r\n\r\n    drawLayer.removeEventListener('click', this.handleCanvasClick)\r\n  }\r\n\r\n  /**\r\n   * Method sets canvas width and heigth, add background image\r\n   * and inits drawing dangerzone rectangels\r\n   * @returns {void}\r\n   */\r\n  prepareCanvas () {\r\n    this.setCanvasDimensions();\r\n\r\n    const background = new Image();\r\n\r\n    background.src = this.state.question.imgPath;\r\n    background.onload = () => {\r\n      this.setCanvasBackground(background);\r\n      this.animateSlideShow()\r\n          .then(() => {\r\n            this.setQuestionTimers();\r\n            this.setClickListener();\r\n          })\r\n          .catch(window.alert);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method removes class 'canvasBeyondScreen' from canvasBackground\r\n   * to make it animated drive from the right end of screen\r\n   * @returns {void}\r\n   */\r\n  animateSlideShow () {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const slide = this.getCanvasBackground();\r\n\r\n        slide.classList.add('hasTransition');\r\n        this.setTimer(() => slide.classList.add('canvasShowed'), 10)\r\n        // 3s - time of animation. then timer starts and user can click\r\n        this.setTimer(resolve, 3000)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method removes transition from slide - to make it disappear immediately\r\n   * it disappears - with removingh class 'canvasShowed'\r\n   * @returns {void}\r\n   */\r\n  hideSlide () {\r\n    const slide = this.getCanvasBackground();\r\n\r\n    slide.classList.remove('hasTransition');\r\n    slide.classList.remove('canvasShowed');\r\n  }\r\n\r\n  /**\r\n   * Method set canvas width and heigth - both for background and draw layers\r\n   * @returns {void}\r\n   */\r\n  setCanvasDimensions () {\r\n    const { width, height } = this.state.question.dimensions;\r\n\r\n    this.getCanvasDraw().width = width;\r\n    this.getCanvasDraw().height = height;\r\n    this.getCanvasBackground().width = width;\r\n    this.getCanvasBackground().height = height;\r\n  }\r\n\r\n  /**\r\n   * Method calls background layer canvas to draw background\r\n   * @returns {Function} - drawImage method of canvas\r\n   */\r\n  setCanvasBackground (bg) {\r\n    return this.getCanvasBackground().getContext('2d').drawImage(bg, 0, 0)\r\n  }\r\n\r\n  /**\r\n   * Method draws old rectangles got from API if any\r\n   * and starts to listen to new user draw\r\n   * @returns {Function} - draw method of this.draw\r\n   */\r\n  drawDangerZone (c) {\r\n    const { dangerZones } = this.state.question;\r\n    if (dangerZones.length > 0) return this.drawer.drawOldZones(dangerZones);\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas draw layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasDraw () {\r\n    return document.querySelector(this.state.canvasDraw)\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas background layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasBackground () {\r\n    return document.querySelector(this.state.canvasBackground)\r\n  }\r\n\r\n  setClear () {\r\n    const { isDanger } = this.state.question;\r\n    const { redError } = this.state.settings;\r\n\r\n    if (isDanger === '1') {\r\n      this.setState({\r\n        comment: comments.red1,\r\n        result: redError\r\n      }, this.finishQuestion)\r\n    } else this.finishQuestion();\r\n  }\r\n\r\n  setClickListener () {\r\n    const drawLayer = this.getCanvasDraw();\r\n\r\n    drawLayer.addEventListener('click', this.handleCanvasClick)\r\n  }\r\n\r\n  /**\r\n   * Method add timer to this.timers array\r\n   * for proper handling them\r\n   * @param {Function} timer - function to be called in time l\r\n   * @param {Number} l - time to call function\r\n   * @returns {void}\r\n   */\r\n  setTimer (timer, l) {\r\n    const totalTimers = this.timers.length;\r\n\r\n    this.timers[totalTimers] = setTimeout(timer, l);\r\n  }\r\n\r\n  /**\r\n   * Method adds timers for showing warning and\r\n   * for total time for question\r\n   * @returns {void}\r\n   */\r\n  setQuestionTimers () {\r\n    const { timeWarning, time } = this.state.settings;\r\n\r\n    this.setTimer(this.showWarning, timeWarning * 1000)\r\n    this.setTimer(this.handleTimer, time * 1000)\r\n  }\r\n\r\n  /**\r\n   * Method clears all timers in this.timers array\r\n   * @returns {void}\r\n   */\r\n  clearTimers () {\r\n    this.timers.forEach(timer => {\r\n      clearTimeout(timer)\r\n    });\r\n\r\n    this.timers = [];\r\n  }\r\n\r\n  handleTimer () {\r\n    const { answered } = this.state;\r\n    const { redError, yellowError } = this.state.settings;\r\n    const { isDanger } = this.state.question;\r\n\r\n    if (!answered) {\r\n      let result;\r\n\r\n      result = isDanger === '1' ? redError : yellowError;\r\n      return this.setState({ comment: comments.time, answered: true, result }, this.finishQuestion)\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  showWarning () {\r\n    return this.setState({ warningShowed: true })\r\n  }\r\n\r\n  handleCanvasClick (e) {\r\n    const { answered } = this.state;\r\n    const { isDanger } = this.state.question;\r\n    const { yellowError } = this.state.settings;\r\n\r\n    if (isDanger === '0' && !answered) {\r\n      return this.setState({ comment: comments.yellow, result: yellowError }, this.finishQuestion)\r\n    }\r\n\r\n    return this.checkIfClickInDangerZone(e)\r\n  }\r\n\r\n  checkIfClickInDangerZone (e) {\r\n    const x = e.offsetX;\r\n    const y = e.offsetY;\r\n    const { answered } = this.state;\r\n    const { dangerZones } = this.state.question;\r\n    const { redError } = this.state.settings;\r\n    const isRight = dangerZones.some(zone =>\r\n      x > zone[0] && y > zone[1] && x < zone[2] && y < zone[3]\r\n    );\r\n\r\n    if (!answered) {\r\n      if (isRight) this.finishQuestion();\r\n      else this.setState({ comment: comments.red2, result: redError }, this.finishQuestion)\r\n    }\r\n\r\n    if (isRight) this.showPhoto(e);\r\n  }\r\n\r\n  showPhoto (e) {\r\n    this.setState({ photoShowed: true }, () => {\r\n      this.handlePhotoPosition(e);\r\n      this.setTimer(this.setState.bind(this, { photoShowed: false }), 2000)\r\n    });\r\n  }\r\n\r\n  handlePhotoPosition (e) {\r\n    const photo = document.querySelector('.dangerPicture');\r\n\r\n    photo.style.top = e.clientY - (photo.naturalHeight / 2) + 'px';\r\n    photo.style.left = e.clientX - (photo.naturalWidth / 2) + 'px';\r\n    this.setTimer(() => photo.classList.add('naturalSize'), 20);\r\n  }\r\n\r\n  finishQuestion () {\r\n    this.setState({ answered: true });\r\n    this.clearTimers();\r\n    this.drawDangerZone();\r\n    this.showResult();\r\n  }\r\n\r\n  showResult () {\r\n    const { result } = this.state;\r\n    const { sendResult } = this.props;\r\n\r\n    return sendResult(result);\r\n  }\r\n\r\n  getResult () {\r\n    const { nextQuestion } = this.props;\r\n\r\n    this.removeClickListener();\r\n    this.hideSlide();\r\n\r\n    return nextQuestion();\r\n  }\r\n\r\n  render () {\r\n    const { answered, question, warningShowed, result, photoShowed, comment } = this.state;\r\n    const { yellowError } = this.state.settings;\r\n    const { dangerPicture } = question;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          Вопрос { question.name}\r\n        </div>\r\n        <div className='canvasArea'>\r\n          <div className='actionComment_container speech'>\r\n            {\r\n              answered ?\r\n              <div id='actionComment' className = { result === 0 ? 'green' : result === yellowError ? 'yellow' : 'red'} >{ answered ? comment : '' }</div> :\r\n              ''\r\n            }\r\n          </div>\r\n          <div className='markIcon_cotainer'>\r\n            {\r\n              answered ?\r\n              <span\r\n                id='markIcon'\r\n                className = { result === 0 ? 'greenMark' : result === yellowError ? 'yellowError' : 'redError'}\r\n              ></span> :\r\n              ''\r\n            }\r\n          </div>\r\n          <div className='clearButton_container'>\r\n            <button id='clearButton' disabled = { answered } onClick= { this.setClear } >&#9745;</button>\r\n          </div>\r\n          <div className='canvas_container'>\r\n            <canvas className='canvasBeyondScreen hasTransition' id=\"canvasBackground\"></canvas>\r\n          </div>\r\n          <div className='canvas_container'>\r\n            <canvas id=\"canvasDrawArea\"></canvas>\r\n          </div>\r\n          <div className='timerWarning_container'>\r\n            { warningShowed ?\r\n                <span id='timerWarning'>Внимание! Время истекает!</span>\r\n              :\r\n                ''\r\n            }\r\n          </div>\r\n          <div className='forwardButton_container'>\r\n            { /* Disabled when photoShowed coz otherwise you can see next danger picture when clicking 'forward' before prev danger picture disappears */ }\r\n            <button id='forwardButton' disabled = { !answered || photoShowed} onClick = { this.getResult }>&#x25ba;</button>\r\n          </div>\r\n        </div>\r\n        <img className={photoShowed ? 'dangerPicture' : 'hidden'} src= { dangerPicture } alt='Опасный предмет'/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSlide.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  question: PropTypes.object.isRequired,\r\n  sendResult: PropTypes.func.isRequired,\r\n  nextQuestion: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Slide)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './User.sass'\r\n\r\nconst User = props => {\r\n  const { handleSubmit, handleChange } = props;\r\n\r\n  return (\r\n      <div>\r\n        <div className='paranja'>\r\n        </div>\r\n        <div className='userLoginArea'>\r\n          <form className = 'userLogin' onSubmit = { handleSubmit }>\r\n            <div>\r\n              <span>\r\n                <label>\r\n                  Ваше имя: &emsp;\r\n                  <input type='text' id='user' onChange = { handleChange } required/>\r\n                </label>\r\n              </span>\r\n              <span>\r\n                <input type='submit' value='Начать тест'/>\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nUser.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(User)\r\n","import { getToken } from './helpers'\r\n\r\nexport const API_URL = 'http://localhost:3001'\r\n\r\nexport const defaultFetch = function (method = 'GET', body) {\r\n  const configFetch = {\r\n      method,\r\n      mode: 'cors',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'token': getToken()\r\n      }\r\n    }\r\n\r\n  if (body) Object.assign(configFetch, { body: JSON.stringify(body) })\r\n\r\n  return configFetch\r\n}\n\nexport const fileFetch = function (body) {\n  return {\n      method: 'POST',\n      mode: 'cors',\n      body: body,\n      headers: {\n        'token': getToken()\n      }\n    }\n}\n","import { API_URL, defaultFetch, fileFetch } from './config'\r\nimport { handleResponse } from './helpers'\r\n\r\nconst postData = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, defaultFetch('POST', data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst getData = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, defaultFetch('GET', data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst deleteData = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, defaultFetch('DELETE', data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst postFile = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, fileFetch(data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nexport { postData, getData, postFile, deleteData }\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Slide from './Slide'\r\nimport User from './User'\r\nimport './Test.sass'\r\nimport { getData } from './../../actions'\r\n\r\nclass Test extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      loading: false,\r\n      testStarted: false,\r\n      testFinished: false,\r\n      user: '',\r\n      settings: {},\r\n      tests: [],\r\n      currentTest: '',\r\n      currentQuestion: -1,\r\n      questions: [],\r\n      total: 100\r\n    }\r\n\r\n    this.setSettings = this.setSettings.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.nextQuestion = this.nextQuestion.bind(this);\r\n    this.sendResult = this.sendResult.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getSettings();\r\n    this.getTests();\r\n  }\r\n\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault()\r\n\r\n    this.chooseTest()\r\n  }\r\n\r\n  getSettings () {\r\n    return getData('settings')\r\n            .then(settings => this.setSettings(settings))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTests () {\r\n    return getData('tests')\r\n            .then(tests => this.setState({ tests }))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  setSettings (settingsArray) {\r\n    const settingsObject = {};\r\n\r\n    settingsArray.forEach(tune => {\r\n      settingsObject[tune.name] = tune.value;\r\n    })\r\n\r\n    this.setState({ settings: settingsObject })\r\n  }\r\n\r\n  chooseTest () {\r\n    const { tests } = this.state;\r\n    const howMany = tests.length;\r\n    const variant = Math.floor(Math.random() * howMany);\r\n    const chosenTest = tests[variant].name;\r\n\r\n    this.getQuestions(chosenTest);\r\n  }\r\n\r\n  getQuestions (chosenTest) {\r\n    return getData(`questions/${chosenTest}`)\r\n            .then(questions => this.setState({ questions }, this.setCurrentQuestion))\r\n            .catch(err => window.alert(err))\r\n  }\r\n\r\n  setCurrentQuestion () {\r\n    const currentQuestion = this.state.currentQuestion + 1;\r\n    const totalQuestions = this.state.questions.length;\r\n\r\n    if (currentQuestion < totalQuestions) this.setState({ testStarted: true, currentQuestion })\r\n    else this.setState({ testFinished: true, testStarted: false })\r\n  }\r\n\r\n  nextQuestion () {\r\n    return this.setCurrentQuestion();\r\n  }\r\n\r\n  sendResult (result) {\r\n    let { total } = this.state;\r\n\r\n    total = total - result;\r\n    this.setState({ total });\r\n  }\r\n\r\n  render () {\r\n    const { testStarted, settings, currentQuestion, questions, total, testFinished } = this.state;\r\n    const { errorThreshold } = settings;\r\n\r\n    return (\r\n      <div className='container'>\r\n        { testStarted ?\r\n            (<div className='testArea'>\r\n              <div>\r\n                Итого: { total }%\r\n              </div>\r\n              <Slide\r\n                question = { questions[currentQuestion] }\r\n                settings = { settings }\r\n                sendResult = { this.sendResult }\r\n                nextQuestion = { this.nextQuestion }\r\n              />\r\n            </div>)\r\n          :\r\n          testFinished ?\r\n            (<div className='resultArea'>\r\n              <h2>\r\n                Ваш результат:\r\n                <span\r\n                className = { total < errorThreshold ? 'fail' : total < 100 ? 'enought' : 'perfect'}\r\n                > { total }%</span>\r\n              </h2>\r\n            </div>)\r\n          :\r\n            (<div className='userArea'>\r\n              <User\r\n                handleChange = { this.handleChange }\r\n                handleSubmit = { this.handleSubmit }\r\n              />\r\n            </div>)\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Test)\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { getData, deleteData, postData } from './../../actions'\r\n\r\nclass Admin extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      questions: [],\r\n      settings: [],\r\n      tests: [],\r\n      err: false\r\n    }\r\n\r\n    this.deleteObj = this.deleteObj.bind(this);\r\n    this.refreshTest = this.refreshTest.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getSettings();\r\n    this.getTests();\r\n    this.getQuestions();\r\n  }\r\n\r\n  getSettings () {\r\n    return getData('settings')\r\n            .then(settings => this.setState({ settings }))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTests () {\r\n    return getData('tests')\r\n            .then(tests => this.setState({ tests }))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getQuestions () {\r\n    return getData('questions')\r\n            .then(questions => this.setState({ questions }))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getData () {\r\n    this.getTests();\r\n    this.getQuestions();\r\n  }\r\n\r\n  deleteObj (obj, name) {\r\n    let conf = window.confirm('Вы уверены?');\r\n\r\n    if (conf) {\r\n      return deleteData(`deleteobj/${obj}/${name}`)\r\n              .then(rep => this.getData())\r\n              .catch(err => this.setState({ err: true }))\r\n    }\r\n  }\r\n\r\n  refreshTest (name) {\r\n    return postData('test', { name })\r\n            .then(rep => window.alert('Успешно обновлено!'))\r\n            .catch(err => window.alert(err))\r\n  }\r\n\r\n  handleChange (e) {\r\n    let { value, type } = e.target;\r\n    const { description } = e.target.dataset;\r\n    const name = e.target.id;\r\n    const { settings } = this.state;\r\n\r\n    value = this.handleTypes(value, type);\r\n\r\n    settings.forEach((tune, i) => {\r\n      if (name === tune.name) settings[i] = { name, value, type, description }\r\n    })\r\n\r\n    this.setState({ settings })\r\n  }\r\n\r\n  handleTypes (val, type) {\r\n    const typesMap = {\r\n      number: () => Number(val)\r\n    }\r\n\r\n    if (typesMap[type]) return typesMap[type](val)\r\n    else return val\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault();\r\n\r\n    const { settings } = this.state;\r\n\r\n    return postData('settings', { settings })\r\n            .then(rep => window.alert('Успешно сохранено!'))\r\n            .catch(err => window.alert(err))\r\n  }\r\n\r\n  render () {\r\n    const { settings, tests, questions } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='newTest'>\r\n          <div className='menuItem'>\r\n            <Link className='menuButton' to='/create/test'>Создать новый тест</Link>\r\n            <Link className='menuButton' to='/create/question'>Создать новый вопрос</Link>\r\n          </div>\r\n        </div>\r\n          <h2>Настройки</h2>\r\n          <div className='formArea'>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {\r\n                settings.map(tune => {\r\n                  return <div key={tune._id}>\r\n                    <label>\r\n                      {tune.description}: &emsp;\r\n                      <input\r\n                        id={tune.name}\r\n                        data-description={tune.description}\r\n                        type={tune.type}\r\n                        value={tune.value}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                })\r\n              }\r\n              <div>\r\n                <input type='submit' value='Сохранить'/>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        <div>\r\n        </div>\r\n        <div className='oldTest'>\r\n          <h2>Тесты</h2>\r\n          <ul>\r\n            {\r\n              tests.map(test => {\r\n                return <li key={test._id}>{test.name} &emsp;\r\n                <a onClick={() => this.refreshTest(test.name)}>Обновить</a> &emsp;\r\n                <a className='danger' onClick={() => this.deleteObj('Test', test.name)}>Удалить</a>\r\n                </li>\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n        <div className='oldQuestions'>\r\n          <h2>Вопросы</h2>\r\n          <ul>\r\n            {\r\n              questions.map(q => {\r\n                return <li key={q._id}>{q.name} &emsp;\r\n                  <Link to={`/create/question?question=${q.name}`}>Изменить</Link>&emsp;\r\n                  <a className='danger' onClick={() => this.deleteObj('Question', q.name)}>Удалить</a>\r\n                </li>\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Admin)\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Forbidden extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>403 Нет доступа</h1>\r\n        <h3>Залогиньтесь для продолжения</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Forbidden)\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { postData } from './../../actions'\r\n\r\nclass CreateTest extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      err: false,\r\n      loading: false,\r\n      name: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault();\r\n\r\n    const { name } = this.state;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    return postData('test', { name })\r\n            .then(rep => window.alert('Успешно сохранено!'))\r\n            .catch(err => window.alert(err))\r\n            .finally(() => this.setState({ loading: false }))\r\n  }\r\n\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  render () {\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='formArea'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div>\r\n              <span>\r\n                <label>\r\n                  Номер теста: &emsp;<input id='name' onChange={this.handleChange} type='number' min='1'/>\r\n                </label>\r\n              </span>\r\n              <span>\r\n                <input disabled= { loading } type='submit' value='Создать'/>\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateTest)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { postFile, postData, getData } from './../../actions'\r\nimport Drawer from '../Drawer'\r\nimport './CreateQuestion.sass'\r\n\r\nclass CreateQuestion extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      loading: false,\r\n      err: false,\r\n      imgPath: '',\r\n      dimensions: { width: 0, height: 0 },\r\n      dangerZones: [],\r\n      name: '',\r\n      isDanger: '1'\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.uploadPhotos = this.uploadPhotos.bind(this);\r\n    this.clearCanvas = this.clearCanvas.bind(this);\r\n    this.saveQuestion = this.saveQuestion.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    const canvasDraw = '#canvasDrawArea';\r\n    const canvasBackground = '#canvasBackground';\r\n    this.setState({ canvasBackground, canvasDraw })\r\n\r\n    this.drawer = new Drawer(document.querySelector(canvasDraw));\r\n    this.checkIfQuestionCreated()\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this.drawer.reset();\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas draw layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasDraw () {\r\n    return document.querySelector(this.state.canvasDraw)\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas background layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasBackground () {\r\n    return document.querySelector(this.state.canvasBackground)\r\n  }\r\n\r\n  /**\r\n   * Method checks location query\r\n   * if query is defined ( /create/question?question=name )\r\n   * it means user want to edit old question\r\n   * so we fetch question to API\r\n   * @return {Function} - fetch to API for question data\r\n   */\r\n  checkIfQuestionCreated () {\r\n    if (this.props.location.search.length > 0) {\r\n      const query = new URLSearchParams(this.props.location.search);\r\n      const question = query.get('question');\r\n\r\n      return this.getQuestion(question)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method fetches to API for question data\r\n   * if any - renders it\r\n   * @returns {Function} - fetch to API\r\n   */\r\n  getQuestion (question) {\r\n    return getData(`question/${question}`)\r\n            .then(rep => {\r\n              if (rep) {\r\n                this.setState(rep, this.prepareCanvas)\r\n              }\r\n            })\r\n            .catch(err => window.alert(err))\r\n  }\r\n\r\n  /**\r\n   * Method handles upload of slide and photo\r\n   * then it gets dimensions of slide and prepares canvas for it\r\n   * @return {void}\r\n   */\r\n  uploadPhotos (e) {\r\n    e.preventDefault();\r\n\r\n    const data = this.handleFormData();\r\n\r\n    this.setState({ loading: true });\r\n    postFile('preupload', data)\r\n      .then(rep => {\r\n        const { name } = this.state;\r\n        const imgPath = `/images/${name}_slide.${rep.type}`;\r\n        this.drawer.reset();\r\n\r\n        this.setState({\r\n          imgPath: imgPath,\r\n          dimensions: rep\r\n        }, this.prepareCanvas)\r\n      })\r\n      .catch(err => window.alert(err))\r\n      .finally(() => this.setState({ loading: false }));\r\n  }\r\n\r\n  /**\r\n   * Method gatheres all formData to single object for upload\r\n   * @return {Object} - object to upload\r\n   */\r\n  handleFormData () {\r\n    const slide = document.querySelector('input[name=\"slide\"]');\r\n    const photo = document.querySelector('input[name=\"photo\"]');\r\n    const { name, isDanger } = this.state;\r\n    const data = new FormData();\r\n\r\n    data.append('question', name);\r\n    data.append('slide', slide.files[0]);\r\n    if (isDanger === '1') data.append('photo', photo.files[0]);\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Method handles changes in input and pass it to state\r\n   * @returns {void}\r\n   */\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  /**\r\n   * Method sets canvas width and heigth, add background image\r\n   * and inits drawing dangerzone rectangels\r\n   * @returns {void}\r\n   */\r\n  prepareCanvas () {\r\n    this.setCanvasDimensions();\r\n\r\n    const background = new Image();\r\n\r\n    background.src = this.state.imgPath;\r\n    background.onload = () => {\r\n      this.setCanvasBackground(background)\r\n      this.drawDangerZone();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method set canvas width and heigth - both for background and draw layers\r\n   * @returns {void}\r\n   */\r\n  setCanvasDimensions () {\r\n    const { width, height } = this.state.dimensions;\r\n\r\n    this.getCanvasDraw().width = width;\r\n    this.getCanvasDraw().height = height;\r\n    this.getCanvasBackground().width = width;\r\n    this.getCanvasBackground().height = height;\r\n  }\r\n\r\n  /**\r\n   * Method calls background layer canvas to draw background\r\n   * @returns {Function} - drawImage method of canvas\r\n   */\r\n  setCanvasBackground (bg) {\r\n    return this.getCanvasBackground().getContext('2d').drawImage(bg, 0, 0)\r\n  }\r\n\r\n  /**\r\n   * Method draws old rectangles got from API if any\r\n   * and starts to listen to new user draw\r\n   * @returns {Function} - start method of this.draw\r\n   */\r\n  drawDangerZone (c) {\r\n    const { dangerZones } = this.state;\r\n\r\n    if (dangerZones.length > 0) this.drawer.drawOldZones(dangerZones);\r\n\r\n    return this.drawer.start()\r\n  }\r\n\r\n  /**\r\n   * Method calls clearZones mthod of this.drawer\r\n   * to clear canvas draw layer\r\n   */\r\n  clearCanvas () {\r\n    return this.drawer.clearZones()\r\n  }\r\n\r\n  /**\r\n   * Method gatheres all question data to single object and post to API\r\n   * @returns {Function} - fetch post API\r\n   */\r\n  saveQuestion () {\r\n    const { imgPath, name, isDanger, dimensions } = this.state;\r\n\r\n    const question = {\r\n      name,\r\n      isDanger,\r\n      dangerZones: this.drawer.getZones(),\r\n      imgPath,\r\n      dimensions\r\n     };\r\n\r\n     this.setState({ loading: true });\r\n\r\n     return postData('savequestion', question)\r\n              .then(rep => window.alert('Успешно сохранено!'))\r\n              .catch(err => window.alert(err))\r\n              .finally(() => this.setState({ loading: false }))\r\n  }\r\n\r\n  render () {\r\n    const { loading, isDanger, name } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='formArea'>\r\n          <form onSubmit={this.uploadPhotos}>\r\n            <div>\r\n              <label>\r\n                Вопрос: &emsp;\r\n                <input\r\n                  id='name'\r\n                  onChange={this.handleChange}\r\n                  pattern='[0-9]+_[0-9]+'\r\n                  name='name'\r\n                  type='text'\r\n                  value = {name.length > 0 ? name : ''}\r\n                  placeholder='№ Теста_№ вопроса'\r\n                  required\r\n                />\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                Загрузите слайд: &emsp;\r\n                <input\r\n                  name='slide'\r\n                  type='file'\r\n                  required\r\n                />\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                Багаж опасен? &emsp;\r\n                <select\r\n                  id='isDanger'\r\n                  onChange={this.handleChange}\r\n                  value={isDanger === '1' ? '1' : '0'}\r\n                >\r\n                  <option value='1'>Да</option>\r\n                  <option value='0'>нет</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            {\r\n              isDanger === '1' ?\r\n              <div>\r\n                <label>\r\n                  Загрузите фото: &emsp;\r\n                  <input\r\n                    name='photo'\r\n                    type='file'\r\n                    required\r\n                  />\r\n                </label>\r\n              </div> :\r\n              <span></span>\r\n            }\r\n            <div>\r\n              <input disabled={loading} type='submit' value='Продолжить'/>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <div className='canvasControls'>\r\n            <button className='danger' onClick={this.clearCanvas}>Очистить</button>\r\n            <button className='success' disabled={loading || name === ''} onClick={this.saveQuestion}>Сохранить</button>\r\n          </div>\r\n          <div className='createQuestion canvasArea'>\r\n            <canvas id=\"canvasBackground\"></canvas>\r\n            <canvas id=\"canvasDrawArea\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateQuestion)\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport Header from './components/Header'\r\nimport Menu from './components/Menu'\r\nimport Test from './components/Test'\r\nimport Admin from './components/Admin'\r\nimport Forbidden from './components/Forbidden'\r\nimport CreateTest from './components/CreateTest'\r\nimport CreateQuestion from './components/CreateQuestion'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport './main.sass'\r\nimport { postData } from './actions'\r\nimport { setToken } from './helpers'\r\n\r\nclass App extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      isAdmin: false,\r\n      authFail: false,\r\n      isLogging: false,\r\n      token: undefined\r\n    }\r\n\r\n    this.login = this.login.bind(this)\r\n    this.logoff = this.logoff.bind(this)\r\n    this.handleAuth = this.handleAuth.bind(this)\r\n  }\r\n\r\n  login (e) {\r\n    e.preventDefault()\r\n\r\n    const data = {\r\n      login: e.target.login.value,\r\n      password: e.target.password.value\r\n    }\r\n\r\n    this.setState({ isLogging: true })\r\n\r\n    postData('login', data)\r\n      .then(rep => this.handleAuth(rep))\r\n      .catch(err => console.log(err))\r\n      .finally(() => this.setState({ isLogging: false }))\r\n  }\r\n\r\n  handleAuth (rep) {\r\n    if (rep.auth) setToken(rep.token)\r\n    this.setState({ isAdmin: rep.auth, authFail: !rep.auth, token: rep.token })\r\n  }\r\n\r\n  logoff () {\r\n    this.setState({\r\n      isAdmin: false,\r\n      token: undefined\r\n     })\r\n\r\n     setToken(null)\r\n  }\r\n\r\n  render () {\r\n    const { isAdmin, authFail, isLogging } = this.state\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Header\r\n           isAdmin={isAdmin}\r\n           authFail={authFail}\r\n           isLogging = {isLogging}\r\n           login={this.login}\r\n           logoff={this.logoff}\r\n           />\r\n          <Switch>\r\n            <Route path='/' render={Menu} exact/>\r\n            <Route path='/test' render={Test}/>\r\n            <Route path='/admin' render={isAdmin ? Admin : Forbidden}/>\r\n            <Route path='/create/test' render={isAdmin ? CreateTest : Forbidden}/>\r\n            <Route path='/create/question' render={isAdmin ? CreateQuestion : Forbidden}/>\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nReactDom.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}