{"version":3,"sources":["components/Header/Login.js","components/Header/index.js","components/Menu/index.js","helpers.js","components/Drawer/index.js","components/Test/Slide.js","components/Test/User.js","config.js","actions.js","components/Test/index.js","components/Admin/index.js","components/Forbidden/index.js","components/CreateTest/index.js","components/CreateQuestion/index.js","index.js"],"names":["withRouter","props","login","authFail","isLogging","react_default","a","createElement","className","onSubmit","type","name","placeholder","disabled","value","isAdmin","logoff","Link","to","onClick","Header_Login","Menu","React","Component","handleResponse","response","json","then","ok","Promise","reject","setToken","token","localStorage","setItem","getToken","getItem","comments","right","yellow","red1","red2","time","Drawer","canvas","Object","classCallCheck","this","ctx","getContext","zones","x1","x2","y1","y2","prevProperties","clearListeners","isDrawing","handelMouseUp","bind","handelMouseMove","handelMouseDown","clearZones","e","offsetX","offsetY","clearPreviousRect","rectProperties","getRectProperties","drawRect","saveZones","_this$ctx","color","arguments","length","undefined","strokeStyle","rect","apply","toConsumableArray","stroke","_this$prevProperties","slicedToArray","x","y","width","heigth","clearRect","beginPath","leftUpCorner","getLeftUpCorner","rightDownCorner","getRightDownCorner","push","concat","rectArray","_this","forEach","dimensions","height","Math","min","max","addEventListener","removeEventListener","Slide","_this$props","possibleConstructorReturn","getPrototypeOf","call","settings","question","state","canvasBackground","canvasDraw","comment","warningShowed","answered","result","slideShowed","photoShowed","setClear","assertThisInitialized","nextQuestion","handleCanvasClick","clearTimers","setQuestionTimers","showWarning","handleTimer","prepareCanvas","setNewQuestion","showPhoto","timers","drawer","document","querySelector","prevProps","prevState","prevQuestion","removeClickListener","_this$props2","setState","getCanvasDraw","_this2","setCanvasDimensions","background","Image","src","imgPath","onload","setCanvasBackground","animateSlideShow","setClickListener","catch","window","alert","_this3","resolve","bg","getCanvasBackground","dl","offsetLeft","_this$state$question$","drawImage","c","dangerZones","drawOldZones","isDanger","redError","finishQuestion","timer","l","totalTimers","setTimeout","_this$state$settings","timeWarning","setTimer","clearTimeout","_this$state$settings2","yellowError","checkIfClickInDangerZone","isRight","some","zone","_this4","handlePhotoPosition","photo","style","top","clientY","naturalHeight","left","clientX","naturalWidth","classList","add","drawDangerZone","showResult","sendResult","_this$state","dangerPicture","id","alt","PureComponent","handleSubmit","handleChange","onChange","required","API_URL","defaultFetch","method","body","configFetch","mode","headers","Accept","Content-Type","assign","JSON","stringify","postData","url","data","fetch","rep","err","getData","postFile","downloadFile","filename","res","blob","download","Test","loading","testStarted","testFinished","user","tests","currentTest","currentQuestion","questions","total","setSettings","getSettings","getTests","target","preventDefault","chooseTest","settingsArray","settingsObject","tune","howMany","chosenTest","floor","random","getQuestions","setCurrentQuestion","errorThreshold","components_Test_Slide","components_Test_User","Admin","submitting","deleteObj","refreshTest","saveDb","handleDbRecovery","obj","_this5","confirm","getTestData","_e$target","description","dataset","handleTypes","i","val","typesMap","number","Number","_this6","finally","_this7","FormData","append","files","_this8","_this9","accept","map","key","_id","data-description","test","q","Forbidden","CreateTest","CreateQuestion","uploadPhotos","clearCanvas","saveQuestion","checkIfQuestionCreated","reset","location","search","URLSearchParams","get","getQuestion","handleFormData","slide","_this$state$dimension","start","_this$state2","getZones","_this$state3","pattern","App","handleAuth","password","console","log","auth","BrowserRouter","components_Header","Switch","Route","path","render","exact","ReactDom","src_App","getElementById"],"mappings":"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","file":"static/js/main.8e652595.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './Header.sass'\r\n\r\nconst Login = props => {\r\n  const { login, authFail, isLogging } = props\r\n\r\n  return (\r\n      <form className='loginForm' onSubmit = { login }>\r\n        {\r\n          authFail ?\r\n            <div className='authFailMessage'>Неверное имя пользователя или пароль!</div>\r\n          :\r\n            ''\r\n        }\r\n        <span>\r\n          <input type='login' name='login' placeholder='login'/>\r\n          <input type='password' name='password' placeholder='password'/>\r\n        </span>\r\n        <span>\r\n          <input disabled = { isLogging } type='submit' value='Войти'/>\r\n        </span>\r\n      </form>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Login)\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Login from './Login'\nimport './Header.sass'\n\nconst Header = props => {\n  const { isAdmin, authFail, logoff, login } = props\n\n  return (\n    <div className='headerArea'>\n      <Link className='header' to='/'>\n        <h1>XRay-test</h1>\n      </Link>\n      {\n        isAdmin\n          ? <div className='loginArea'>\n            Вход выполнен\n            <a className='logoff' onClick={logoff}>\n              Выйти\n            </a>\n          </div>\n          : <Login login={login} authFail={authFail}/>\n        }\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  isAdmin: PropTypes.bool.isRequired,\n  logoff: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired\n}\n\nexport default withRouter(Header)\n","import React from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport './Menu.sass'\r\n\r\nclass Menu extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className='container'>\r\n        <div className='menuItem'>\r\n          <Link className='menuButton' to='/test'>Начать тест</Link>\r\n        </div>\r\n        <div className='menuItem'>\r\n          <Link className='menuButton' to='/admin'>Настройки</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Menu)\n","/**\n * Fetch method helper makes json transformation\n * @param {object} response - response object got from server\n * @returns {Promise} - boolean represents if json operation success\n */\nexport const handleResponse = response => response.json().then(json => response.ok ? json : Promise.reject(json))\n\n/**\n * Function saves access token in localStorage\n * @param {object} data - object that contains access token data (login, token, id)\n * @returns {null} - returns nothing if param wasnt defined\n */\nexport const setToken = token => {\n  return localStorage.setItem('token', token);\n}\n\n/**\n * Function get access token from localStorage\n * @returns {string} - if access token is stored in localStorage\n * @returns {boolean} - false boolean represents if is no access token\n */\nexport const getToken = () => {\n  if (localStorage.getItem('token')) {\n    return localStorage.getItem('token')\n  }\n\n  return false;\n}\n\n/**\n * Comments for differen results\n */\nexport const comments = {\n  right: 'Поздравляем! Правильный ответ.',\n  yellow: 'Ошибка! Опасных предметов нет!',\n  red1: 'Ошибка! Опасный предмет есть!',\n  red2: 'Ошибка! Опасного предмета нет в обозначенной Вами области!',\n  time: 'Время истекло!'\n}\n","class Drawer {\n  constructor (canvas) {\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext('2d');\n\n    this.zones = [];\n\n    this.x1 = 0;\n    this.x2 = 0;\n    this.y1 = 0;\n    this.y2 = 0;\n\n    this.prevProperties = [0, 0, 0, 0];\n\n    this.clearListeners();\n    this.isDrawing = false;\n\n    this.handelMouseUp = this.handelMouseUp.bind(this);\n    this.handelMouseMove = this.handelMouseMove.bind(this);\n    this.handelMouseDown = this.handelMouseDown.bind(this);\n    this.clearZones = this.clearZones.bind(this);\n  }\n\n  handelMouseDown (e) {\n    this.isDrawing = true;\n\n    this.x1 = e.offsetX;\n    this.y1 = e.offsetY;\n  }\n\n  handelMouseMove (e) {\n    if (this.isDrawing) {\n      this.clearPreviousRect();\n\n      this.x2 = e.offsetX;\n      this.y2 = e.offsetY;\n\n      const rectProperties = this.getRectProperties();\n\n      this.drawRect(rectProperties);\n      this.prevProperties = rectProperties;\n    }\n  }\n\n  handelMouseUp (e) {\n    this.isDrawing = false;\n\n    this.clearPreviousRect();\n\n    this.x2 = e.offsetX;\n    this.y2 = e.offsetY;\n\n    const rectProperties = this.getRectProperties();\n\n    this.drawRect(rectProperties);\n    this.prevProperties = [0, 0, 0, 0];\n    this.saveZones();\n  }\n\n  drawRect (rectProperties, color = 'red') {\n    this.ctx.strokeStyle = color;\n    this.ctx.rect(...rectProperties);\n    this.ctx.stroke();\n  }\n\n  clearPreviousRect () {\n    const [x, y, width, heigth] = this.prevProperties;\n\n    this.ctx.clearRect(x - 1, y - 1, width + 2, heigth + 2);\n    this.ctx.beginPath();\n  }\n\n  saveZones () {\n    const leftUpCorner = this.getLeftUpCorner();\n    const rightDownCorner = this.getRightDownCorner();\n\n    this.zones.push([...leftUpCorner, ...rightDownCorner]);\n  }\n\n  /**\n   * Method draws rectangles got from API\n   */\n  drawOldZones (rectArray) {\n    this.zones = rectArray;\n\n    rectArray.forEach(dimensions => {\n      const rectProperties = [dimensions[0], dimensions[1]];\n      const width = dimensions[2] - dimensions[0];\n      const height = dimensions[3] - dimensions[1];\n\n      rectProperties.push(width);\n      rectProperties.push(height);\n\n      this.drawRect(rectProperties);\n    })\n  }\n\n  getLeftUpCorner () {\n    const { x1, x2, y1, y2 } = this;\n\n    return [Math.min(x1, x2), Math.min(y1, y2)]\n  }\n\n  getRightDownCorner () {\n    const { x1, x2, y1, y2 } = this;\n\n    return [Math.max(x1, x2), Math.max(y1, y2)]\n  }\n\n  getRectProperties () {\n    const leftUpCorner = this.getLeftUpCorner();\n    const rightDownCorner = this.getRightDownCorner();\n\n    let width = rightDownCorner[0] - leftUpCorner[0];\n    let height = rightDownCorner[1] - leftUpCorner[1];\n\n    return [...leftUpCorner, width, height];\n  }\n\n  start () {\n    this.canvas.addEventListener('mousedown', this.handelMouseDown)\n    this.canvas.addEventListener('mouseup', this.handelMouseUp)\n    this.canvas.addEventListener('mousemove', this.handelMouseMove)\n  }\n\n  clearListeners () {\n    this.canvas.removeEventListener('mousedown', this.handelMouseDown)\n    this.canvas.removeEventListener('mouseup', this.handelMouseUp)\n    this.canvas.removeEventListener('mousemove', this.handelMouseMove)\n  }\n\n  getZones () {\n    return this.zones;\n  }\n\n  clearZones () {\n    this.zones = [];\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.beginPath();\n  }\n\n  reset () {\n    this.clearListeners();\n    this.clearZones();\n  }\n}\n\nexport default Drawer;\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport './Slide.sass'\nimport { comments } from './../../helpers';\nimport Drawer from '../Drawer'\n\nclass Slide extends React.PureComponent {\n  constructor (props) {\n    super(props);\n\n    const { settings, question } = this.props;\n    const canvasDraw = '#canvasDrawArea';\n    const canvasBackground = '#canvasBackground';\n\n    this.state = {\n      settings,\n      question,\n      canvasBackground,\n      canvasDraw,\n      comment: comments.right,\n      warningShowed: false,\n      answered: false,\n      result: 0,\n      slideShowed: false,\n      photoShowed: false\n    }\n\n    this.setClear = this.setClear.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.handleCanvasClick = this.handleCanvasClick.bind(this);\n    this.clearTimers = this.clearTimers.bind(this);\n    this.setQuestionTimers = this.setQuestionTimers.bind(this);\n    this.showWarning = this.showWarning.bind(this);\n    this.handleTimer = this.handleTimer.bind(this);\n    this.prepareCanvas = this.prepareCanvas.bind(this);\n    this.setNewQuestion = this.setNewQuestion.bind(this);\n    this.showPhoto = this.showPhoto.bind(this);\n\n    this.timers = [];\n  }\n\n  componentDidMount () {\n    const { canvasDraw } = this.state;\n\n    this.drawer = new Drawer(document.querySelector(canvasDraw));\n    this.setNewQuestion();\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    const prevQuestion = prevProps.question;\n    const newQuestion = this.props.question;\n\n    if (newQuestion.name !== prevQuestion.name) {\n       this.setNewQuestion()\n    }\n  }\n\n  componentWillUnmount () {\n    this.clearTimers();\n    this.removeClickListener();\n  }\n\n  setNewQuestion () {\n    const { settings, question } = this.props;\n\n    this.setState({\n      settings,\n      question,\n      comment: comments.right,\n      answered: false,\n      slideShowed:true,\n      warningShowed: false,\n      result: 0\n    }, this.prepareCanvas);\n  }\n\n  removeClickListener () {\n    const drawLayer = this.getCanvasDraw();\n\n    drawLayer.removeEventListener('click', this.handleCanvasClick)\n  }\n\n  /**\n   * Method sets canvas width and heigth, add background image\n   * and inits drawing dangerzone rectangels\n   * @returns {void}\n   */\n  prepareCanvas () {\n    this.setCanvasDimensions();\n\n    const background = new Image();\n\n    background.src = this.state.question.imgPath;\n    background.onload = () => {\n      this.setCanvasBackground(background);\n      this.animateSlideShow()\n          .then(() => {\n            this.setQuestionTimers();\n            this.setClickListener();\n          })\n          .catch(window.alert);\n    }\n  }\n\n  /**\n   * Method removes class 'canvasBeyondScreen' from canvasBackground\n   * to make it animated drive from the right end of screen\n   * @returns {void}\n   */\n  animateSlideShow () {\n    return new Promise((resolve, reject) => {\n        const bg = this.getCanvasBackground();\n        const dl = this.getCanvasDraw();\n\n        // If slide was loading too long and animation is over now\n        if (bg.offsetLeft === dl.offsetLeft) resolve();\n        else this.getCanvasBackground().addEventListener('animationend', resolve);\n    });\n  }\n\n  /**\n   * Method set canvas width and heigth - both for background and draw layers\n   * @returns {void}\n   */\n  setCanvasDimensions () {\n    const { width, height } = this.state.question.dimensions;\n\n    this.getCanvasDraw().width = width;\n    this.getCanvasDraw().height = height;\n    this.getCanvasBackground().width = width;\n    this.getCanvasBackground().height = height;\n  }\n\n  /**\n   * Method calls background layer canvas to draw background\n   * @returns {Function} - drawImage method of canvas\n   */\n  setCanvasBackground (bg) {\n    return this.getCanvasBackground().getContext('2d').drawImage(bg, 0, 0)\n  }\n\n  /**\n   * Method draws old rectangles got from API if any\n   * and starts to listen to new user draw\n   * @returns {Function} - draw method of this.draw\n   */\n  drawDangerZone (c) {\n    const { dangerZones } = this.state.question;\n    if (dangerZones.length > 0) return this.drawer.drawOldZones(dangerZones);\n\n    return false;\n  }\n\n  /**\n   * Get selector for canvas draw layer\n   * @returns {Object} - DOM selector\n   */\n  getCanvasDraw () {\n    return document.querySelector(this.state.canvasDraw)\n  }\n\n  /**\n   * Get selector for canvas background layer\n   * @returns {Object} - DOM selector\n   */\n  getCanvasBackground () {\n    return document.querySelector(this.state.canvasBackground)\n  }\n\n  setClear () {\n    const { isDanger } = this.state.question;\n    const { redError } = this.state.settings;\n\n    if (isDanger === '1') {\n      this.setState({\n        comment: comments.red1,\n        result: redError\n      }, this.finishQuestion)\n    } else this.finishQuestion();\n  }\n\n  setClickListener () {\n    const drawLayer = this.getCanvasDraw();\n\n    drawLayer.addEventListener('click', this.handleCanvasClick)\n  }\n\n  /**\n   * Method add timer to this.timers array\n   * for proper handling them\n   * @param {Function} timer - function to be called in time l\n   * @param {Number} l - time to call function\n   * @returns {void}\n   */\n  setTimer (timer, l) {\n    const totalTimers = this.timers.length;\n\n    this.timers[totalTimers] = setTimeout(timer, l);\n  }\n\n  /**\n   * Method adds timers for showing warning and\n   * for total time for question\n   * @returns {void}\n   */\n  setQuestionTimers () {\n    const { timeWarning, time } = this.state.settings;\n\n    this.setTimer(this.showWarning, timeWarning * 1000)\n    this.setTimer(this.handleTimer, time * 1000)\n  }\n\n  /**\n   * Method clears all timers in this.timers array\n   * @returns {void}\n   */\n  clearTimers () {\n    this.timers.forEach(timer => {\n      clearTimeout(timer)\n    });\n\n    this.timers = [];\n  }\n\n  handleTimer () {\n    const { answered } = this.state;\n    const { redError, yellowError } = this.state.settings;\n    const { isDanger } = this.state.question;\n\n    if (!answered) {\n      let result;\n\n      result = isDanger === '1' ? redError : yellowError;\n      return this.setState({ comment: comments.time, answered: true, result }, this.finishQuestion)\n    }\n\n    return false;\n  }\n\n  showWarning () {\n    return this.setState({ warningShowed: true })\n  }\n\n  handleCanvasClick (e) {\n    const { answered } = this.state;\n    const { isDanger } = this.state.question;\n    const { yellowError } = this.state.settings;\n\n    if (isDanger === '0' && !answered) {\n      return this.setState({ comment: comments.yellow, result: yellowError }, this.finishQuestion)\n    }\n\n    return this.checkIfClickInDangerZone(e)\n  }\n\n  checkIfClickInDangerZone (e) {\n    const x = e.offsetX;\n    const y = e.offsetY;\n    const { answered } = this.state;\n    const { dangerZones } = this.state.question;\n    const { redError } = this.state.settings;\n    const isRight = dangerZones.some(zone =>\n      x > zone[0] && y > zone[1] && x < zone[2] && y < zone[3]\n    );\n\n    if (!answered) {\n      if (isRight) this.finishQuestion();\n      else this.setState({ comment: comments.red2, result: redError }, this.finishQuestion)\n    }\n\n    if (isRight) this.showPhoto(e);\n  }\n\n  showPhoto (e) {\n    this.setState({ photoShowed: true }, () => {\n      this.handlePhotoPosition(e);\n      this.setTimer(this.setState.bind(this, { photoShowed: false }), 2000)\n    });\n  }\n\n  handlePhotoPosition (e) {\n    const photo = document.querySelector('.dangerPicture');\n\n    photo.style.top = e.clientY - (photo.naturalHeight / 2) + 'px';\n    photo.style.left = e.clientX - (photo.naturalWidth / 2) + 'px';\n    this.setTimer(() => photo.classList.add('naturalSize'), 20);\n  }\n\n  finishQuestion () {\n    this.setState({ answered: true });\n    this.clearTimers();\n    this.drawDangerZone();\n    this.showResult();\n  }\n\n  showResult () {\n    const { result } = this.state;\n    const { sendResult } = this.props;\n\n    return sendResult(result);\n  }\n\n  nextQuestion () {\n    const { nextQuestion } = this.props;\n\n    this.removeClickListener();\n    this.setState({ slideShowed: false });\n\n    return nextQuestion();\n  }\n\n  render () {\n    const { answered, question, warningShowed, result, photoShowed, comment, slideShowed } = this.state;\n    const { yellowError } = this.state.settings;\n    const { dangerPicture } = question;\n\n    return (\n      <div>\n        <div>\n          Вопрос { question.name}\n        </div>\n        <div className='canvasArea'>\n          <div className='actionComment_container speech'>\n            {\n              answered ?\n              <div id='actionComment' className = { result === 0 ? 'green' : result === yellowError ? 'yellow' : 'red'} >{ answered ? comment : '' }</div> :\n              ''\n            }\n          </div>\n          <div className='markIcon_cotainer'>\n            {\n              answered ?\n              <span\n                id='markIcon'\n                className = { result === 0 ? 'greenMark' : result === yellowError ? 'yellowError' : 'redError'}\n              ></span> :\n              ''\n            }\n          </div>\n          <div className='clearButton_container'>\n            <button id='clearButton' disabled = { answered } onClick= { this.setClear } >&#9745;</button>\n          </div>\n          <div className='canvas_container'>\n            { slideShowed ?\n                <canvas className='animatedShow' id=\"canvasBackground\"></canvas>\n              :\n              ''\n            }\n          </div>\n          <div className='canvas_container'>\n            <canvas id=\"canvasDrawArea\"></canvas>\n          </div>\n          <div className='timerWarning_container'>\n            { warningShowed ?\n                <span id='timerWarning'>Внимание! Время истекает!</span>\n              :\n                ''\n            }\n          </div>\n          <div className='forwardButton_container'>\n            { /* Disabled when photoShowed coz otherwise you can see next danger picture when clicking 'forward' before prev danger picture disappears */ }\n            <button id='forwardButton' disabled = { !answered || photoShowed} onClick = { this.nextQuestion }>&#x25ba;</button>\n          </div>\n        </div>\n        <img className={photoShowed ? 'dangerPicture' : 'hidden'} src= { dangerPicture } alt='Опасный предмет'/>\n      </div>\n    )\n  }\n}\n\nSlide.propTypes = {\n  settings: PropTypes.object.isRequired,\n  question: PropTypes.object.isRequired,\n  sendResult: PropTypes.func.isRequired,\n  nextQuestion: PropTypes.func.isRequired\n}\n\nexport default withRouter(Slide)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport './User.sass'\n\nconst User = props => {\n  const { handleSubmit, handleChange } = props;\n\n  return (\n      <div>\n        <div className='paranja'>\n        </div>\n        <div className='userLoginArea'>\n          <form className = 'userLogin' onSubmit = { handleSubmit }>\n            <div>\n              <span>\n                <label>\n                  Ваше имя: &emsp;\n                  <input type='text' id='user' onChange = { handleChange } required/>\n                </label>\n              </span>\n              <span>\n                <input type='submit' value='Начать тест'/>\n              </span>\n            </div>\n          </form>\n        </div>\n      </div>\n  )\n}\n\nUser.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired\n}\n\nexport default withRouter(User)\n","import { getToken } from './helpers'\r\n\r\nexport const API_URL = 'http://K47_8:9245'\r\n\r\nexport const defaultFetch = function (method = 'GET', body) {\r\n  const configFetch = {\r\n      method,\r\n      mode: 'cors',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'token': getToken()\r\n      }\r\n    }\r\n\r\n  if (body) Object.assign(configFetch, { body: JSON.stringify(body) })\r\n\r\n  return configFetch\r\n}\n\nexport const fileFetch = function (body) {\n  return {\n      method: 'POST',\n      mode: 'cors',\n      body: body,\n      headers: {\n        'token': getToken()\n      }\n    }\n}\n\nexport const downLoadFetch = function () {\n  return {\n    method: 'GET',\n    mode: 'cors',\n    headers: {\n      'token': getToken()\n    }\n  }\n}\n","import download from 'downloadjs';\nimport { API_URL, defaultFetch, fileFetch, downLoadFetch } from './config'\nimport { handleResponse } from './helpers'\n\nconst postData = function (url, data) {\n  return new Promise((resolve, reject) => {\n    fetch(`${API_URL}/${url}`, defaultFetch('POST', data))\n     .then(handleResponse)\n     .then(rep => resolve(rep))\n     .catch(err => reject(err))\n  })\n}\n\nconst getData = function (url, data) {\n  return new Promise((resolve, reject) => {\n    fetch(`${API_URL}/${url}`, defaultFetch('GET', data))\n     .then(handleResponse)\n     .then(rep => resolve(rep))\n     .catch(err => reject(err))\n  })\n}\n\nconst deleteData = function (url, data) {\n  return new Promise((resolve, reject) => {\n    fetch(`${API_URL}/${url}`, defaultFetch('DELETE', data))\n     .then(handleResponse)\n     .then(rep => resolve(rep))\n     .catch(err => reject(err))\n  })\n}\n\nconst postFile = function (url, data) {\n  return new Promise((resolve, reject) => {\n    fetch(`${API_URL}/${url}`, fileFetch(data))\n     .then(handleResponse)\n     .then(rep => resolve(rep))\n     .catch(err => reject(err))\n  })\n}\n\nconst downloadFile = function (url, filename) {\n  return fetch(`${API_URL}/${url}`, downLoadFetch())\n          .then(res => res.blob())\n          .then(blob => download(blob, filename));\n}\n\nexport { postData, getData, postFile, deleteData, downloadFile }\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Slide from './Slide'\r\nimport User from './User'\r\nimport './Test.sass'\r\nimport { getData } from './../../actions'\r\n\r\nclass Test extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      loading: false,\r\n      testStarted: false,\r\n      testFinished: false,\r\n      user: '',\r\n      settings: {},\r\n      tests: [],\r\n      currentTest: '',\r\n      currentQuestion: -1,\r\n      questions: [],\r\n      total: 100\r\n    }\r\n\r\n    this.setSettings = this.setSettings.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.nextQuestion = this.nextQuestion.bind(this);\r\n    this.sendResult = this.sendResult.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getSettings();\r\n    this.getTests();\r\n  }\r\n\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault()\r\n\r\n    this.chooseTest()\r\n  }\r\n\r\n  getSettings () {\r\n    return getData('settings')\r\n            .then(settings => this.setSettings(settings))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTests () {\r\n    return getData('tests')\r\n            .then(tests => this.setState({ tests }))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  setSettings (settingsArray) {\r\n    const settingsObject = {};\r\n\r\n    settingsArray.forEach(tune => {\r\n      settingsObject[tune.name] = tune.value;\r\n    })\r\n\r\n    this.setState({ settings: settingsObject })\r\n  }\r\n\r\n  chooseTest () {\r\n    const { tests } = this.state;\r\n    const howMany = tests.length;\r\n    const variant = Math.floor(Math.random() * howMany);\r\n    const chosenTest = tests[variant].name;\r\n\r\n    this.getQuestions(chosenTest);\r\n  }\r\n\r\n  getQuestions (chosenTest) {\r\n    return getData(`questions/${chosenTest}`)\r\n            .then(questions => this.setState({ questions }, this.setCurrentQuestion))\r\n            .catch(err => window.alert(err))\r\n  }\r\n\r\n  setCurrentQuestion () {\r\n    const currentQuestion = this.state.currentQuestion + 1;\r\n    const totalQuestions = this.state.questions.length;\r\n\r\n    if (currentQuestion < totalQuestions) this.setState({ testStarted: true, currentQuestion })\r\n    else this.setState({ testFinished: true, testStarted: false })\r\n  }\r\n\r\n  nextQuestion () {\r\n    return this.setCurrentQuestion();\r\n  }\r\n\r\n  sendResult (result) {\r\n    let { total } = this.state;\r\n\r\n    total = total - result;\r\n    this.setState({ total });\r\n  }\r\n\r\n  render () {\r\n    const { testStarted, settings, currentQuestion, questions, total, testFinished } = this.state;\r\n    const { errorThreshold } = settings;\r\n\r\n    return (\r\n      <div className='container'>\r\n        { testStarted ?\r\n            (<div className='testArea'>\r\n              <div>\r\n                Итого: { total }%\r\n              </div>\r\n              <Slide\r\n                question = { questions[currentQuestion] }\r\n                settings = { settings }\r\n                sendResult = { this.sendResult }\r\n                nextQuestion = { this.nextQuestion }\r\n              />\r\n            </div>)\r\n          :\r\n          testFinished ?\r\n            (<div className='resultArea'>\r\n              <h2>\r\n                Ваш результат:\r\n                <span\r\n                className = { total < errorThreshold ? 'fail' : total < 100 ? 'enought' : 'perfect'}\r\n                > { total }%</span>\r\n              </h2>\r\n            </div>)\r\n          :\r\n            (<div className='userArea'>\r\n              <User\r\n                handleChange = { this.handleChange }\r\n                handleSubmit = { this.handleSubmit }\r\n              />\r\n            </div>)\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Test)\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { getData, deleteData, postData, postFile, downloadFile } from './../../actions'\r\n\r\nclass Admin extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      questions: [],\r\n      settings: [],\r\n      tests: [],\r\n      submitting: false,\r\n      err: false\r\n    }\r\n\r\n    this.deleteObj = this.deleteObj.bind(this);\r\n    this.refreshTest = this.refreshTest.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.saveDb = this.saveDb.bind(this);\r\n    this.handleDbRecovery = this.handleDbRecovery.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getSettings();\r\n    this.getTests();\r\n    this.getQuestions();\r\n  }\r\n\r\n  getSettings () {\r\n    return getData('settings')\r\n            .then(settings => this.setState({ settings }))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTests () {\r\n    return getData('tests')\r\n            .then(tests => this.setState({ tests }))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getQuestions () {\r\n    return getData('questions')\r\n            .then(questions => this.setState({ questions }))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTestData () {\r\n    this.getTests();\r\n    this.getQuestions();\r\n  }\r\n\r\n  deleteObj (obj, name) {\r\n    let conf = window.confirm('Вы уверены?');\r\n\r\n    if (conf) {\r\n      return deleteData(`deleteobj/${obj}/${name}`)\r\n              .then(rep => this.getTestData())\r\n              .catch(err => this.setState({ err: true }))\r\n    }\r\n  }\r\n\r\n  refreshTest (name) {\r\n    return postData('test', { name })\r\n            .then(rep => window.alert('Успешно обновлено!'))\r\n            .catch(window.alert)\r\n  }\r\n\r\n  handleChange (e) {\r\n    let { value, type } = e.target;\r\n    const { description } = e.target.dataset;\r\n    const name = e.target.id;\r\n    const { settings } = this.state;\r\n\r\n    value = this.handleTypes(value, type);\r\n\r\n    settings.forEach((tune, i) => {\r\n      if (name === tune.name) settings[i] = { name, value, type, description }\r\n    })\r\n\r\n    this.setState({ settings })\r\n  }\r\n\r\n  handleTypes (val, type) {\r\n    const typesMap = {\r\n      number: () => Number(val)\r\n    }\r\n\r\n    if (typesMap[type]) return typesMap[type](val)\r\n    else return val\r\n  }\r\n\r\n  saveDb () {\r\n    this.setState({ submitting: true })\r\n\r\n    return getData('savedb')\r\n            .then(() => {\r\n              // Added timeout, otherwise firefox downloads only 1 file\r\n              downloadFile('download_dump/tests.json', 'tests.json');\r\n              setTimeout(downloadFile.bind(null, 'download_dump/questions.json', 'questions.json'), 100);\r\n            })\r\n            .catch(window.alert)\r\n            .finally(() => this.setState({ submitting: false }))\r\n  }\r\n\r\n  handleDbRecovery (e) {\r\n    e.preventDefault();\r\n\r\n    let sure = window.confirm('Вы уверены? Текущая база данных будет перезаписана!')\r\n\r\n    if (!sure) return;\r\n\r\n    this.setState({ submitting: true })\r\n\r\n    const questions = document.querySelector('input[type=\"file\"][name=\"questions\"]');\r\n    const tests = document.querySelector('input[type=\"file\"][name=\"tests\"]');\r\n    const data = new FormData();\r\n\r\n    data.append('questions', questions.files[0]);\r\n    data.append('tests', tests.files[0]);\r\n\r\n    return postFile('loaddb', data)\r\n            .then(() => {\r\n              window.alert('Успешно восстановлено!');\r\n              this.getTestData();\r\n            })\r\n            .catch(window.alert)\r\n            .finally(() => this.setState({ submitting: false }))\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault();\r\n    this.setState({ submitting: true })\r\n\r\n    const { settings } = this.state;\r\n\r\n    return postData('settings', { settings })\r\n            .then(rep => window.alert('Успешно сохранено!'))\r\n            .catch(window.alert)\r\n            .finally(() => this.setState({ submitting: false }))\r\n  }\r\n\r\n  render () {\r\n    const { settings, tests, questions, submitting } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='newTest'>\r\n          <div className='menuItem'>\r\n            <Link className='menuButton' to='/create/test'>Создать новый тест</Link>\r\n            <Link className='menuButton' to='/create/question'>Создать новый вопрос</Link>\r\n          </div>\r\n          <div>\r\n            <button disabled={submitting} className='menuButton small' onClick={this.saveDb}>Сохранить базу</button>\r\n            <form onSubmit={this.handleDbRecovery}>\r\n              <label> Выберите JSON файл с вопросами &emsp;\r\n                <input type='file' name='questions' accept='.json' required/>\r\n              </label><br/>\r\n              <label> Выберите JSON файл с тестами &emsp;\r\n                <input type='file' name='tests' accept='.json' required/>\r\n              </label><br/>\r\n              <input disabled={submitting} type='submit' value='Восстановить базу'/>\r\n            </form>\r\n          </div>\r\n        </div>\r\n          <h2>Настройки</h2>\r\n          <div className='formArea'>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {\r\n                settings.map(tune => {\r\n                  return <div key={tune._id}>\r\n                    <label>\r\n                      {tune.description}: &emsp;\r\n                      <input\r\n                        id={tune.name}\r\n                        data-description={tune.description}\r\n                        type={tune.type}\r\n                        value={tune.value}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                })\r\n              }\r\n              <div>\r\n                <input disabled={submitting} type='submit' value='Сохранить'/>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        <div>\r\n        </div>\r\n        <div className='oldTest'>\r\n          <h2>Тесты</h2>\r\n          <ul>\r\n            {\r\n              tests.map(test => {\r\n                return <li key={test._id}>{test.name} &emsp;\r\n                <a onClick={() => this.refreshTest(test.name)}>Обновить</a> &emsp;\r\n                <a className='danger' onClick={() => this.deleteObj('Test', test.name)}>Удалить</a>\r\n                </li>\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n        <div className='oldQuestions'>\r\n          <h2>Вопросы</h2>\r\n          <ul>\r\n            {\r\n              questions.map(q => {\r\n                return <li key={q._id}>{q.name} &emsp;\r\n                  <Link to={`/create/question?question=${q.name}`}>Изменить</Link>&emsp;\r\n                  <a className='danger' onClick={() => this.deleteObj('Question', q.name)}>Удалить</a>\r\n                </li>\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Admin)\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Forbidden extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>403 Нет доступа</h1>\r\n        <h3>Залогиньтесь для продолжения</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Forbidden)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { postData } from './../../actions'\n\nclass CreateTest extends React.Component {\n  constructor () {\n    super()\n\n    this.state = {\n      err: false,\n      loading: false,\n      name: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit (e) {\n    e.preventDefault();\n\n    const { name } = this.state;\n\n    this.setState({ loading: true });\n\n    return postData('test', { name })\n            .then(rep => window.alert('Успешно сохранено!'))\n            .catch(err => window.alert(err))\n            .finally(() => this.setState({ loading: false }))\n  }\n\n  handleChange (e) {\n    const data = {};\n\n    data[e.target.id] = e.target.value;\n\n    this.setState(data);\n  }\n\n  render () {\n    const { loading } = this.state;\n\n    return (\n      <div className='container'>\n        <div className='formArea'>\n          <form onSubmit={this.handleSubmit}>\n            <div>\n              <span>\n                <label>\n                  Номер теста: &emsp;<input id='name' onChange={this.handleChange} type='number' min='1'/>\n                </label>\n              </span>\n              <span>\n                <input disabled= { loading } type='submit' value='Создать'/>\n              </span>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(CreateTest)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { postFile, postData, getData } from './../../actions'\nimport Drawer from '../Drawer'\nimport './CreateQuestion.sass'\n\nclass CreateQuestion extends React.Component {\n  constructor () {\n    super()\n\n    this.state = {\n      loading: false,\n      err: false,\n      imgPath: '',\n      dimensions: { width: 0, height: 0 },\n      dangerZones: [],\n      name: '',\n      isDanger: '1'\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.uploadPhotos = this.uploadPhotos.bind(this);\n    this.clearCanvas = this.clearCanvas.bind(this);\n    this.saveQuestion = this.saveQuestion.bind(this);\n  }\n\n  componentDidMount () {\n    const canvasDraw = '#canvasDrawArea';\n    const canvasBackground = '#canvasBackground';\n    this.setState({ canvasBackground, canvasDraw })\n\n    this.drawer = new Drawer(document.querySelector(canvasDraw));\n    this.checkIfQuestionCreated()\n  }\n\n  componentWillUnmount () {\n    this.drawer.reset();\n  }\n\n  /**\n   * Get selector for canvas draw layer\n   * @returns {Object} - DOM selector\n   */\n  getCanvasDraw () {\n    return document.querySelector(this.state.canvasDraw)\n  }\n\n  /**\n   * Get selector for canvas background layer\n   * @returns {Object} - DOM selector\n   */\n  getCanvasBackground () {\n    return document.querySelector(this.state.canvasBackground)\n  }\n\n  /**\n   * Method checks location query\n   * if query is defined ( /create/question?question=name )\n   * it means user want to edit old question\n   * so we fetch question to API\n   * @return {Function} - fetch to API for question data\n   */\n  checkIfQuestionCreated () {\n    if (this.props.location.search.length > 0) {\n      const query = new URLSearchParams(this.props.location.search);\n      const question = query.get('question');\n\n      return this.getQuestion(question)\n    }\n  }\n\n  /**\n   * Method fetches to API for question data\n   * if any - renders it\n   * @returns {Function} - fetch to API\n   */\n  getQuestion (question) {\n    return getData(`question/${question}`)\n            .then(rep => {\n              if (rep) {\n                this.setState(rep, this.prepareCanvas)\n              }\n            })\n            .catch(err => window.alert(err))\n  }\n\n  /**\n   * Method handles upload of slide and photo\n   * then it gets dimensions of slide and prepares canvas for it\n   * @return {void}\n   */\n  uploadPhotos (e) {\n    e.preventDefault();\n\n    const data = this.handleFormData();\n\n    this.setState({ loading: true });\n    postFile('preupload', data)\n      .then(rep => {\n        const { name } = this.state;\n        const imgPath = `/images/${name}_slide.${rep.type}`;\n        this.drawer.reset();\n\n        this.setState({\n          imgPath: imgPath,\n          dimensions: rep\n        }, this.prepareCanvas)\n      })\n      .catch(err => window.alert(err))\n      .finally(() => this.setState({ loading: false }));\n  }\n\n  /**\n   * Method gatheres all formData to single object for upload\n   * @return {Object} - object to upload\n   */\n  handleFormData () {\n    const slide = document.querySelector('input[name=\"slide\"]');\n    const photo = document.querySelector('input[name=\"photo\"]');\n    const { name, isDanger } = this.state;\n    const data = new FormData();\n\n    data.append('question', name);\n    data.append('slide', slide.files[0]);\n    if (isDanger === '1') data.append('photo', photo.files[0]);\n\n    return data;\n  }\n\n  /**\n   * Method handles changes in input and pass it to state\n   * @returns {void}\n   */\n  handleChange (e) {\n    const data = {};\n\n    data[e.target.id] = e.target.value;\n\n    this.setState(data);\n  }\n\n  /**\n   * Method sets canvas width and heigth, add background image\n   * and inits drawing dangerzone rectangels\n   * @returns {void}\n   */\n  prepareCanvas () {\n    this.setCanvasDimensions();\n\n    const background = new Image();\n\n    background.src = this.state.imgPath;\n    background.onload = () => {\n      this.setCanvasBackground(background)\n      this.drawDangerZone();\n    }\n  }\n\n  /**\n   * Method set canvas width and heigth - both for background and draw layers\n   * @returns {void}\n   */\n  setCanvasDimensions () {\n    const { width, height } = this.state.dimensions;\n\n    this.getCanvasDraw().width = width;\n    this.getCanvasDraw().height = height;\n    this.getCanvasBackground().width = width;\n    this.getCanvasBackground().height = height;\n  }\n\n  /**\n   * Method calls background layer canvas to draw background\n   * @returns {Function} - drawImage method of canvas\n   */\n  setCanvasBackground (bg) {\n    return this.getCanvasBackground().getContext('2d').drawImage(bg, 0, 0)\n  }\n\n  /**\n   * Method draws old rectangles got from API if any\n   * and starts to listen to new user draw\n   * @returns {Function} - start method of this.draw\n   */\n  drawDangerZone (c) {\n    const { dangerZones } = this.state;\n\n    if (dangerZones.length > 0) this.drawer.drawOldZones(dangerZones);\n\n    return this.drawer.start()\n  }\n\n  /**\n   * Method calls clearZones mthod of this.drawer\n   * to clear canvas draw layer\n   */\n  clearCanvas () {\n    return this.drawer.clearZones()\n  }\n\n  /**\n   * Method gatheres all question data to single object and post to API\n   * @returns {Function} - fetch post API\n   */\n  saveQuestion () {\n    const { imgPath, name, isDanger, dimensions } = this.state;\n\n    const question = {\n      name,\n      isDanger,\n      dangerZones: this.drawer.getZones(),\n      imgPath,\n      dimensions\n     };\n\n     this.setState({ loading: true });\n\n     return postData('savequestion', question)\n              .then(rep => window.alert('Успешно сохранено!'))\n              .catch(err => window.alert(err))\n              .finally(() => this.setState({ loading: false }))\n  }\n\n  render () {\n    const { loading, isDanger, name } = this.state;\n\n    return (\n      <div className='container'>\n        <div className='formArea'>\n          <form onSubmit={this.uploadPhotos}>\n            <div>\n              <label>\n                Вопрос: &emsp;\n                <input\n                  id='name'\n                  onChange={this.handleChange}\n                  pattern='[0-9]+_[0-9]+'\n                  name='name'\n                  type='text'\n                  value = {name.length > 0 ? name : ''}\n                  placeholder='№ Теста_№ вопроса'\n                  required\n                />\n              </label>\n            </div>\n            <div>\n              <label>\n                Загрузите слайд: &emsp;\n                <input\n                  name='slide'\n                  type='file'\n                  required\n                />\n              </label>\n            </div>\n            <div>\n              <label>\n                Багаж опасен? &emsp;\n                <select\n                  id='isDanger'\n                  onChange={this.handleChange}\n                  value={isDanger === '1' ? '1' : '0'}\n                >\n                  <option value='1'>Да</option>\n                  <option value='0'>нет</option>\n                </select>\n              </label>\n            </div>\n            {\n              isDanger === '1' ?\n              <div>\n                <label>\n                  Загрузите фото: &emsp;\n                  <input\n                    name='photo'\n                    type='file'\n                    required\n                  />\n                </label>\n              </div> :\n              <span></span>\n            }\n            <div>\n              <input disabled={loading} type='submit' value='Продолжить'/>\n            </div>\n          </form>\n        </div>\n        <div>\n          <div className='canvasControls'>\n            <button className='danger' onClick={this.clearCanvas}>Очистить</button>\n            <button className='success' disabled={loading || name === ''} onClick={this.saveQuestion}>Сохранить</button>\n          </div>\n          <div className='createQuestion canvasArea'>\n            <canvas id=\"canvasBackground\"></canvas>\n            <canvas id=\"canvasDrawArea\"></canvas>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(CreateQuestion)\n","import React from 'react'\nimport ReactDom from 'react-dom'\nimport Header from './components/Header'\nimport Menu from './components/Menu'\nimport Test from './components/Test'\nimport Admin from './components/Admin'\nimport Forbidden from './components/Forbidden'\nimport CreateTest from './components/CreateTest'\nimport CreateQuestion from './components/CreateQuestion'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport './main.sass'\nimport { postData } from './actions'\nimport { setToken } from './helpers'\n\nclass App extends React.Component {\n  constructor () {\n    super()\n\n    this.state = {\n      isAdmin: false,\n      authFail: false,\n      isLogging: false,\n      token: undefined\n    }\n\n    this.login = this.login.bind(this)\n    this.logoff = this.logoff.bind(this)\n    this.handleAuth = this.handleAuth.bind(this)\n  }\n\n  login (e) {\n    e.preventDefault()\n\n    const data = {\n      login: e.target.login.value,\n      password: e.target.password.value\n    }\n\n    this.setState({ isLogging: true })\n\n    postData('login', data)\n      .then(rep => this.handleAuth(rep))\n      .catch(err => console.log(err))\n      .finally(() => this.setState({ isLogging: false }))\n  }\n\n  handleAuth (rep) {\n    if (rep.auth) setToken(rep.token)\n    this.setState({ isAdmin: rep.auth, authFail: !rep.auth, token: rep.token })\n  }\n\n  logoff () {\n    this.setState({\n      isAdmin: false,\n      token: undefined\n     })\n\n     setToken(null)\n  }\n\n  render () {\n    const { isAdmin, authFail, isLogging } = this.state\n\n    return (\n      <BrowserRouter>\n        <div>\n          <Header\n           isAdmin={isAdmin}\n           authFail={authFail}\n           isLogging = {isLogging}\n           login={this.login}\n           logoff={this.logoff}\n           />\n          <Switch>\n            <Route path='/' render={Menu} exact/>\n            <Route path='/test' render={Test}/>\n            <Route path='/admin' render={isAdmin ? Admin : Forbidden}/>\n            <Route path='/create/test' render={isAdmin ? CreateTest : Forbidden}/>\n            <Route path='/create/question' render={isAdmin ? CreateQuestion : Forbidden}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nReactDom.render(\n  <App/>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}