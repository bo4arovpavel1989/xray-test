{"version":3,"sources":["components/Header/Login.js","components/Header/index.js","components/Menu/index.js","helpers.js","components/Drawer/index.js","components/Test/Slide.js","components/Test/User.js","components/Test/History.js","config.js","actions.js","components/Test/index.js","components/Admin/index.js","components/Forbidden/index.js","components/CreateTest/index.js","components/CreateQuestion/index.js","components/App/index.js","index.js"],"names":["withRouter","props","login","authFail","isLogging","react_default","a","createElement","className","onSubmit","type","name","placeholder","disabled","value","isAdmin","logoff","Link","to","onClick","Header_Login","Menu","React","Component","handleResponse","response","json","then","ok","Promise","reject","setToken","token","localStorage","setItem","getToken","getItem","comments","right","yellow","red1","red2","time","Drawer","canvas","Object","classCallCheck","this","ctx","getContext","zones","x1","x2","y1","y2","prevProperties","clearListeners","isDrawing","handelMouseUp","bind","handelMouseMove","handelMouseDown","clearZones","e","offsetX","offsetY","clearPreviousRect","rectProperties","getRectProperties","drawRect","saveZones","_this$ctx","color","arguments","length","undefined","strokeStyle","rect","apply","toConsumableArray","stroke","_this$prevProperties","slicedToArray","x","y","width","heigth","clearRect","beginPath","leftUpCorner","getLeftUpCorner","rightDownCorner","getRightDownCorner","push","concat","rectArray","_this","forEach","dimensions","height","click","drawCircle","drawLine","rad","arc","Math","PI","moveTo","lineTo","min","max","addEventListener","removeEventListener","Slide","_this$props","possibleConstructorReturn","getPrototypeOf","call","settings","question","state","canvasBackground","canvasDraw","comment","warningShowed","answered","result","slideShowed","clickAllowed","photoShowed","setClear","assertThisInitialized","nextQuestion","handleCanvasClick","clearTimers","setQuestionTimers","showWarning","handleTimer","prepareCanvas","setNewQuestion","showPhoto","timers","drawer","document","querySelector","prevProps","prevState","prevQuestion","_this$props2","setState","_this2","setCanvasDimensions","background","Image","src","imgPath","onload","setCanvasBackground","animateSlideShow","catch","window","alert","_this3","resolve","bg","getCanvasBackground","dl","getCanvasDraw","offsetLeft","_this$state$question$","drawImage","c","dangerZones","drawOldZones","isDanger","redError","finishQuestion","timer","l","totalTimers","setTimeout","_this$state$settings","timeWarning","setTimer","clearTimeout","_this$state$settings2","yellowError","persist","nativeEvent","checkIfClickInDangerZone","isRight","some","zone","_this4","handlePhotoPosition","photo","style","top","clientY","naturalHeight","left","clientX","naturalWidth","classList","add","_this5","drawDangerZone","showResult","_this$state","sendResult","_this6","_this$state2","dangerPicture","id","alt","PureComponent","handleSubmit","handleChange","onChange","required","History","testHistory","answer","currentQuestion","closeHistory","getNext","getPrev","setCurrentQuestion","index","placeUserClick","_this$state$answer$qu","_this$state$answer","API_URL","defaultFetch","method","body","configFetch","mode","headers","Accept","Content-Type","assign","JSON","stringify","postData","url","data","fetch","rep","err","getData","deleteData","postFile","downloadFile","filename","res","blob","download","Test","loading","testStarted","testFinished","user","tests","questions","historyMode","total","setSettings","showHistory","finishTest","getSettings","getTests","target","preventDefault","chooseTest","settingsArray","settingsObject","tune","howMany","chosenTest","floor","random","getQuestions","errorThreshold","components_Test_History","components_Test_Slide","components_Test_User","Admin","submitting","deleteObj","refreshTest","saveDb","handleDbRecovery","obj","confirm","getTestData","_e$target","description","dataset","handleTypes","i","_id","val","typesMap","number","Number","finally","_this7","handleFormData","FormData","append","files","_this8","_this9","accept","map","key","data-description","test","q","Forbidden","CreateTest","CreateQuestion","uploadPhotos","handleUpload","clearCanvas","saveQuestion","checkIfQuestionCreated","reset","location","search","URLSearchParams","get","getQuestion","slide","_this$state$dimension","start","getZones","_this$state3","pattern","App","handleAuth","password","console","log","auth","BrowserRouter","components_Header","Switch","Route","path","render","exact","ReactDom","components_App","getElementById"],"mappings":"2YA+BeA,qBA1BD,SAAAC,GAAS,IACbC,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,SAAUC,EAAcH,EAAdG,UAEzB,OACIC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYC,SAAaP,GAErCC,EACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,yMAEA,GAEJH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,QAAQC,KAAK,QAAQC,YAAY,UAC7CP,EAAAC,EAAAC,cAAA,SAAOG,KAAK,WAAWC,KAAK,WAAWC,YAAY,cAErDP,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOM,SAAaT,EAAYM,KAAK,SAASI,MAAM,wCCa/Cd,cA5BA,SAAAC,GAAS,IACdc,EAAqCd,EAArCc,QAASZ,EAA4BF,EAA5BE,SAAUa,EAAkBf,EAAlBe,OAAQd,EAAUD,EAAVC,MAEnC,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,SAASU,GAAG,KAC1Bb,EAAAC,EAAAC,cAAA,wBAGAQ,EACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,4EAEAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASW,QAASH,GAA/B,mCAIAX,EAAAC,EAAAC,cAACa,EAAD,CAAOlB,MAAOA,EAAOC,SAAUA,OClBrCkB,0LAEF,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,aAAaU,GAAG,SAAhC,kEAEFb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,aAAaU,GAAG,UAAhC,mEARSI,IAAMC,YAeVvB,cAAWqB,GCdbG,SAAiB,SAAAC,GAAQ,OAAIA,EAASC,OAAOC,KAAK,SAAAD,GAAI,OAAID,EAASG,GAAKF,EAAOG,QAAQC,OAAOJ,OAO9FK,EAAW,SAAAC,GACtB,OAAOC,aAAaC,QAAQ,QAASF,IAQ1BG,EAAW,WACtB,QAAIF,aAAaG,QAAQ,UAChBH,aAAaG,QAAQ,UASnBC,EAAW,CACtBC,MAAO,mKACPC,OAAQ,8JACRC,KAAM,wJACNC,KAAM,kTACNC,KAAM,8FCuIOC,aA3Kb,SAAAA,EAAaC,GAASC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GACpBI,KAAKH,OAASA,EACdG,KAAKC,IAAMD,KAAKH,OAAOK,WAAW,MAElCF,KAAKG,MAAQ,GAEbH,KAAKI,GAAK,EACVJ,KAAKK,GAAK,EACVL,KAAKM,GAAK,EACVN,KAAKO,GAAK,EAEVP,KAAKQ,eAAiB,CAAC,EAAG,EAAG,EAAG,GAEhCR,KAAKS,iBACLT,KAAKU,WAAY,EAEjBV,KAAKW,cAAgBX,KAAKW,cAAcC,KAAKZ,MAC7CA,KAAKa,gBAAkBb,KAAKa,gBAAgBD,KAAKZ,MACjDA,KAAKc,gBAAkBd,KAAKc,gBAAgBF,KAAKZ,MACjDA,KAAKe,WAAaf,KAAKe,WAAWH,KAAKZ,kEAGxBgB,GACfhB,KAAKU,WAAY,EAEjBV,KAAKI,GAAKY,EAAEC,QACZjB,KAAKM,GAAKU,EAAEE,gDAGGF,GACf,GAAIhB,KAAKU,UAAW,CAClBV,KAAKmB,oBAELnB,KAAKK,GAAKW,EAAEC,QACZjB,KAAKO,GAAKS,EAAEE,QAEZ,IAAME,EAAiBpB,KAAKqB,oBAE5BrB,KAAKsB,SAASF,GACdpB,KAAKQ,eAAiBY,yCAIXJ,GACbhB,KAAKU,WAAY,EAEjBV,KAAKmB,oBAELnB,KAAKK,GAAKW,EAAEC,QACZjB,KAAKO,GAAKS,EAAEE,QAEZ,IAAME,EAAiBpB,KAAKqB,oBAE5BrB,KAAKsB,SAASF,GACdpB,KAAKQ,eAAiB,CAAC,EAAG,EAAG,EAAG,GAChCR,KAAKuB,6CAGGH,GAA+B,IAAAI,EAAfC,EAAeC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,MAChC1B,KAAKC,IAAI4B,YAAcJ,GACvBD,EAAAxB,KAAKC,KAAI6B,KAATC,MAAAP,EAAA1B,OAAAkC,EAAA,EAAAlC,CAAiBsB,IACjBpB,KAAKC,IAAIgC,qDAGU,IAAAC,EAAApC,OAAAqC,EAAA,EAAArC,CACWE,KAAKQ,eADhB,GACZ4B,EADYF,EAAA,GACTG,EADSH,EAAA,GACNI,EADMJ,EAAA,GACCK,EADDL,EAAA,GAGnBlC,KAAKC,IAAIuC,UAAUJ,EAAI,EAAGC,EAAI,EAAGC,EAAQ,EAAGC,EAAS,GACrDvC,KAAKC,IAAIwC,gDAIT,IAAMC,EAAe1C,KAAK2C,kBACpBC,EAAkB5C,KAAK6C,qBAE7B7C,KAAKG,MAAM2C,KAAX,GAAAC,OAAAjD,OAAAkC,EAAA,EAAAlC,CAAoB4C,GAApB5C,OAAAkC,EAAA,EAAAlC,CAAqC8C,0CAMzBI,GAAW,IAAAC,EAAAjD,KACvBA,KAAKG,MAAQ6C,EAEbA,EAAUE,QAAQ,SAAAC,GAChB,IAAM/B,EAAiB,CAAC+B,EAAW,GAAIA,EAAW,IAC5Cb,EAAQa,EAAW,GAAKA,EAAW,GACnCC,EAASD,EAAW,GAAKA,EAAW,GAE1C/B,EAAe0B,KAAKR,GACpBlB,EAAe0B,KAAKM,GAEpBH,EAAK3B,SAASF,4CAIFiC,GAAsB,IAAf5B,EAAeC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,MACrBU,EAASiB,EAATjB,EAAGC,EAAMgB,EAANhB,EAGXrC,KAAKsD,WAAWlB,EAAGC,EAFP,GAEeZ,GAC3BzB,KAAKuD,SAASnB,EAHF,GAGWC,EAAGD,EAAIoB,EAASnB,GACvCrC,KAAKuD,SAASnB,EAJF,GAIWC,EAAGD,EAAIoB,EAASnB,GACvCrC,KAAKuD,SAASnB,EAAGC,EALL,GAKcD,EAAGC,EAAImB,GACjCxD,KAAKuD,SAASnB,EAAGC,EANL,GAMcD,EAAGC,EAAImB,sCAGvBpB,EAAGC,EAAGmB,GAAoB,IAAf/B,EAAeC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,MAC7B1B,KAAKC,IAAIwC,YACTzC,KAAKC,IAAI4B,YAAcJ,EACvBzB,KAAKC,IAAIwD,IAAIrB,EAAGC,EAAGmB,EAAK,EAAG,EAAIE,KAAKC,IACpC3D,KAAKC,IAAIgC,0CAGD7B,EAAIE,EAAID,EAAIE,GAAmBmB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACvC1B,KAAKC,IAAIwC,YACTzC,KAAKC,IAAI2D,OAAOxD,EAAIE,GACpBN,KAAKC,IAAI4D,OAAOxD,EAAIE,GACpBP,KAAKC,IAAIgC,mDAGQ,IACT7B,EAAmBJ,KAAnBI,GAAIC,EAAeL,KAAfK,GAAIC,EAAWN,KAAXM,GAAIC,EAAOP,KAAPO,GAEpB,MAAO,CAACmD,KAAKI,IAAI1D,EAAIC,GAAKqD,KAAKI,IAAIxD,EAAIC,iDAGnB,IACZH,EAAmBJ,KAAnBI,GAAIC,EAAeL,KAAfK,GAAIC,EAAWN,KAAXM,GAAIC,EAAOP,KAAPO,GAEpB,MAAO,CAACmD,KAAKK,IAAI3D,EAAIC,GAAKqD,KAAKK,IAAIzD,EAAIC,gDAIvC,IAAMmC,EAAe1C,KAAK2C,kBACpBC,EAAkB5C,KAAK6C,qBAEzBP,EAAQM,EAAgB,GAAKF,EAAa,GAC1CU,EAASR,EAAgB,GAAKF,EAAa,GAE/C,SAAAK,OAAAjD,OAAAkC,EAAA,EAAAlC,CAAW4C,GAAX,CAAyBJ,EAAOc,oCAIhCpD,KAAKH,OAAOmE,iBAAiB,YAAahE,KAAKc,iBAC/Cd,KAAKH,OAAOmE,iBAAiB,UAAWhE,KAAKW,eAC7CX,KAAKH,OAAOmE,iBAAiB,YAAahE,KAAKa,0DAI/Cb,KAAKH,OAAOoE,oBAAoB,YAAajE,KAAKc,iBAClDd,KAAKH,OAAOoE,oBAAoB,UAAWjE,KAAKW,eAChDX,KAAKH,OAAOoE,oBAAoB,YAAajE,KAAKa,oDAIlD,OAAOb,KAAKG,2CAIZH,KAAKG,MAAQ,GACbH,KAAKC,IAAIuC,UAAU,EAAG,EAAGxC,KAAKH,OAAOyC,MAAOtC,KAAKH,OAAOuD,QACxDpD,KAAKC,IAAIwC,4CAITzC,KAAKS,iBACLT,KAAKe,sBCjKHmD,cACJ,SAAAA,EAAahH,GAAO,IAAA+F,EAAAnD,OAAAC,EAAA,EAAAD,CAAAE,KAAAkE,GAAA,IAAAC,GAClBlB,EAAAnD,OAAAsE,EAAA,EAAAtE,CAAAE,KAAAF,OAAAuE,EAAA,EAAAvE,CAAAoE,GAAAI,KAAAtE,KAAM9C,KAE8BA,MAA5BqH,EAHUJ,EAGVI,SAAUC,EAHAL,EAGAK,SAHA,OAOlBvB,EAAKwB,MAAQ,CACXF,WACAC,WACAE,iBALuB,oBAMvBC,WAPiB,kBAQjBC,QAAStF,EAASC,MAClBsF,eAAe,EACfC,UAAU,EACVC,OAAQ,EACRC,aAAa,EACbC,cAAc,EACdC,aAAa,GAGfjC,EAAKkC,SAAWlC,EAAKkC,SAASvE,KAAdd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KAChBA,EAAKoC,aAAepC,EAAKoC,aAAazE,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAKqC,kBAAoBrC,EAAKqC,kBAAkB1E,KAAvBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACzBA,EAAKsC,YAActC,EAAKsC,YAAY3E,KAAjBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACnBA,EAAKuC,kBAAoBvC,EAAKuC,kBAAkB5E,KAAvBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACzBA,EAAKwC,YAAcxC,EAAKwC,YAAY7E,KAAjBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACnBA,EAAKyC,YAAczC,EAAKyC,YAAY9E,KAAjBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACnBA,EAAK0C,cAAgB1C,EAAK0C,cAAc/E,KAAnBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACrBA,EAAK2C,eAAiB3C,EAAK2C,eAAehF,KAApBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACtBA,EAAK4C,UAAY5C,EAAK4C,UAAUjF,KAAfd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KAEjBA,EAAK6C,OAAS,GAhCI7C,mFAmCC,IACX0B,EAAe3E,KAAKyE,MAApBE,WAER3E,KAAK+F,OAAS/F,KAAK9C,MAAM6I,QAAU,IAAInG,EAAOoG,SAASC,cAActB,IACrE3E,KAAK2F,cAAgB3F,KAAK9C,MAAMyI,eAAiB3F,KAAK2F,cACtD3F,KAAK4F,4DAGaM,EAAWC,GAC7B,IAAMC,EAAeF,EAAU1B,SACXxE,KAAK9C,MAAMsH,SAEf5G,OAASwI,EAAaxI,MACnCoC,KAAK4F,gEAKR5F,KAAKuF,uDAGW,IAAAc,EACerG,KAAK9C,MAA5BqH,EADQ8B,EACR9B,SAAUC,EADF6B,EACE7B,SAElBxE,KAAKsG,SAAS,CACZ/B,WACAC,WACAI,QAAStF,EAASC,MAClBuF,UAAU,EACVE,aAAa,EACbH,eAAe,EACfE,OAAQ,GACP/E,KAAK2F,uDAQO,IAAAY,EAAAvG,KACfA,KAAKwG,sBAEL,IAAMC,EAAa,IAAIC,MAEvBD,EAAWE,IAAM3G,KAAKyE,MAAMD,SAASoC,QACrCH,EAAWI,OAAS,WAClBN,EAAKO,oBAAoBL,GACzBF,EAAKQ,mBACAnI,KAAK,WACJ2H,EAAKf,oBACLe,EAAKD,SAAS,CAAErB,cAAc,MAE/B+B,MAAMC,OAAOC,mDASF,IAAAC,EAAAnH,KAClB,OAAO,IAAIlB,QAAQ,SAACsI,EAASrI,GACzB,IAAMsI,EAAKF,EAAKG,sBACVC,EAAKJ,EAAKK,gBAGZH,EAAGI,aAAeF,EAAGE,WAAYL,IAChCD,EAAKG,sBAAsBtD,iBAAiB,eAAgBoD,mDAQhD,IAAAM,EACK1H,KAAKyE,MAAMD,SAASrB,WAAtCb,EADaoF,EACbpF,MAAOc,EADMsE,EACNtE,OAEfpD,KAAKwH,gBAAgBlF,MAAQA,EAC7BtC,KAAKwH,gBAAgBpE,OAASA,EAC9BpD,KAAKsH,sBAAsBhF,MAAQA,EACnCtC,KAAKsH,sBAAsBlE,OAASA,8CAOjBiE,GACnB,OAAOrH,KAAKsH,sBAAsBpH,WAAW,MAAMyH,UAAUN,EAAI,EAAG,0CAQtDO,GAAG,IACTC,EAAgB7H,KAAKyE,MAAMD,SAA3BqD,YACR,OAAIA,EAAYlG,OAAS,GAAU3B,KAAK+F,OAAO+B,aAAaD,2CAU5D,OAAO7B,SAASC,cAAcjG,KAAKyE,MAAME,0DAQzC,OAAOqB,SAASC,cAAcjG,KAAKyE,MAAMC,qDAG/B,IACFqD,EAAa/H,KAAKyE,MAAMD,SAAxBuD,SACAC,EAAahI,KAAKyE,MAAMF,SAAxByD,SAES,MAAbD,EACF/H,KAAKsG,SAAS,CACZjD,MAAO,KACPuB,QAAStF,EAASG,KAClBsF,OAAQiD,GACPhI,KAAKiI,gBACHjI,KAAKsG,SAAS,CAAEjD,MAAO,MAAQrD,KAAKiI,iDAUnCC,EAAOC,GACf,IAAMC,EAAcpI,KAAK8F,OAAOnE,OAEhC3B,KAAK8F,OAAOsC,GAAeC,WAAWH,EAAOC,+CAQ1B,IAAAG,EACWtI,KAAKyE,MAAMF,SAAjCgE,EADWD,EACXC,YAAa5I,EADF2I,EACE3I,KAErBK,KAAKwI,SAASxI,KAAKyF,YAA2B,IAAd8C,GAChCvI,KAAKwI,SAASxI,KAAK0F,YAAoB,IAAP/F,yCAQhCK,KAAK8F,OAAO5C,QAAQ,SAAAgF,GAClBO,aAAaP,KAGflI,KAAK8F,OAAS,yCAGD,IAMPf,EALED,EAAa9E,KAAKyE,MAAlBK,SADK4D,EAEqB1I,KAAKyE,MAAMF,SAArCyD,EAFKU,EAELV,SAAUW,EAFLD,EAEKC,YACVZ,EAAa/H,KAAKyE,MAAMD,SAAxBuD,SAER,OAAKjD,IAGHC,EAAsB,MAAbgD,EAAmBC,EAAWW,EAChC3I,KAAKsG,SAAS,CAAE1B,QAAStF,EAASK,KAAMmF,UAAU,EAAMC,UAAU/E,KAAKiI,uDAOhF,OAAOjI,KAAKsG,SAAS,CAAEzB,eAAe,8CAGrB7D,GACjBA,EAAE4H,UAEF,IAAMxG,EAAIpB,EAAE6H,YAAY5H,QAClBoB,EAAIrB,EAAE6H,YAAY3H,QAChB4D,EAAa9E,KAAKyE,MAAlBK,SACAiD,EAAa/H,KAAKyE,MAAMD,SAAxBuD,SACAY,EAAgB3I,KAAKyE,MAAMF,SAA3BoE,YAGR,OADK7D,GAAU9E,KAAKsG,SAAS,CAAEjD,MAAO,CAAEjB,IAAGC,OAC1B,MAAb0F,GAAqBjD,EAIlB9E,KAAK8I,yBAAyB9H,EAAE6H,aAH9B7I,KAAKsG,SAAS,CAAE1B,QAAStF,EAASE,OAAQuF,OAAQ4D,GAAe3I,KAAKiI,iEAMvDjH,GACxB,IAAMoB,EAAIpB,EAAEC,QACNoB,EAAIrB,EAAEE,QACJ4D,EAAa9E,KAAKyE,MAAlBK,SACA+C,EAAgB7H,KAAKyE,MAAMD,SAA3BqD,YACAG,EAAahI,KAAKyE,MAAMF,SAAxByD,SACFe,EAAUlB,EAAYmB,KAAK,SAAAC,GAAI,OACnC7G,EAAI6G,EAAK,IAAM5G,EAAI4G,EAAK,IAAM7G,EAAI6G,EAAK,IAAM5G,EAAI4G,EAAK,KAGnDnE,IACCiE,EAAS/I,KAAKiI,iBACbjI,KAAKsG,SAAS,CAAE1B,QAAStF,EAASI,KAAMqF,OAAQiD,GAAYhI,KAAKiI,iBAGpEc,GAAS/I,KAAK6F,UAAU7E,qCAGnBA,GAAG,IAAAkI,EAAAlJ,KACZA,KAAKsG,SAAS,CAAEpB,aAAa,GAAQ,WACnCgE,EAAKC,oBAAoBnI,GACzBkI,EAAKV,SAASU,EAAK5C,SAAS1F,KAAKsI,EAAM,CAAEhE,aAAa,IAAU,mDAI/ClE,GACnB,IAAMoI,EAAQpD,SAASC,cAAc,kBAErC,IAAKmD,EAAO,OAAO,EAEnBA,EAAMC,MAAMC,IAAMtI,EAAEuI,QAAWH,EAAMI,cAAgB,EAAK,KAC1DJ,EAAMC,MAAMI,KAAOzI,EAAE0I,QAAWN,EAAMO,aAAe,EAAK,KAC1D3J,KAAKwI,SAAS,kBAAMY,EAAMQ,UAAUC,IAAI,gBAAgB,6CAGxC,IAAAC,EAAA9J,KAChBA,KAAKsG,SAAS,CAAExB,UAAU,GAAQ,WAChCgF,EAAKvE,cACLuE,EAAKC,iBACLD,EAAKE,oDAIK,IAAAC,EACiCjK,KAAKyE,MAA1CM,EADIkF,EACJlF,OAAQ1B,EADJ4G,EACI5G,MAAOuB,EADXqF,EACWrF,QAASJ,EADpByF,EACoBzF,SAGhC,OAAO0F,EAFgBlK,KAAK9C,MAApBgN,YAEU,CAAEnF,SAAQ1B,QAAOuB,UAASJ,oDAG9B,IACNa,EAAiBrF,KAAK9C,MAAtBmI,aAIR,OAFArF,KAAKsG,SAAS,CAAEtB,aAAa,EAAOC,cAAc,IAE3CI,qCAGC,IAAA8E,EAAAnK,KAAAoK,EAC+FpK,KAAKyE,MAApGK,EADAsF,EACAtF,SAAUN,EADV4F,EACU5F,SAAUK,EADpBuF,EACoBvF,cAAeE,EADnCqF,EACmCrF,OAAQG,EAD3CkF,EAC2ClF,YAAaN,EADxDwF,EACwDxF,QAASI,EADjEoF,EACiEpF,YAAaC,EAD9EmF,EAC8EnF,aAC9E0D,EAAgB3I,KAAKyE,MAAMF,SAA3BoE,YACA0B,EAAkB7F,EAAlB6F,cAER,OACE/M,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mDACWgH,EAAS5G,MAEpBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAEXqH,EACAxH,EAAAC,EAAAC,cAAA,OAAK8M,GAAG,gBAAgB7M,UAAyB,IAAXsH,EAAe,QAAUA,IAAW4D,EAAc,SAAW,OAAU7D,EAAWF,EAAU,IAClI,IAGJtH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAEXqH,EACAxH,EAAAC,EAAAC,cAAA,QACE8M,GAAG,WACH7M,UAAyB,IAAXsH,EAAe,YAAcA,IAAW4D,EAAc,cAAgB,aAEtF,IAGJrL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UAAQ8M,GAAG,cAAcxM,SAAagH,IAAaG,EAAe7G,QAAW4B,KAAKmF,UAAlF,WAEF7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXuH,EACE1H,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAe6M,GAAG,qBAEtC,IAGJhN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UAAQ8M,GAAG,iBAAiBlM,QAAW6G,EAAe,SAACjE,GAAD,OAAOmJ,EAAK7E,kBAAkBtE,IAAK,gBAE3F1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXoH,EACEvH,EAAAC,EAAAC,cAAA,QAAM8M,GAAG,gBAAT,sIAEA,IAGNhN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAEbH,EAAAC,EAAAC,cAAA,UAAQ8M,GAAG,gBAAgBxM,UAAcgH,GAAYI,EAAa9G,QAAY4B,KAAKqF,cAAnF,YAGJ/H,EAAAC,EAAAC,cAAA,OAAKC,UAAWyH,EAAc,gBAAkB,SAAUyB,IAAO0D,EAAgBE,IAAI,kGAnWzEhM,IAAMiM,eAgXXvN,cAAWiH,GCnVXjH,qBA/BF,SAAAC,GAAS,IACZuN,EAA+BvN,EAA/BuN,aAAcC,EAAiBxN,EAAjBwN,aAEtB,OACIpN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,YAAYC,SAAa+M,GACzCnN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,mEAEEF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAO2M,GAAG,OAAOK,SAAaD,EAAeE,UAAQ,MAGrEtN,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,SAASI,MAAM,0EChBrC8M,qBACJ,SAAAA,EAAa3N,GAAO,IAAA+F,EAAAnD,OAAAC,EAAA,EAAAD,CAAAE,KAAA6K,GAAA,IAAA1G,GAClBlB,EAAAnD,OAAAsE,EAAA,EAAAtE,CAAAE,KAAAF,OAAAuE,EAAA,EAAAvE,CAAA+K,GAAAvG,KAAAtE,KAAM9C,KAEiCA,MAA/B4N,EAHU3G,EAGV2G,YAAavG,EAHHJ,EAGGI,SAHH,OAOlBtB,EAAKwB,MAAQ,CACXF,WACAuG,cACAC,OAAQ,GACRC,gBAAiB,EACjBtG,iBAPuB,oBAQvBC,WATiB,mBAYnB1B,EAAKgI,aAAehI,EAAKgI,aAAarK,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAKiI,QAAUjI,EAAKiI,QAAQtK,KAAbd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACfA,EAAKkI,QAAUlI,EAAKkI,QAAQvK,KAAbd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KAlBGA,mFAqBC,IACX0B,EAAe3E,KAAKyE,MAApBE,WAER3E,KAAK+F,OAAS/F,KAAK9C,MAAM6I,QAAU,IAAInG,EAAOoG,SAASC,cAActB,IACrE3E,KAAK2F,cAAgB3F,KAAK9C,MAAMyI,eAAiB3F,KAAK2F,cAEtD3F,KAAKoL,kEAIL,IAAMC,EAAQrL,KAAKyE,MAAMuG,gBACnBD,EAAS/K,KAAKyE,MAAMqG,YAAYO,GAEtCrL,KAAKsG,SAAS,CAAEyE,UAAU/K,KAAK2F,uDAQhB,IAAAY,EAAAvG,KACfA,KAAKwG,sBAEL,IAAMC,EAAa,IAAIC,MAEvBD,EAAWE,IAAM3G,KAAKyE,MAAMsG,OAAOvG,SAASoC,QAC5CH,EAAWI,OAAS,WAClBN,EAAKO,oBAAoBL,GACzBF,EAAK+E,8DAQYjE,GACnB,OAAOrH,KAAKsH,sBAAsBpH,WAAW,MAAMyH,UAAUN,EAAI,EAAG,4CAGpD,IACRhE,EAAUrD,KAAKyE,MAAMsG,OAArB1H,MAEJA,GAAOrD,KAAK+F,OAAOuF,eAAejI,iDAOjB,IAAAkI,EACKvL,KAAKyE,MAAMsG,OAAOvG,SAASrB,WAA7Cb,EADaiJ,EACbjJ,MAAOc,EADMmI,EACNnI,OAEfpD,KAAKwH,gBAAgBlF,MAAQA,EAC7BtC,KAAKwH,gBAAgBpE,OAASA,EAC9BpD,KAAKsH,sBAAsBhF,MAAQA,EACnCtC,KAAKsH,sBAAsBlE,OAASA,0CAQpC,OAAO4C,SAASC,cAAcjG,KAAKyE,MAAME,0DAQzC,OAAOqB,SAASC,cAAcjG,KAAKyE,MAAMC,yDAG3B,IACNuG,EAAiBjL,KAAK9C,MAAtB+N,aAER,OAAOA,sCAGE,IACHD,EAAoBhL,KAAKyE,MAAzBuG,gBAEN,GAAwB,IAApBA,EAAuB,OAAO,EAElChL,KAAKsG,SAAS,CAAE0E,gBAAiBA,EAAkB,GAAKhL,KAAKoL,sDAGpD,IAAAnB,EAC8BjK,KAAKyE,MAAtCuG,EADGf,EACHe,gBAEN,GAAIA,IAHKf,EACca,YAEanJ,OAAS,EAAG,OAAO,EAEvD3B,KAAKsG,SAAS,CAAE0E,gBAAiBA,EAAkB,GAAKhL,KAAKoL,qDAGrD,IAAAI,EAC2BxL,KAAKyE,MAAMsG,OAAtChG,EADAyG,EACAzG,OAAQH,EADR4G,EACQ5G,QAASvB,EADjBmI,EACiBnI,MACjBsF,EAAgB3I,KAAKyE,MAAMF,SAA3BoE,YAER,OACErL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcW,QAAW4B,KAAKiL,cAA3C,8CACA3N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMY,QAAY4B,KAAKmL,QAAU1N,UAAU,aAC3CH,EAAAC,EAAAC,cAAA,QAAMY,QAAY4B,KAAKkL,QAAUzN,UAAU,cAE7CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAK8M,GAAG,gBAAgB7M,UAAyB,IAAXsH,EAAe,QAAUA,IAAW4D,EAAc,SAAW,OAAU/D,IAE/GtH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,QACE8M,GAAG,WACH7M,UAAyB,IAAXsH,EAAe,YAAcA,IAAW4D,EAAc,cAAgB,cAItFtF,EACE,GAEF/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UAAQ8M,GAAG,cAAc7M,UAAU,eAAnC,WAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UAAQ8M,GAAG,sBAEbhN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UAAQ8M,GAAG,6BAzJD/L,IAAMiM,gBAuKbvN,cAAW4N,4BC3KbY,EAAU,oBAEVC,EAAe,WAAgC,IAAtBC,EAAsBjK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAb,MAAOkK,EAAMlK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpDiK,EAAc,CAChBF,SACAG,KAAM,OACNC,QAAS,CACPC,OAAU,mBACVC,eAAgB,mBAChBhN,MAASG,MAMf,OAFIwM,GAAM9L,OAAOoM,OAAOL,EAAa,CAAED,KAAMO,KAAKC,UAAUR,KAErDC,GCbHQ,EAAW,SAAUC,EAAKC,GAC9B,OAAO,IAAIzN,QAAQ,SAACsI,EAASrI,GAC3ByN,MAAK,GAAAzJ,OAAI0I,EAAJ,KAAA1I,OAAeuJ,GAAOZ,EAAa,OAAQa,IAC9C3N,KAAKH,GACLG,KAAK,SAAA6N,GAAG,OAAIrF,EAAQqF,KACpBzF,MAAM,SAAA0F,GAAG,OAAI3N,EAAO2N,QAIpBC,EAAU,SAAUL,EAAKC,GAC7B,OAAO,IAAIzN,QAAQ,SAACsI,EAASrI,GAC3ByN,MAAK,GAAAzJ,OAAI0I,EAAJ,KAAA1I,OAAeuJ,GAAOZ,EAAa,MAAOa,IAC7C3N,KAAKH,GACLG,KAAK,SAAA6N,GAAG,OAAIrF,EAAQqF,KACpBzF,MAAM,SAAA0F,GAAG,OAAI3N,EAAO2N,QAIpBE,EAAa,SAAUN,EAAKC,GAChC,OAAO,IAAIzN,QAAQ,SAACsI,EAASrI,GAC3ByN,MAAK,GAAAzJ,OAAI0I,EAAJ,KAAA1I,OAAeuJ,GAAOZ,EAAa,SAAUa,IAChD3N,KAAKH,GACLG,KAAK,SAAA6N,GAAG,OAAIrF,EAAQqF,KACpBzF,MAAM,SAAA0F,GAAG,OAAI3N,EAAO2N,QAIpBG,EAAW,SAAUP,EAAKC,GAC9B,OAAO,IAAIzN,QAAQ,SAACsI,EAASrI,GDZN,IAAU6M,ECa/BY,MAAK,GAAAzJ,OAAI0I,EAAJ,KAAA1I,OAAeuJ,IDbWV,ECaMW,EDZhC,CACHZ,OAAQ,OACRG,KAAM,OACNF,KAAMA,EACNG,QAAS,CACP9M,MAASG,QCQXR,KAAKH,GACLG,KAAK,SAAA6N,GAAG,OAAIrF,EAAQqF,KACpBzF,MAAM,SAAA0F,GAAG,OAAI3N,EAAO2N,QAIpBI,EAAe,SAAUR,EAAKS,GAClC,OAAOP,MAAK,GAAAzJ,OAAI0I,EAAJ,KAAA1I,OAAeuJ,GDTpB,CACLX,OAAQ,MACRG,KAAM,OACNC,QAAS,CACP9M,MAASG,OCMJR,KAAK,SAAAoO,GAAG,OAAIA,EAAIC,SAChBrO,KAAK,SAAAqO,GAAI,OAAIC,IAASD,EAAMF,MCnCjCI,cACJ,SAAAA,EAAajQ,GAAO,IAAA+F,EAAA,OAAAnD,OAAAC,EAAA,EAAAD,CAAAE,KAAAmN,IAClBlK,EAAAnD,OAAAsE,EAAA,EAAAtE,CAAAE,KAAAF,OAAAuE,EAAA,EAAAvE,CAAAqN,GAAA7I,KAAAtE,KAAM9C,KAEDuH,MAAQ,CACX2I,SAAS,EACTC,aAAa,EACbC,cAAc,EACdC,KAAM,GACNhJ,SAAU,GACViJ,MAAO,GACPxC,iBAAkB,EAClByC,UAAW,GACX3C,YAAa,GACb4C,aAAa,EACbC,MAAO,KAGT1K,EAAK2K,YAAc3K,EAAK2K,YAAYhN,KAAjBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACnBA,EAAKyH,aAAezH,EAAKyH,aAAa9J,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAKwH,aAAexH,EAAKwH,aAAa7J,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAKoC,aAAepC,EAAKoC,aAAazE,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAKiH,WAAajH,EAAKiH,WAAWtJ,KAAhBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KAClBA,EAAK4K,YAAc5K,EAAK4K,YAAYjN,KAAjBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACnBA,EAAKgI,aAAehI,EAAKgI,aAAarK,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAK6K,WAAa7K,EAAK6K,WAAWlN,KAAhBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KAElBA,EAAK0J,QAAU1J,EAAK/F,MAAMyP,SAAWA,EA1BnB1J,mFA8BlBjD,KAAK+N,cACL/N,KAAKgO,gDAGOhN,GACZ,IAAMuL,EAAO,GAEbA,EAAKvL,EAAEiN,OAAO3D,IAAMtJ,EAAEiN,OAAOlQ,MAE7BiC,KAAKsG,SAASiG,wCAGFvL,GACZA,EAAEkN,iBAEFlO,KAAKmO,mDAGQ,IAAA5H,EAAAvG,KACb,OAAOA,KAAK2M,QAAQ,YACR/N,KAAK,SAAA2F,GAAQ,OAAIgC,EAAKqH,YAAYrJ,KAClCyC,MAAM,SAAA0F,GAAG,OAAInG,EAAKD,SAAS,CAAEoG,KAAK,yCAGpC,IAAAvF,EAAAnH,KACV,OAAOA,KAAK2M,QAAQ,SACR/N,KAAK,SAAA4O,GAAK,OAAIrG,EAAKb,SAAS,CAAEkH,YAC9BxG,MAAM,SAAA0F,GAAG,OAAIvF,EAAKb,SAAS,CAAEoG,KAAK,0CAGnC0B,GACX,IAAMC,EAAiB,GAEvBD,EAAclL,QAAQ,SAAAoL,GACpBD,EAAeC,EAAK1Q,MAAQ0Q,EAAKvQ,QAGnCiC,KAAKsG,SAAS,CAAE/B,SAAU8J,yCAGd,IACJb,EAAUxN,KAAKyE,MAAf+I,MACFe,EAAUf,EAAM7L,OAEhB6M,EAAahB,EADH9J,KAAK+K,MAAM/K,KAAKgL,SAAWH,IACT3Q,KAElCoC,KAAK2O,aAAaH,wCAGNA,GAAY,IAAAtF,EAAAlJ,KACxB,OAAOA,KAAK2M,QAAL,aAAA5J,OAA0ByL,IACrB5P,KAAK,SAAA6O,GAAS,OAAIvE,EAAK5C,SAAS,CAAEmH,aAAavE,EAAKkC,sBACpDpE,MAAM,SAAA0F,GAAG,OAAIzF,OAAOC,MAAMwF,kDAItC,IAAM1B,EAAkBhL,KAAKyE,MAAMuG,gBAAkB,EAGjDA,EAFmBhL,KAAKyE,MAAMgJ,UAAU9L,OAEN3B,KAAKsG,SAAS,CAAE+G,aAAa,EAAMrC,oBACpEhL,KAAKsG,SAAS,CAAEgH,cAAc,EAAMD,aAAa,2CAItD,OAAOrN,KAAKoL,wDAGFrG,GAAQ,IAAAkF,EACWjK,KAAKyE,MAA5BkJ,EADY1D,EACZ0D,MAAO7C,EADKb,EACLa,YAEb6C,GAAgB5I,EAAOA,OACvB+F,EAAYhI,KAAKiC,GACjB/E,KAAKsG,SAAS,CAAEqH,QAAO7C,sDAIvB9K,KAAKsG,SAAS,CAAEoH,aAAa,2CAI7B1N,KAAKsG,SAAS,CAAEoH,aAAa,yCAI7B1N,KAAKsG,SAAS,CAAEgH,cAAc,EAAMD,aAAa,qCAGzC,IAAAjD,EASUpK,KAAKyE,MAPrB4I,EAFMjD,EAENiD,YACA9I,EAHM6F,EAGN7F,SACAyG,EAJMZ,EAINY,gBACAyC,EALMrD,EAKNqD,UACAE,EANMvD,EAMNuD,MACAL,EAPMlD,EAONkD,aACAI,EARMtD,EAQNsD,YACA5C,EATMV,EASNU,YATM3G,EAU0BnE,KAAK9C,MAA/B6I,EAVA5B,EAUA4B,OAAQJ,EAVRxB,EAUQwB,cACRiJ,EAAmBrK,EAAnBqK,eAER,OACEtR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXiQ,EACEpQ,EAAAC,EAAAC,cAACqR,EAAD,CACE/D,YAAgBA,EAChBG,aAAiBjL,KAAKiL,aACtB1G,SAAaA,IAGjB8I,EACG/P,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAAA,8CACWmQ,EADX,KAGArQ,EAAAC,EAAAC,cAACsR,EAAD,CACEnJ,cAAkBA,EAClBI,OAAWA,EACXvB,SAAaiJ,EAAUzC,GACvBzG,SAAaA,EACb2F,WAAelK,KAAKkK,WACpB7E,aAAiBrF,KAAKqF,gBAI5BiI,EACGhQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uFAEEF,EAAAC,EAAAC,cAAA,QACAC,UAAckQ,EAAQiB,EAAiB,OAASjB,EAAQ,IAAM,UAAY,WAD1E,IAEIA,EAFJ,OAKJrQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGY,QAAW4B,KAAK6N,aAAnB,2FAIHvQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAACuR,EAAD,CACErE,aAAiB1K,KAAK0K,aACtBD,aAAiBzK,KAAKyK,wBA9KnBlM,IAAMC,WAuLVvB,cAAWkQ,GC3LpB6B,cACJ,SAAAA,EAAa9R,GAAO,IAAA+F,EAAA,OAAAnD,OAAAC,EAAA,EAAAD,CAAAE,KAAAgP,IAClB/L,EAAAnD,OAAAsE,EAAA,EAAAtE,CAAAE,KAAAF,OAAAuE,EAAA,EAAAvE,CAAAkP,GAAA1K,KAAAtE,KAAM9C,KAEDuH,MAAQ,CACXgJ,UAAW,GACXlJ,SAAU,GACViJ,MAAO,GACPyB,YAAY,EACZvC,KAAK,GAGPzJ,EAAKiM,UAAYjM,EAAKiM,UAAUtO,KAAfd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACjBA,EAAKkM,YAAclM,EAAKkM,YAAYvO,KAAjBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACnBA,EAAKyH,aAAezH,EAAKyH,aAAa9J,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAKwH,aAAexH,EAAKwH,aAAa7J,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAKmM,OAASnM,EAAKmM,OAAOxO,KAAZd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACdA,EAAKoM,iBAAmBpM,EAAKoM,iBAAiBzO,KAAtBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KAExBA,EAAK0J,QAAU1J,EAAK/F,MAAMyP,SAAWA,EACrC1J,EAAKoJ,SAAWpJ,EAAK/F,MAAMmP,UAAYA,EACvCpJ,EAAK4J,SAAW5J,EAAK/F,MAAM2P,UAAYA,EACvC5J,EAAK2J,WAAa3J,EAAK/F,MAAM0P,YAAcA,EAC3C3J,EAAK6J,aAAe7J,EAAK/F,MAAM4P,cAAgBA,EAtB7B7J,mFA0BlBjD,KAAK+N,cACL/N,KAAKgO,WACLhO,KAAK2O,qDAGQ,IAAApI,EAAAvG,KACb,OAAOA,KAAK2M,QAAQ,YACR/N,KAAK,SAAA2F,GAAQ,OAAIgC,EAAKD,SAAS,CAAE/B,eACjCyC,MAAM,SAAA0F,GAAG,OAAInG,EAAKD,SAAS,CAAEoG,KAAK,yCAGpC,IAAAvF,EAAAnH,KACV,OAAOA,KAAK2M,QAAQ,SACR/N,KAAK,SAAA4O,GAAK,OAAIrG,EAAKb,SAAS,CAAEkH,YAC9BxG,MAAM,SAAA0F,GAAG,OAAIvF,EAAKb,SAAS,CAAEoG,KAAK,6CAGhC,IAAAxD,EAAAlJ,KACd,OAAOA,KAAK2M,QAAQ,aACR/N,KAAK,SAAA6O,GAAS,OAAIvE,EAAK5C,SAAS,CAAEmH,gBAClCzG,MAAM,SAAA0F,GAAG,OAAIxD,EAAK5C,SAAS,CAAEoG,KAAK,4CAI9C1M,KAAKgO,WACLhO,KAAK2O,iDAGIW,EAAK1R,GAAM,IAAAkM,EAAA9J,KAGpB,GAFWiH,OAAOsI,QAAQ,4DAGxB,OAAOvP,KAAK4M,WAAL,aAAA7J,OAA6BuM,EAA7B,KAAAvM,OAAoCnF,IAC/BgB,KAAK,SAAA6N,GAAG,OAAI3C,EAAK0F,gBACjBxI,MAAM,SAAA0F,GAAG,OAAI5C,EAAKxD,SAAS,CAAEoG,KAAK,0CAIrC9O,GACX,OAAOoC,KAAKqM,SAAS,OAAQ,CAAEzO,SACnBgB,KAAK,SAAA6N,GAAG,OAAIxF,OAAOC,MAAM,wGACzBF,MAAMC,OAAOC,4CAGblG,GAAG,IAAAyO,EACOzO,EAAEiN,OAAlBlQ,EADS0R,EACT1R,MAAOJ,EADE8R,EACF9R,KACL+R,GAAgB1O,EAAEiN,QAAUjN,EAAEiN,OAAO0B,SAArCD,YACF9R,EAAOoD,EAAEiN,OAAO3D,GACd/F,EAAavE,KAAKyE,MAAlBF,SAERxG,EAAQiC,KAAK4P,YAAY7R,EAAOJ,GAEhC4G,EAASrB,QAAQ,SAACoL,EAAMuB,GAClBjS,IAAS0Q,EAAK1Q,OAAM2G,EAASsL,GAAK,CAAEC,IAAKxB,EAAKwB,IAAKlS,OAAMG,QAAOJ,OAAM+R,kBAG5E1P,KAAKsG,SAAS,CAAE/B,iDAGLwL,EAAKpS,GAChB,IAAMqS,EAAW,CACfC,OAAQ,kBAAMC,OAAOH,KAGvB,OAAIC,EAASrS,GAAcqS,EAASrS,GAAMoS,GAC9BA,mCAGJ,IAAA5F,EAAAnK,KAGR,OAFAA,KAAKsG,SAAS,CAAE2I,YAAY,IAErBjP,KAAK2M,QAAQ,UACR/N,KAAK,WAEHuL,EAAK2C,aAAa,2BAA4B,cAC9CzE,WAAW,kBACT8B,EAAK2C,aAAa,+BAAgC,mBACpD,OAEF9F,MAAMC,OAAOC,OACbiJ,QAAQ,kBAAMhG,EAAK7D,SAAS,CAAE2I,YAAY,+CAGtCjO,GAAG,IAAAoP,EAAApQ,KAKnB,GAJAgB,EAAEkN,iBAESjH,OAAOsI,QAAQ,8QAE1B,CAEAvP,KAAKsG,SAAS,CAAE2I,YAAY,IAE5B,IAAM1C,EAAOvM,KAAK9C,MAAMmT,gBAAkBrQ,KAAKqQ,iBAE/C,OAAOrQ,KAAK6M,SAAS,SAAUN,GACnB3N,KAAK,WACHqI,OAAOC,MAAM,8HACbkJ,EAAKZ,gBAEPxI,MAAMC,OAAOC,OACbiJ,QAAQ,kBAAMC,EAAK9J,SAAS,CAAE2I,YAAY,gDAItD,IAAMxB,EAAYzH,SAASC,cAAc,wCACnCuH,EAAQxH,SAASC,cAAc,oCAC/BsG,EAAO,IAAI+D,SAKjB,OAHA/D,EAAKgE,OAAO,YAAa9C,EAAU+C,MAAM,IACzCjE,EAAKgE,OAAO,QAAS/C,EAAMgD,MAAM,IAE1BjE,uCAGKvL,GAAG,IAAAyP,EAAAzQ,KACfgB,EAAEkN,iBACFlO,KAAKsG,SAAS,CAAE2I,YAAY,IAFb,IAIP1K,EAAavE,KAAKyE,MAAlBF,SAER,OAAOvE,KAAKqM,SAAS,WAAY,CAAE9H,aACvB3F,KAAK,SAAA6N,GAAG,OAAIxF,OAAOC,MAAM,wGACzBF,MAAMC,OAAOC,OACbiJ,QAAQ,kBAAMM,EAAKnK,SAAS,CAAE2I,YAAY,uCAG9C,IAAAyB,EAAA1Q,KAAAiK,EAC2CjK,KAAKyE,MAAhDF,EADA0F,EACA1F,SAAUiJ,EADVvD,EACUuD,MAAOC,EADjBxD,EACiBwD,UAAWwB,EAD5BhF,EAC4BgF,WAEpC,OACE3R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,aAAaU,GAAG,gBAAhC,sGACAb,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,aAAaU,GAAG,oBAAhC,mHAEFb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQM,SAAUmR,EAAYxR,UAAU,0BAA0BW,QAAS4B,KAAKoP,QAAhF,mFACA9R,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASC,SAAUsC,KAAKqP,kBACtC/R,EAAAC,EAAAC,cAAA,oKACEF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAOC,KAAK,YAAY+S,OAAO,QAAQ/F,UAAQ,KACrDtN,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,wJACEF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAOC,KAAK,QAAQ+S,OAAO,QAAQ/F,UAAQ,KACjDtN,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,SAAOM,SAAUmR,EAAYtR,KAAK,SAASI,MAAM,yGAIrDT,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,QAAME,SAAUsC,KAAKyK,cAEjBlG,EAASqM,IAAI,SAAAtC,GACX,OAAOhR,EAAAC,EAAAC,cAAA,OAAKqT,IAAKvC,EAAKwB,KACpBxS,EAAAC,EAAAC,cAAA,aACG8Q,EAAKoB,YADR,WAEEpS,EAAAC,EAAAC,cAAA,SACE8M,GAAIgE,EAAK1Q,KACTkT,mBAAkBxC,EAAKoB,YACvB/R,KAAM2Q,EAAK3Q,KACXI,MAAOuQ,EAAKvQ,MACZ4M,SAAU+F,EAAKhG,mBAMzBpN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOM,SAAUmR,EAAYtR,KAAK,SAASI,MAAM,8DAIzDT,EAAAC,EAAAC,cAAA,YAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,UAEIgQ,EAAMoD,IAAI,SAAAG,GACR,OAAOzT,EAAAC,EAAAC,cAAA,MAAIqT,IAAKE,EAAKjB,KAAMiB,EAAKnT,KAAzB,UACPN,EAAAC,EAAAC,cAAA,KAAGY,QAAS,kBAAMsS,EAAKvB,YAAY4B,EAAKnT,QAAxC,oDADO,UAEPN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASW,QAAS,kBAAMsS,EAAKxB,UAAU,OAAQ6B,EAAKnT,QAAjE,mDAMRN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,UAEIiQ,EAAUmD,IAAI,SAAAI,GACZ,OAAO1T,EAAAC,EAAAC,cAAA,MAAIqT,IAAKG,EAAElB,KAAMkB,EAAEpT,KAAnB,UACLN,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAE,6BAAA4E,OAA+BiO,EAAEpT,OAAzC,oDADK,SAELN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASW,QAAS,kBAAMsS,EAAKxB,UAAU,WAAY8B,EAAEpT,QAAlE,2DA9NEW,IAAMC,WAyOXvB,cAAW+R,GC1OpBiC,mLAEF,OACE3T,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+EACAF,EAAAC,EAAAC,cAAA,oLALgBe,IAAMC,WAWfvB,cAAWgU,GCVpBC,cACJ,SAAAA,EAAahU,GAAO,IAAA+F,EAAA,OAAAnD,OAAAC,EAAA,EAAAD,CAAAE,KAAAkR,IAClBjO,EAAAnD,OAAAsE,EAAA,EAAAtE,CAAAE,KAAAF,OAAAuE,EAAA,EAAAvE,CAAAoR,GAAA5M,KAAAtE,KAAM9C,KAEDuH,MAAQ,CACXiI,KAAK,EACLU,SAAS,EACTxP,KAAM,IAGRqF,EAAKyH,aAAezH,EAAKyH,aAAa9J,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAKwH,aAAexH,EAAKwH,aAAa7J,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAKoJ,SAAWnP,EAAMmP,UAAYA,EAXhBpJ,4EAcNjC,GAAG,IAAAuF,EAAAvG,KACfgB,EAAEkN,iBADa,IAGPtQ,EAASoC,KAAKyE,MAAd7G,KAIR,OAFAoC,KAAKsG,SAAS,CAAE8G,SAAS,IAElBpN,KAAKqM,SAAS,OAAQ,CAAEzO,SACnBgB,KAAK,SAAA6N,GAAG,OAAIxF,OAAOC,MAAM,wGACzBF,MAAMC,OAAOC,OACbiJ,QAAQ,kBAAM5J,EAAKD,SAAS,CAAE8G,SAAS,2CAGvCpM,GACZ,IAAMuL,EAAO,GAEbA,EAAKvL,EAAEiN,OAAO3D,IAAMtJ,EAAEiN,OAAOlQ,MAE7BiC,KAAKsG,SAASiG,oCAGN,IACAa,EAAYpN,KAAKyE,MAAjB2I,QAER,OACE9P,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,QAAME,SAAUsC,KAAKyK,cACnBnN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qFACqBF,EAAAC,EAAAC,cAAA,SAAO8M,GAAG,OAAOK,SAAU3K,KAAK0K,aAAc/M,KAAK,SAASmG,IAAI,QAGvFxG,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOM,SAAYsP,EAAUzP,KAAK,SAASI,MAAM,2DAlDxCQ,IAAMC,WA4DhBvB,cAAWiU,GC1DpBC,qBACJ,SAAAA,IAAe,IAAAlO,EAAA,OAAAnD,OAAAC,EAAA,EAAAD,CAAAE,KAAAmR,IACblO,EAAAnD,OAAAsE,EAAA,EAAAtE,CAAAE,KAAAF,OAAAuE,EAAA,EAAAvE,CAAAqR,GAAA7M,KAAAtE,QAEKyE,MAAQ,CACX2I,SAAS,EACTV,KAAK,EACL9F,QAAS,GACTzD,WAAY,CAAEb,MAAO,EAAGc,OAAQ,GAChCyE,YAAa,GACbjK,KAAM,GACNmK,SAAU,KAGZ9E,EAAKyH,aAAezH,EAAKyH,aAAa9J,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAKmO,aAAenO,EAAKmO,aAAaxQ,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAKoO,aAAepO,EAAKoO,aAAazQ,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACpBA,EAAKqO,YAAcrO,EAAKqO,YAAY1Q,KAAjBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACnBA,EAAKsO,aAAetO,EAAKsO,aAAa3Q,KAAlBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KAjBPA,mFAuBbjD,KAAKsG,SAAS,CAAE5B,iBADS,oBACSC,WAFf,oBAInB3E,KAAK+F,OAAS/F,KAAK9C,MAAM6I,QAAU,IAAInG,EAAOoG,SAASC,cAJpC,oBAKnBjG,KAAK6M,SAAW7M,KAAK9C,MAAM2P,UAAYA,EACvC7M,KAAKqM,SAAWrM,KAAK9C,MAAMmP,UAAYA,EACvCrM,KAAK2M,QAAU3M,KAAK9C,MAAMyP,SAAWA,EACrC3M,KAAK2F,cAAgB3F,KAAK9C,MAAMyI,eAAiB3F,KAAK2F,cACtD3F,KAAKwR,wEAILxR,KAAK+F,OAAO0L,gDAQZ,OAAOzL,SAASC,cAAcjG,KAAKyE,MAAME,0DAQzC,OAAOqB,SAASC,cAAcjG,KAAKyE,MAAMC,mEAWzC,GAAI1E,KAAK9C,MAAMwU,UAAY1R,KAAK9C,MAAMwU,SAASC,OAAOhQ,OAAS,EAAG,CAChE,IACM6C,EADQ,IAAIoN,gBAAgB5R,KAAK9C,MAAMwU,SAASC,QAC/BE,IAAI,YAE3B,OAAO7R,KAAK8R,YAAYtN,wCASfA,GAAU,IAAA+B,EAAAvG,KACrB,OAAOA,KAAK2M,QAAL,YAAA5J,OAAyByB,IACpB5F,KAAK,SAAA6N,GACCA,GACFlG,EAAKD,SAASmG,EAAKlG,EAAKZ,iBAG5BqB,MAAMC,OAAOC,4CAQblG,GAAG,IAAAmG,EAAAnH,KACfgB,EAAEkN,iBAEF,IAAM3B,EAAOvM,KAAK9C,MAAMmT,gBAAkBrQ,KAAKqQ,iBACzCgB,EAAerR,KAAK9C,MAAMmU,cAAgBrR,KAAKqR,aAErDrR,KAAKsG,SAAS,CAAE8G,SAAS,IAEzBpN,KAAK6M,SAAS,YAAaN,GACxB3N,KAAKyS,GACLrK,MAAMC,OAAOC,OACbiJ,QAAQ,kBAAMhJ,EAAKb,SAAS,CAAE8G,SAAS,2CAQ9BX,GAAK,IACT7O,EAASoC,KAAKyE,MAAd7G,KACFgJ,EAAO,WAAA7D,OAAcnF,EAAd,WAAAmF,OAA4B0J,EAAI9O,MAC7CqC,KAAK+F,OAAO0L,QAEZzR,KAAKsG,SAAS,CACZM,QAASA,EACTzD,WAAYsJ,GACXzM,KAAK2F,wDAQR,IAAMoM,EAAQ/L,SAASC,cAAc,uBAC/BmD,EAAQpD,SAASC,cAAc,uBAFrBgE,EAGWjK,KAAKyE,MAAxB7G,EAHQqM,EAGRrM,KAAMmK,EAHEkC,EAGFlC,SACRwE,EAAO,IAAI+D,SAMjB,OAJA/D,EAAKgE,OAAO,WAAY3S,GACxB2O,EAAKgE,OAAO,QAASwB,EAAMvB,MAAM,IAChB,MAAbzI,GAAkBwE,EAAKgE,OAAO,QAASnH,EAAMoH,MAAM,IAEhDjE,uCAOKvL,GACZ,IAAMuL,EAAO,GAEbA,EAAKvL,EAAEiN,OAAO3D,IAAMtJ,EAAEiN,OAAOlQ,MAE7BiC,KAAKsG,SAASiG,2CAQC,IAAArD,EAAAlJ,KACfA,KAAKwG,sBAEL,IAAMC,EAAa,IAAIC,MAEvBD,EAAWE,IAAM3G,KAAKyE,MAAMmC,QAC5BH,EAAWI,OAAS,WAClBqC,EAAKpC,oBAAoBL,GACzByC,EAAKa,gEAQc,IAAAiI,EACKhS,KAAKyE,MAAMtB,WAA7Bb,EADa0P,EACb1P,MAAOc,EADM4O,EACN5O,OAEfpD,KAAKwH,gBAAgBlF,MAAQA,EAC7BtC,KAAKwH,gBAAgBpE,OAASA,EAC9BpD,KAAKsH,sBAAsBhF,MAAQA,EACnCtC,KAAKsH,sBAAsBlE,OAASA,8CAOjBiE,GACnB,OAAOrH,KAAKsH,sBAAsBpH,WAAW,MAAMyH,UAAUN,EAAI,EAAG,0CAQtDO,GAAG,IACTC,EAAgB7H,KAAKyE,MAArBoD,YAIR,OAFIA,EAAYlG,OAAS,GAAG3B,KAAK+F,OAAO+B,aAAaD,GAE9C7H,KAAK+F,OAAOkM,8CAQnB,OAAOjS,KAAK+F,OAAOhF,oDAOL,IAAA+I,EAAA9J,KAAAoK,EACkCpK,KAAKyE,MAA7CmC,EADMwD,EACNxD,QAAShJ,EADHwM,EACGxM,KAAMmK,EADTqC,EACSrC,SAAU5E,EADnBiH,EACmBjH,WAE3BqB,EAAW,CACf5G,OACAmK,WACAF,YAAa7H,KAAK+F,OAAOmM,WACzBtL,UACAzD,cAKD,OAFAnD,KAAKsG,SAAS,CAAE8G,SAAS,IAElBpN,KAAKqM,SAAS,eAAgB7H,GACzB5F,KAAK,SAAA6N,GAAG,OAAIxF,OAAOC,MAAM,wGACzBF,MAAMC,OAAOC,OACbiJ,QAAQ,kBAAMrG,EAAKxD,SAAS,CAAE8G,SAAS,uCAG5C,IAAA+E,EAC4BnS,KAAKyE,MAAjC2I,EADA+E,EACA/E,QAASrF,EADToK,EACSpK,SAAUnK,EADnBuU,EACmBvU,KAE3B,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,QAAME,SAAUsC,KAAKoR,cACnB9T,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4DAEEF,EAAAC,EAAAC,cAAA,SACE8M,GAAG,OACHK,SAAU3K,KAAK0K,aACf0H,QAAQ,gBACRxU,KAAK,OACLD,KAAK,OACLI,MAASH,EAAK+D,OAAS,EAAI/D,EAAO,GAClCC,YAAY,0FACZ+M,UAAQ,MAIdtN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6GAEEF,EAAAC,EAAAC,cAAA,SACEI,KAAK,QACLD,KAAK,OACLiN,UAAQ,MAIdtN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2FAEEF,EAAAC,EAAAC,cAAA,UACE8M,GAAG,WACHK,SAAU3K,KAAK0K,aACf3M,MAAoB,MAAbgK,EAAmB,IAAM,KAEhCzK,EAAAC,EAAAC,cAAA,UAAQO,MAAM,KAAd,gBACAT,EAAAC,EAAAC,cAAA,UAAQO,MAAM,KAAd,yBAKS,MAAbgK,EACAzK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uGAEEF,EAAAC,EAAAC,cAAA,SACEI,KAAK,QACLD,KAAK,OACLiN,UAAQ,MAIdtN,EAAAC,EAAAC,cAAA,aAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOM,SAAUsP,EAASzP,KAAK,SAASI,MAAM,oEAIpDT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASW,QAAS4B,KAAKsR,aAAzC,oDACAhU,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUK,SAAUsP,GAAoB,KAATxP,EAAaQ,QAAS4B,KAAKuR,cAA5E,2DAEFjU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,UAAQ8M,GAAG,qBACXhN,EAAAC,EAAAC,cAAA,UAAQ8M,GAAG,6BA9SM/L,IAAMC,YAsTpBvB,cAAWkU,2BCpOXkB,qBA1Eb,SAAAA,EAAanV,GAAO,IAAA+F,EAAA,OAAAnD,OAAAC,EAAA,EAAAD,CAAAE,KAAAqS,IAClBpP,EAAAnD,OAAAsE,EAAA,EAAAtE,CAAAE,KAAAF,OAAAuE,EAAA,EAAAvE,CAAAuS,GAAA/N,KAAAtE,KAAM9C,KAEDuH,MAAQ,CACXzG,SAAS,EACTZ,UAAU,EACVC,WAAW,EACX4B,WAAO2C,GAGTqB,EAAK9F,MAAQ8F,EAAK9F,MAAMyD,KAAXd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACbA,EAAKhF,OAASgF,EAAKhF,OAAO2C,KAAZd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KACdA,EAAKqP,WAAarP,EAAKqP,WAAW1R,KAAhBd,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAAmD,KAElBA,EAAKoJ,SAAWpJ,EAAK/F,MAAMmP,UAAYA,EACvCpJ,EAAKjE,SAAWiE,EAAK/F,MAAM8B,UAAYA,EAfrBiE,qEAkBbjC,GAAG,IAAAuF,EAAAvG,KACRgB,EAAEkN,iBAEF,IAAM3B,EAAO,CACXpP,MAAO6D,EAAEiN,OAAO9Q,MAAMY,MACtBwU,SAAUvR,EAAEiN,OAAOsE,SAASxU,OAK9B,OAFAiC,KAAKsG,SAAS,CAAEjJ,WAAW,IAEpB2C,KAAKqM,SAAS,QAASE,GAClB3N,KAAKoB,KAAKsS,YACVtL,MAAMwL,QAAQC,KACdtC,QAAQ,kBAAM5J,EAAKD,SAAS,CAAEjJ,WAAW,yCAG3CoP,GACNA,EAAIiG,MAAM1S,KAAKhB,SAASyN,EAAIxN,OAChCe,KAAKsG,SAAS,CAAEtI,QAASyO,EAAIiG,KAAMtV,UAAWqP,EAAIiG,KAAMzT,MAAOwN,EAAIxN,yCAInEe,KAAKsG,SAAS,CACZtI,SAAS,EACTiB,WAAO2C,IAGR5B,KAAKhB,SAAS,uCAGP,IAAAiL,EACiCjK,KAAKyE,MAAtCzG,EADAiM,EACAjM,QAASZ,EADT6M,EACS7M,SAAUC,EADnB4M,EACmB5M,UAE3B,OACEC,EAAAC,EAAAC,cAACmV,EAAA,EAAD,KACErV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoV,EAAD,CACC5U,QAASA,EACTZ,SAAUA,EACVC,UAAaA,EACbF,MAAO6C,KAAK7C,MACZc,OAAQ+B,KAAK/B,SAEdX,EAAAC,EAAAC,cAACqV,EAAA,EAAD,KACEvV,EAAAC,EAAAC,cAACsV,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAQ1U,EAAM2U,OAAK,IACnC3V,EAAAC,EAAAC,cAACsV,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAQ7F,IAC5B7P,EAAAC,EAAAC,cAACsV,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAQhV,EAAUgR,EAAQiC,IAC/C3T,EAAAC,EAAAC,cAACsV,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAQhV,EAAUkT,EAAaD,IAC1D3T,EAAAC,EAAAC,cAACsV,EAAA,EAAD,CAAOC,KAAK,mBAAmBC,OAAQhV,EAAUmT,EAAiBF,cAnE5D1S,IAAMC,YCTxB0U,IAASF,OACP1V,EAAAC,EAAAC,cAAC2V,EAAD,MACAnN,SAASoN,eAAe","file":"static/js/main.b3d79d1f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './Header.sass'\r\n\r\nconst Login = props => {\r\n  const { login, authFail, isLogging } = props\r\n\r\n  return (\r\n      <form className='loginForm' onSubmit = { login }>\r\n        {\r\n          authFail ?\r\n            <div className='authFailMessage'>Неверное имя пользователя или пароль!</div>\r\n          :\r\n            ''\r\n        }\r\n        <span>\r\n          <input type='login' name='login' placeholder='login'/>\r\n          <input type='password' name='password' placeholder='password'/>\r\n        </span>\r\n        <span>\r\n          <input disabled = { isLogging } type='submit' value='Войти'/>\r\n        </span>\r\n      </form>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Login)\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Login from './Login'\r\nimport './Header.sass'\r\n\r\nconst Header = props => {\r\n  const { isAdmin, authFail, logoff, login } = props\r\n\r\n  return (\r\n    <div className='headerArea'>\r\n      <Link className='header' to='/'>\r\n        <h1>XRay-test</h1>\r\n      </Link>\r\n      {\r\n        isAdmin\r\n          ? <div className='loginArea'>\r\n            Вход выполнен\r\n            <a className='logoff' onClick={logoff}>\r\n              Выйти\r\n            </a>\r\n          </div>\r\n          : <Login login={login} authFail={authFail}/>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  isAdmin: PropTypes.bool.isRequired,\r\n  logoff: PropTypes.func.isRequired,\r\n  login: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import React from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport './Menu.sass'\r\n\r\nclass Menu extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className='container'>\r\n        <div className='menuItem'>\r\n          <Link className='menuButton' to='/test'>Начать тест</Link>\r\n        </div>\r\n        <div className='menuItem'>\r\n          <Link className='menuButton' to='/admin'>Настройки</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Menu)\n","/**\r\n * Fetch method helper makes json transformation\r\n * @param {object} response - response object got from server\r\n * @returns {Promise} - boolean represents if json operation success\r\n */\r\nexport const handleResponse = response => response.json().then(json => response.ok ? json : Promise.reject(json))\r\n\r\n/**\r\n * Function saves access token in localStorage\r\n * @param {object} data - object that contains access token data (login, token, id)\r\n * @returns {null} - returns nothing if param wasnt defined\r\n */\r\nexport const setToken = token => {\r\n  return localStorage.setItem('token', token);\r\n}\r\n\r\n/**\r\n * Function get access token from localStorage\r\n * @returns {string} - if access token is stored in localStorage\r\n * @returns {boolean} - false boolean represents if is no access token\r\n */\r\nexport const getToken = () => {\r\n  if (localStorage.getItem('token')) {\n    return localStorage.getItem('token')\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Comments for differen results\r\n */\r\nexport const comments = {\r\n  right: 'Поздравляем! Правильный ответ.',\r\n  yellow: 'Ошибка! Опасных предметов нет!',\r\n  red1: 'Ошибка! Опасный предмет есть!',\r\n  red2: 'Ошибка! Опасного предмета нет в обозначенной Вами области!',\r\n  time: 'Время истекло!'\r\n}\r\n","class Drawer {\r\n  constructor (canvas) {\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d');\r\n\r\n    this.zones = [];\r\n\r\n    this.x1 = 0;\r\n    this.x2 = 0;\r\n    this.y1 = 0;\r\n    this.y2 = 0;\r\n\r\n    this.prevProperties = [0, 0, 0, 0];\r\n\r\n    this.clearListeners();\r\n    this.isDrawing = false;\r\n\r\n    this.handelMouseUp = this.handelMouseUp.bind(this);\r\n    this.handelMouseMove = this.handelMouseMove.bind(this);\r\n    this.handelMouseDown = this.handelMouseDown.bind(this);\r\n    this.clearZones = this.clearZones.bind(this);\r\n  }\r\n\r\n  handelMouseDown (e) {\r\n    this.isDrawing = true;\r\n\r\n    this.x1 = e.offsetX;\r\n    this.y1 = e.offsetY;\r\n  }\r\n\r\n  handelMouseMove (e) {\r\n    if (this.isDrawing) {\r\n      this.clearPreviousRect();\r\n\r\n      this.x2 = e.offsetX;\r\n      this.y2 = e.offsetY;\r\n\r\n      const rectProperties = this.getRectProperties();\r\n\r\n      this.drawRect(rectProperties);\r\n      this.prevProperties = rectProperties;\r\n    }\r\n  }\r\n\r\n  handelMouseUp (e) {\r\n    this.isDrawing = false;\r\n\r\n    this.clearPreviousRect();\r\n\r\n    this.x2 = e.offsetX;\r\n    this.y2 = e.offsetY;\r\n\r\n    const rectProperties = this.getRectProperties();\r\n\r\n    this.drawRect(rectProperties);\r\n    this.prevProperties = [0, 0, 0, 0];\r\n    this.saveZones();\r\n  }\r\n\r\n  drawRect (rectProperties, color = 'red') {\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.rect(...rectProperties);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  clearPreviousRect () {\r\n    const [x, y, width, heigth] = this.prevProperties;\r\n\r\n    this.ctx.clearRect(x - 1, y - 1, width + 2, heigth + 2);\r\n    this.ctx.beginPath();\r\n  }\r\n\r\n  saveZones () {\r\n    const leftUpCorner = this.getLeftUpCorner();\r\n    const rightDownCorner = this.getRightDownCorner();\r\n\r\n    this.zones.push([...leftUpCorner, ...rightDownCorner]);\r\n  }\r\n\r\n  /**\r\n   * Method draws rectangles got from API\r\n   */\r\n  drawOldZones (rectArray) {\r\n    this.zones = rectArray;\r\n\r\n    rectArray.forEach(dimensions => {\r\n      const rectProperties = [dimensions[0], dimensions[1]];\r\n      const width = dimensions[2] - dimensions[0];\r\n      const height = dimensions[3] - dimensions[1];\r\n\r\n      rectProperties.push(width);\r\n      rectProperties.push(height);\r\n\r\n      this.drawRect(rectProperties);\r\n    })\r\n  }\r\n\r\n  placeUserClick (click, color = 'red') {\r\n    const { x, y } = click;\r\n    const rad = 10;\r\n\r\n    this.drawCircle(x, y, rad, color)\r\n    this.drawLine(x - rad, y, x - rad / 2, y)\r\n    this.drawLine(x + rad, y, x + rad / 2, y)\r\n    this.drawLine(x, y + rad, x, y + rad / 2)\r\n    this.drawLine(x, y - rad, x, y - rad / 2)\r\n  }\r\n\r\n  drawCircle (x, y, rad, color = 'red') {\r\n    this.ctx.beginPath();\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.arc(x, y, rad, 0, 2 * Math.PI);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  drawLine (x1, y1, x2, y2, color = 'red') {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(x1, y1)\r\n    this.ctx.lineTo(x2, y2)\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  getLeftUpCorner () {\r\n    const { x1, x2, y1, y2 } = this;\r\n\r\n    return [Math.min(x1, x2), Math.min(y1, y2)]\r\n  }\r\n\r\n  getRightDownCorner () {\r\n    const { x1, x2, y1, y2 } = this;\r\n\r\n    return [Math.max(x1, x2), Math.max(y1, y2)]\r\n  }\r\n\r\n  getRectProperties () {\r\n    const leftUpCorner = this.getLeftUpCorner();\r\n    const rightDownCorner = this.getRightDownCorner();\r\n\r\n    let width = rightDownCorner[0] - leftUpCorner[0];\r\n    let height = rightDownCorner[1] - leftUpCorner[1];\r\n\r\n    return [...leftUpCorner, width, height];\r\n  }\r\n\r\n  start () {\r\n    this.canvas.addEventListener('mousedown', this.handelMouseDown)\r\n    this.canvas.addEventListener('mouseup', this.handelMouseUp)\r\n    this.canvas.addEventListener('mousemove', this.handelMouseMove)\r\n  }\r\n\r\n  clearListeners () {\r\n    this.canvas.removeEventListener('mousedown', this.handelMouseDown)\r\n    this.canvas.removeEventListener('mouseup', this.handelMouseUp)\r\n    this.canvas.removeEventListener('mousemove', this.handelMouseMove)\r\n  }\r\n\r\n  getZones () {\r\n    return this.zones;\r\n  }\r\n\r\n  clearZones () {\r\n    this.zones = [];\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.ctx.beginPath();\r\n  }\r\n\r\n  reset () {\r\n    this.clearListeners();\r\n    this.clearZones();\r\n  }\r\n}\r\n\r\nexport default Drawer;\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './Slide.sass'\r\nimport { comments } from './../../helpers';\r\nimport Drawer from '../Drawer'\r\n\r\nclass Slide extends React.PureComponent {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    const { settings, question } = this.props;\r\n    const canvasDraw = '#canvasDrawArea';\r\n    const canvasBackground = '#canvasBackground';\r\n\r\n    this.state = {\r\n      settings,\r\n      question,\r\n      canvasBackground,\r\n      canvasDraw,\r\n      comment: comments.right,\r\n      warningShowed: false,\r\n      answered: false,\r\n      result: 0,\r\n      slideShowed: false,\r\n      clickAllowed: false,\r\n      photoShowed: false\r\n    }\r\n\r\n    this.setClear = this.setClear.bind(this);\r\n    this.nextQuestion = this.nextQuestion.bind(this);\r\n    this.handleCanvasClick = this.handleCanvasClick.bind(this);\r\n    this.clearTimers = this.clearTimers.bind(this);\r\n    this.setQuestionTimers = this.setQuestionTimers.bind(this);\r\n    this.showWarning = this.showWarning.bind(this);\r\n    this.handleTimer = this.handleTimer.bind(this);\r\n    this.prepareCanvas = this.prepareCanvas.bind(this);\r\n    this.setNewQuestion = this.setNewQuestion.bind(this);\r\n    this.showPhoto = this.showPhoto.bind(this);\r\n\r\n    this.timers = [];\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { canvasDraw } = this.state;\r\n\r\n    this.drawer = this.props.drawer || new Drawer(document.querySelector(canvasDraw));\r\n    this.prepareCanvas = this.props.prepareCanvas || this.prepareCanvas;\r\n    this.setNewQuestion();\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState) {\r\n    const prevQuestion = prevProps.question;\r\n    const newQuestion = this.props.question;\r\n\r\n    if (newQuestion.name !== prevQuestion.name) {\r\n       this.setNewQuestion()\r\n    }\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this.clearTimers();\r\n  }\r\n\r\n  setNewQuestion () {\r\n    const { settings, question } = this.props;\r\n\r\n    this.setState({\r\n      settings,\r\n      question,\r\n      comment: comments.right,\r\n      answered: false,\r\n      slideShowed: true,\r\n      warningShowed: false,\r\n      result: 0\r\n    }, this.prepareCanvas);\r\n  }\r\n\r\n  /**\r\n   * Method sets canvas width and heigth, add background image\r\n   * and inits drawing dangerzone rectangels\r\n   * @returns {void}\r\n   */\r\n  prepareCanvas () {\r\n    this.setCanvasDimensions();\r\n\r\n    const background = new Image();\r\n\r\n    background.src = this.state.question.imgPath;\r\n    background.onload = () => {\r\n      this.setCanvasBackground(background);\r\n      this.animateSlideShow()\r\n          .then(() => {\r\n            this.setQuestionTimers();\r\n            this.setState({ clickAllowed: true });\r\n          })\r\n          .catch(window.alert);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method removes class 'canvasBeyondScreen' from canvasBackground\r\n   * to make it animated drive from the right end of screen\r\n   * @returns {void}\r\n   */\r\n  animateSlideShow () {\r\n    return new Promise((resolve, reject) => {\r\n        const bg = this.getCanvasBackground();\r\n        const dl = this.getCanvasDraw();\r\n\r\n        // If slide was loading too long and animation is over now\r\n        if (bg.offsetLeft === dl.offsetLeft) resolve();\r\n        else this.getCanvasBackground().addEventListener('animationend', resolve);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method set canvas width and heigth - both for background and draw layers\r\n   * @returns {void}\r\n   */\r\n  setCanvasDimensions () {\r\n    const { width, height } = this.state.question.dimensions;\r\n\r\n    this.getCanvasDraw().width = width;\r\n    this.getCanvasDraw().height = height;\r\n    this.getCanvasBackground().width = width;\r\n    this.getCanvasBackground().height = height;\r\n  }\r\n\r\n  /**\r\n   * Method calls background layer canvas to draw background\r\n   * @returns {Function} - drawImage method of canvas\r\n   */\r\n  setCanvasBackground (bg) {\r\n    return this.getCanvasBackground().getContext('2d').drawImage(bg, 0, 0)\r\n  }\r\n\r\n  /**\r\n   * Method draws old rectangles got from API if any\r\n   * and starts to listen to new user draw\r\n   * @returns {Function} - draw method of this.draw\r\n   */\r\n  drawDangerZone (c) {\r\n    const { dangerZones } = this.state.question;\r\n    if (dangerZones.length > 0) return this.drawer.drawOldZones(dangerZones);\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas draw layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasDraw () {\r\n    return document.querySelector(this.state.canvasDraw)\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas background layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasBackground () {\r\n    return document.querySelector(this.state.canvasBackground)\r\n  }\r\n\r\n  setClear () {\r\n    const { isDanger } = this.state.question;\r\n    const { redError } = this.state.settings;\r\n\r\n    if (isDanger === '1') {\r\n      this.setState({\r\n        click: null,\r\n        comment: comments.red1,\r\n        result: redError\r\n      }, this.finishQuestion)\r\n    } else this.setState({ click: null }, this.finishQuestion);\r\n  }\r\n\r\n  /**\r\n   * Method add timer to this.timers array\r\n   * for proper handling them\r\n   * @param {Function} timer - function to be called in time l\r\n   * @param {Number} l - time to call function\r\n   * @returns {void}\r\n   */\r\n  setTimer (timer, l) {\r\n    const totalTimers = this.timers.length;\r\n\r\n    this.timers[totalTimers] = setTimeout(timer, l);\r\n  }\r\n\r\n  /**\r\n   * Method adds timers for showing warning and\r\n   * for total time for question\r\n   * @returns {void}\r\n   */\r\n  setQuestionTimers () {\r\n    const { timeWarning, time } = this.state.settings;\r\n\r\n    this.setTimer(this.showWarning, timeWarning * 1000)\r\n    this.setTimer(this.handleTimer, time * 1000)\r\n  }\r\n\r\n  /**\r\n   * Method clears all timers in this.timers array\r\n   * @returns {void}\r\n   */\r\n  clearTimers () {\r\n    this.timers.forEach(timer => {\r\n      clearTimeout(timer)\r\n    });\r\n\r\n    this.timers = [];\r\n  }\r\n\r\n  handleTimer () {\r\n    const { answered } = this.state;\r\n    const { redError, yellowError } = this.state.settings;\r\n    const { isDanger } = this.state.question;\r\n\r\n    if (!answered) {\r\n      let result;\r\n\r\n      result = isDanger === '1' ? redError : yellowError;\r\n      return this.setState({ comment: comments.time, answered: true, result }, this.finishQuestion)\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  showWarning () {\r\n    return this.setState({ warningShowed: true })\r\n  }\r\n\r\n  handleCanvasClick (e) {\r\n    e.persist();\r\n\r\n    const x = e.nativeEvent.offsetX;\r\n    const y = e.nativeEvent.offsetY;\r\n    const { answered } = this.state;\r\n    const { isDanger } = this.state.question;\r\n    const { yellowError } = this.state.settings;\r\n\r\n    if (!answered) this.setState({ click: { x, y } })\r\n    if (isDanger === '0' && !answered) {\r\n      return this.setState({ comment: comments.yellow, result: yellowError }, this.finishQuestion)\r\n    }\r\n\r\n    return this.checkIfClickInDangerZone(e.nativeEvent)\r\n  }\r\n\r\n  checkIfClickInDangerZone (e) {\r\n    const x = e.offsetX;\r\n    const y = e.offsetY;\r\n    const { answered } = this.state;\r\n    const { dangerZones } = this.state.question;\r\n    const { redError } = this.state.settings;\r\n    const isRight = dangerZones.some(zone =>\r\n      x > zone[0] && y > zone[1] && x < zone[2] && y < zone[3]\r\n    );\r\n\r\n    if (!answered) {\r\n      if (isRight) this.finishQuestion();\r\n      else this.setState({ comment: comments.red2, result: redError }, this.finishQuestion)\r\n    }\r\n\r\n    if (isRight) this.showPhoto(e);\r\n  }\r\n\r\n  showPhoto (e) {\r\n    this.setState({ photoShowed: true }, () => {\r\n      this.handlePhotoPosition(e);\r\n      this.setTimer(this.setState.bind(this, { photoShowed: false }), 2000)\r\n    });\r\n  }\r\n\r\n  handlePhotoPosition (e) {\r\n    const photo = document.querySelector('.dangerPicture');\r\n\r\n    if (!photo) return false;\r\n\r\n    photo.style.top = e.clientY - (photo.naturalHeight / 2) + 'px';\r\n    photo.style.left = e.clientX - (photo.naturalWidth / 2) + 'px';\r\n    this.setTimer(() => photo.classList.add('naturalSize'), 20);\r\n  }\r\n\r\n  finishQuestion () {\r\n    this.setState({ answered: true }, () => {\r\n      this.clearTimers();\r\n      this.drawDangerZone();\r\n      this.showResult();\r\n    });\r\n  }\r\n\r\n  showResult () {\r\n    const { result, click, comment, question } = this.state;\r\n    const { sendResult } = this.props;\r\n\r\n    return sendResult({ result, click, comment, question });\r\n  }\r\n\r\n  nextQuestion () {\r\n    const { nextQuestion } = this.props;\r\n\r\n    this.setState({ slideShowed: false, clickAllowed: false });\r\n\r\n    return nextQuestion();\r\n  }\r\n\r\n  render () {\r\n    const { answered, question, warningShowed, result, photoShowed, comment, slideShowed, clickAllowed } = this.state;\r\n    const { yellowError } = this.state.settings;\r\n    const { dangerPicture } = question;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          Вопрос { question.name}\r\n        </div>\r\n        <div className='canvasArea'>\r\n          <div className='actionComment_container speech'>\r\n            {\r\n              answered ?\r\n              <div id='actionComment' className = { result === 0 ? 'green' : result === yellowError ? 'yellow' : 'red'} >{ answered ? comment : '' }</div> :\r\n              ''\r\n            }\r\n          </div>\r\n          <div className='markIcon_cotainer'>\r\n            {\r\n              answered ?\r\n              <span\r\n                id='markIcon'\r\n                className = { result === 0 ? 'greenMark' : result === yellowError ? 'yellowError' : 'redError'}\r\n              ></span> :\r\n              ''\r\n            }\r\n          </div>\r\n          <div className='clearButton_container'>\r\n            <button id='clearButton' disabled = { answered || !clickAllowed } onClick= { this.setClear } >&#9745;</button>\r\n          </div>\r\n          <div className='canvas_container'>\r\n            { slideShowed ?\r\n                <canvas className='animatedShow' id=\"canvasBackground\"></canvas>\r\n              :\r\n              ''\r\n            }\r\n          </div>\r\n          <div className='canvas_container'>\r\n            <canvas id=\"canvasDrawArea\" onClick= { clickAllowed ? (e) => this.handleCanvasClick(e) : () => {}}></canvas>\r\n          </div>\r\n          <div className='timerWarning_container'>\r\n            { warningShowed ?\r\n                <span id='timerWarning'>Внимание! Время истекает!</span>\r\n              :\r\n                ''\r\n            }\r\n          </div>\r\n          <div className='forwardButton_container'>\r\n            { /* Disabled when photoShowed coz otherwise you can see next danger picture when clicking 'forward' before prev danger picture disappears */ }\r\n            <button id='forwardButton' disabled = { !answered || photoShowed} onClick = { this.nextQuestion }>&#x25ba;</button>\r\n          </div>\r\n        </div>\r\n        <img className={photoShowed ? 'dangerPicture' : 'hidden'} src= { dangerPicture } alt='Опасный предмет'/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSlide.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  question: PropTypes.object.isRequired,\r\n  sendResult: PropTypes.func.isRequired,\r\n  nextQuestion: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Slide)\r\nexport { Slide }\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './User.sass'\r\n\r\nconst User = props => {\r\n  const { handleSubmit, handleChange } = props;\r\n\r\n  return (\r\n      <div>\r\n        <div className='paranja'>\r\n        </div>\r\n        <div className='userLoginArea'>\r\n          <form className = 'userLogin' onSubmit = { handleSubmit }>\r\n            <div>\r\n              <span>\r\n                <label>\r\n                  Ваше имя: &emsp;\r\n                  <input type='text' id='user' onChange = { handleChange } required/>\r\n                </label>\r\n              </span>\r\n              <span>\r\n                <input type='submit' value='Начать тест'/>\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nUser.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(User)\r\nexport { User }\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './History.sass'\r\nimport Drawer from '../Drawer'\r\n\r\nclass History extends React.PureComponent {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    const { testHistory, settings } = this.props;\r\n    const canvasDraw = '#canvasDrawArea';\r\n    const canvasBackground = '#canvasBackground';\r\n\r\n    this.state = {\r\n      settings,\r\n      testHistory,\r\n      answer: {},\r\n      currentQuestion: 0,\r\n      canvasBackground,\r\n      canvasDraw\r\n    }\r\n\r\n    this.closeHistory = this.closeHistory.bind(this);\r\n    this.getNext = this.getNext.bind(this);\r\n    this.getPrev = this.getPrev.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { canvasDraw } = this.state;\r\n\r\n    this.drawer = this.props.drawer || new Drawer(document.querySelector(canvasDraw));\r\n    this.prepareCanvas = this.props.prepareCanvas || this.prepareCanvas;\r\n\r\n    this.setCurrentQuestion();\r\n  }\r\n\r\n  setCurrentQuestion () {\r\n    const index = this.state.currentQuestion;\r\n    const answer = this.state.testHistory[index];\r\n\r\n    this.setState({ answer }, this.prepareCanvas);\r\n  }\r\n\r\n  /**\r\n   * Method sets canvas width and heigth, add background image\r\n   * and inits drawing dangerzone rectangels\r\n   * @returns {void}\r\n   */\r\n  prepareCanvas () {\r\n    this.setCanvasDimensions();\r\n\r\n    const background = new Image();\r\n\r\n    background.src = this.state.answer.question.imgPath;\r\n    background.onload = () => {\r\n      this.setCanvasBackground(background);\r\n      this.placeUserClick();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method calls background layer canvas to draw background\r\n   * @returns {Function} - drawImage method of canvas\r\n   */\r\n  setCanvasBackground (bg) {\r\n    return this.getCanvasBackground().getContext('2d').drawImage(bg, 0, 0)\r\n  }\r\n\r\n  placeUserClick () {\r\n    const { click } = this.state.answer;\r\n\r\n    if (click) this.drawer.placeUserClick(click)\r\n  }\r\n\r\n  /**\r\n   * Method set canvas width and heigth - both for background and draw layers\r\n   * @returns {void}\r\n   */\r\n  setCanvasDimensions () {\r\n    const { width, height } = this.state.answer.question.dimensions;\r\n\r\n    this.getCanvasDraw().width = width;\r\n    this.getCanvasDraw().height = height;\r\n    this.getCanvasBackground().width = width;\r\n    this.getCanvasBackground().height = height;\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas draw layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasDraw () {\r\n    return document.querySelector(this.state.canvasDraw)\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas background layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasBackground () {\r\n    return document.querySelector(this.state.canvasBackground)\r\n  }\r\n\r\n  closeHistory () {\r\n    const { closeHistory } = this.props;\r\n\r\n    return closeHistory();\r\n  }\r\n\r\n  getPrev () {\r\n    let { currentQuestion } = this.state;\r\n\r\n    if (currentQuestion === 0) return false;\r\n\r\n    this.setState({ currentQuestion: currentQuestion - 1 }, this.setCurrentQuestion)\r\n  }\r\n\r\n  getNext () {\r\n    let { currentQuestion, testHistory } = this.state;\r\n\r\n    if (currentQuestion === testHistory.length - 1) return false;\r\n\r\n    this.setState({ currentQuestion: currentQuestion + 1 }, this.setCurrentQuestion)\r\n  }\r\n\r\n  render () {\r\n    const { result, comment, click } = this.state.answer;\r\n    const { yellowError } = this.state.settings;\r\n\r\n    return (\r\n      <div>\r\n        <a className='closeButton' onClick= { this.closeHistory }>закрыть</a>\r\n        <div>\r\n          <span onClick = { this.getPrev } className='prev nav'></span>\r\n          <span onClick = { this.getNext } className='next nav'></span>\r\n        </div>\r\n        <div className='canvasArea'>\r\n          <div className='actionComment_container speech'>\r\n            <div id='actionComment' className = { result === 0 ? 'green' : result === yellowError ? 'yellow' : 'red'} >{ comment }</div>\r\n          </div>\r\n          <div className='markIcon_cotainer'>\r\n            <span\r\n              id='markIcon'\r\n              className = { result === 0 ? 'greenMark' : result === yellowError ? 'yellowError' : 'redError'}\r\n            ></span>\r\n          </div>\r\n          {\r\n            click ?\r\n              ''\r\n            :\r\n            <div className='clearButton_container'>\r\n              <button id='clearButton' className='highlighted'>&#9745;</button>\r\n            </div>\r\n          }\r\n          <div className='canvas_container'>\r\n            <canvas id=\"canvasBackground\"></canvas>\r\n          </div>\r\n          <div className='canvas_container'>\r\n            <canvas id=\"canvasDrawArea\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nHistory.propTypes = {\r\n  testHistory: PropTypes.array.isRequired,\r\n  closeHistory: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withRouter(History)\r\nexport { History }\r\n","import { getToken } from './helpers'\r\n\r\nexport const API_URL = 'http://K47_8:9245'\r\n\r\nexport const defaultFetch = function (method = 'GET', body) {\r\n  const configFetch = {\r\n      method,\r\n      mode: 'cors',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'token': getToken()\r\n      }\r\n    }\r\n\r\n  if (body) Object.assign(configFetch, { body: JSON.stringify(body) })\r\n\r\n  return configFetch\r\n}\n\nexport const fileFetch = function (body) {\n  return {\n      method: 'POST',\n      mode: 'cors',\n      body: body,\n      headers: {\n        'token': getToken()\n      }\n    }\n}\n\nexport const downLoadFetch = function () {\n  return {\n    method: 'GET',\n    mode: 'cors',\n    headers: {\n      'token': getToken()\n    }\n  }\n}\n","import download from 'downloadjs';\r\nimport { API_URL, defaultFetch, fileFetch, downLoadFetch } from './config'\r\nimport { handleResponse } from './helpers'\r\n\r\nconst postData = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, defaultFetch('POST', data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst getData = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, defaultFetch('GET', data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst deleteData = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, defaultFetch('DELETE', data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst postFile = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, fileFetch(data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst downloadFile = function (url, filename) {\r\n  return fetch(`${API_URL}/${url}`, downLoadFetch())\r\n          .then(res => res.blob())\r\n          .then(blob => download(blob, filename));\r\n}\r\n\r\nexport { postData, getData, postFile, deleteData, downloadFile }\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Slide from './Slide'\r\nimport User from './User'\r\nimport History from './History'\r\nimport './Test.sass'\r\nimport { getData } from './../../actions'\r\n\r\nclass Test extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      loading: false,\r\n      testStarted: false,\r\n      testFinished: false,\r\n      user: '',\r\n      settings: {},\r\n      tests: [],\r\n      currentQuestion: -1,\r\n      questions: [],\r\n      testHistory: [],\r\n      historyMode: false,\r\n      total: 100\r\n    }\r\n\r\n    this.setSettings = this.setSettings.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.nextQuestion = this.nextQuestion.bind(this);\r\n    this.sendResult = this.sendResult.bind(this);\r\n    this.showHistory = this.showHistory.bind(this);\r\n    this.closeHistory = this.closeHistory.bind(this);\r\n    this.finishTest = this.finishTest.bind(this);\r\n\r\n    this.getData = this.props.getData || getData;\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getSettings();\r\n    this.getTests();\r\n  }\r\n\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault()\r\n\r\n    this.chooseTest()\r\n  }\r\n\r\n  getSettings () {\r\n    return this.getData('settings')\r\n               .then(settings => this.setSettings(settings))\r\n               .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTests () {\r\n    return this.getData('tests')\r\n               .then(tests => this.setState({ tests }))\r\n               .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  setSettings (settingsArray) {\r\n    const settingsObject = {};\r\n\r\n    settingsArray.forEach(tune => {\r\n      settingsObject[tune.name] = tune.value;\r\n    })\r\n\r\n    this.setState({ settings: settingsObject })\r\n  }\r\n\r\n  chooseTest () {\r\n    const { tests } = this.state;\r\n    const howMany = tests.length;\r\n    const variant = Math.floor(Math.random() * howMany);\r\n    const chosenTest = tests[variant].name;\r\n\r\n    this.getQuestions(chosenTest);\r\n  }\r\n\r\n  getQuestions (chosenTest) {\r\n    return this.getData(`questions/${chosenTest}`)\r\n               .then(questions => this.setState({ questions }, this.setCurrentQuestion))\r\n               .catch(err => window.alert(err))\r\n  }\r\n\r\n  setCurrentQuestion () {\r\n    const currentQuestion = this.state.currentQuestion + 1;\r\n    const totalQuestions = this.state.questions.length;\r\n\r\n    if (currentQuestion < totalQuestions) this.setState({ testStarted: true, currentQuestion })\r\n    else this.setState({ testFinished: true, testStarted: false })\r\n  }\r\n\r\n  nextQuestion () {\r\n    return this.setCurrentQuestion();\r\n  }\r\n\r\n  sendResult (result) {\r\n    let { total, testHistory } = this.state;\r\n\r\n    total = total - result.result;\r\n    testHistory.push(result);\r\n    this.setState({ total, testHistory });\r\n  }\r\n\r\n  showHistory () {\r\n    this.setState({ historyMode: true })\r\n  }\r\n\r\n  closeHistory () {\r\n    this.setState({ historyMode: false })\r\n  }\r\n\r\n  finishTest () {\r\n    this.setState({ testFinished: true, testStarted: false })\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      testStarted,\r\n      settings,\r\n      currentQuestion,\r\n      questions,\r\n      total,\r\n      testFinished,\r\n      historyMode,\r\n      testHistory } = this.state;\r\n    const { drawer, prepareCanvas } = this.props;\r\n    const { errorThreshold } = settings;\r\n\r\n    return (\r\n      <div className='container'>\r\n        {\r\n          historyMode ?\r\n            <History\r\n              testHistory = { testHistory }\r\n              closeHistory = { this.closeHistory }\r\n              settings = { settings }\r\n            />\r\n          :\r\n          testStarted ?\r\n            (<div className='testArea'>\r\n              <div>\r\n                Итого: { total }%\r\n              </div>\r\n              <Slide\r\n                prepareCanvas = { prepareCanvas }\r\n                drawer = { drawer }\r\n                question = { questions[currentQuestion] }\r\n                settings = { settings }\r\n                sendResult = { this.sendResult }\r\n                nextQuestion = { this.nextQuestion }\r\n              />\r\n            </div>)\r\n          :\r\n          testFinished ?\r\n            (<div className='resultArea'>\r\n              <div>\r\n                <h2>\r\n                  Ваш результат:\r\n                  <span\r\n                  className = { total < errorThreshold ? 'fail' : total < 100 ? 'enought' : 'perfect'}\r\n                  > { total }%</span>\r\n                </h2>\r\n              </div>\r\n              <div>\r\n                <a onClick= { this.showHistory }>Показать ответы</a>\r\n              </div>\r\n            </div>)\r\n          :\r\n            (<div className='userArea'>\r\n              <User\r\n                handleChange = { this.handleChange }\r\n                handleSubmit = { this.handleSubmit }\r\n              />\r\n            </div>)\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Test)\nexport { Test }\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { getData, deleteData, postData, postFile, downloadFile } from './../../actions'\r\n\r\nclass Admin extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      questions: [],\r\n      settings: [],\r\n      tests: [],\r\n      submitting: false,\r\n      err: false\r\n    }\r\n\r\n    this.deleteObj = this.deleteObj.bind(this);\r\n    this.refreshTest = this.refreshTest.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.saveDb = this.saveDb.bind(this);\r\n    this.handleDbRecovery = this.handleDbRecovery.bind(this);\r\n\r\n    this.getData = this.props.getData || getData;\r\n    this.postData = this.props.postData || postData;\r\n    this.postFile = this.props.postFile || postFile;\r\n    this.deleteData = this.props.deleteData || deleteData;\r\n    this.downloadFile = this.props.downloadFile || downloadFile;\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getSettings();\r\n    this.getTests();\r\n    this.getQuestions();\r\n  }\r\n\r\n  getSettings () {\r\n    return this.getData('settings')\r\n               .then(settings => this.setState({ settings }))\r\n               .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTests () {\r\n    return this.getData('tests')\r\n               .then(tests => this.setState({ tests }))\r\n               .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getQuestions () {\r\n    return this.getData('questions')\r\n               .then(questions => this.setState({ questions }))\r\n               .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTestData () {\r\n    this.getTests();\r\n    this.getQuestions();\r\n  }\r\n\r\n  deleteObj (obj, name) {\r\n    let conf = window.confirm('Вы уверены?');\r\n\r\n    if (conf) {\r\n      return this.deleteData(`deleteobj/${obj}/${name}`)\r\n                 .then(rep => this.getTestData())\r\n                 .catch(err => this.setState({ err: true }))\r\n    }\r\n  }\r\n\r\n  refreshTest (name) {\r\n    return this.postData('test', { name })\r\n               .then(rep => window.alert('Успешно обновлено!'))\r\n               .catch(window.alert)\r\n  }\r\n\r\n  handleChange (e) {\r\n    let { value, type } = e.target;\r\n    const { description } = e.target && e.target.dataset;\r\n    const name = e.target.id;\r\n    const { settings } = this.state;\r\n\r\n    value = this.handleTypes(value, type);\r\n\r\n    settings.forEach((tune, i) => {\r\n      if (name === tune.name) settings[i] = { _id: tune._id, name, value, type, description }\r\n    })\r\n\r\n    this.setState({ settings })\r\n  }\r\n\r\n  handleTypes (val, type) {\r\n    const typesMap = {\r\n      number: () => Number(val)\r\n    }\r\n\r\n    if (typesMap[type]) return typesMap[type](val)\r\n    else return val\r\n  }\r\n\r\n  saveDb () {\r\n    this.setState({ submitting: true })\r\n\r\n    return this.getData('savedb')\r\n               .then(() => {\r\n                  // Added timeout, otherwise firefox downloads only 1 file\r\n                  this.downloadFile('download_dump/tests.json', 'tests.json');\r\n                  setTimeout(() =>\r\n                    this.downloadFile('download_dump/questions.json', 'questions.json'),\r\n                  100);\r\n               })\r\n               .catch(window.alert)\r\n               .finally(() => this.setState({ submitting: false }))\r\n  }\r\n\r\n  handleDbRecovery (e) {\r\n    e.preventDefault();\r\n\r\n    let sure = window.confirm('Вы уверены? Текущая база данных будет перезаписана!')\r\n\r\n    if (!sure) return;\r\n\r\n    this.setState({ submitting: true })\r\n\r\n    const data = this.props.handleFormData || this.handleFormData()\r\n\r\n    return this.postFile('loaddb', data)\r\n               .then(() => {\r\n                  window.alert('Успешно восстановлено!');\r\n                  this.getTestData();\r\n               })\r\n               .catch(window.alert)\r\n               .finally(() => this.setState({ submitting: false }))\r\n  }\r\n\r\n  handleFormData () {\r\n    const questions = document.querySelector('input[type=\"file\"][name=\"questions\"]');\r\n    const tests = document.querySelector('input[type=\"file\"][name=\"tests\"]');\r\n    const data = new FormData();\r\n\r\n    data.append('questions', questions.files[0]);\r\n    data.append('tests', tests.files[0]);\r\n\r\n    return data;\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault();\r\n    this.setState({ submitting: true })\r\n\r\n    const { settings } = this.state;\r\n\r\n    return this.postData('settings', { settings })\r\n               .then(rep => window.alert('Успешно сохранено!'))\r\n               .catch(window.alert)\r\n               .finally(() => this.setState({ submitting: false }))\r\n  }\r\n\r\n  render () {\r\n    const { settings, tests, questions, submitting } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='newTest'>\r\n          <div className='menuItem'>\r\n            <Link className='menuButton' to='/create/test'>Создать новый тест</Link>\r\n            <Link className='menuButton' to='/create/question'>Создать новый вопрос</Link>\r\n          </div>\r\n          <div className='dbControls'>\r\n            <button disabled={submitting} className='menuButton small saveDb' onClick={this.saveDb}>Сохранить базу</button>\r\n            <form className='loadDb' onSubmit={this.handleDbRecovery}>\r\n              <label> Выберите JSON файл с вопросами &emsp;\r\n                <input type='file' name='questions' accept='.json' required/>\r\n              </label><br/>\r\n              <label> Выберите JSON файл с тестами &emsp;\r\n                <input type='file' name='tests' accept='.json' required/>\r\n              </label><br/>\r\n              <input disabled={submitting} type='submit' value='Восстановить базу'/>\r\n            </form>\r\n          </div>\r\n        </div>\r\n          <h2>Настройки</h2>\r\n          <div className='formArea'>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {\r\n                settings.map(tune => {\r\n                  return <div key={tune._id}>\r\n                    <label>\r\n                      {tune.description}: &emsp;\r\n                      <input\r\n                        id={tune.name}\r\n                        data-description={tune.description}\r\n                        type={tune.type}\r\n                        value={tune.value}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                })\r\n              }\r\n              <div>\r\n                <input disabled={submitting} type='submit' value='Сохранить'/>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        <div>\r\n        </div>\r\n        <div className='oldTest'>\r\n          <h2>Тесты</h2>\r\n          <ul>\r\n            {\r\n              tests.map(test => {\r\n                return <li key={test._id}>{test.name} &emsp;\r\n                <a onClick={() => this.refreshTest(test.name)}>Обновить</a> &emsp;\r\n                <a className='danger' onClick={() => this.deleteObj('Test', test.name)}>Удалить</a>\r\n                </li>\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n        <div className='oldQuestions'>\r\n          <h2>Вопросы</h2>\r\n          <ul>\r\n            {\r\n              questions.map(q => {\r\n                return <li key={q._id}>{q.name} &emsp;\r\n                  <Link to={`/create/question?question=${q.name}`}>Изменить</Link>&emsp;\r\n                  <a className='danger' onClick={() => this.deleteObj('Question', q.name)}>Удалить</a>\r\n                </li>\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Admin)\nexport { Admin }\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Forbidden extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>403 Нет доступа</h1>\r\n        <h3>Залогиньтесь для продолжения</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Forbidden)\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { postData } from './../../actions'\r\n\r\nclass CreateTest extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      err: false,\r\n      loading: false,\r\n      name: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.postData = props.postData || postData;\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault();\r\n\r\n    const { name } = this.state;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    return this.postData('test', { name })\r\n               .then(rep => window.alert('Успешно сохранено!'))\r\n               .catch(window.alert)\r\n               .finally(() => this.setState({ loading: false }))\r\n  }\r\n\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  render () {\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='formArea'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div>\r\n              <span>\r\n                <label>\r\n                  Номер теста: &emsp;<input id='name' onChange={this.handleChange} type='number' min='1'/>\r\n                </label>\r\n              </span>\r\n              <span>\r\n                <input disabled= { loading } type='submit' value='Создать'/>\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateTest);\r\nexport { CreateTest };\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { postFile, postData, getData } from './../../actions'\r\nimport Drawer from '../Drawer'\r\nimport './CreateQuestion.sass'\r\n\r\nclass CreateQuestion extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      loading: false,\r\n      err: false,\r\n      imgPath: '',\r\n      dimensions: { width: 0, height: 0 },\r\n      dangerZones: [],\r\n      name: '',\r\n      isDanger: '1'\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.uploadPhotos = this.uploadPhotos.bind(this);\r\n    this.handleUpload = this.handleUpload.bind(this);\r\n    this.clearCanvas = this.clearCanvas.bind(this);\r\n    this.saveQuestion = this.saveQuestion.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    const canvasDraw = '#canvasDrawArea';\r\n    const canvasBackground = '#canvasBackground';\r\n    this.setState({ canvasBackground, canvasDraw })\r\n\r\n    this.drawer = this.props.drawer || new Drawer(document.querySelector(canvasDraw));\r\n    this.postFile = this.props.postFile || postFile;\r\n    this.postData = this.props.postData || postData;\r\n    this.getData = this.props.getData || getData;\r\n    this.prepareCanvas = this.props.prepareCanvas || this.prepareCanvas;\r\n    this.checkIfQuestionCreated()\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this.drawer.reset();\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas draw layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasDraw () {\r\n    return document.querySelector(this.state.canvasDraw)\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas background layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasBackground () {\r\n    return document.querySelector(this.state.canvasBackground)\r\n  }\r\n\r\n  /**\r\n   * Method checks location query\r\n   * if query is defined ( /create/question?question=name )\r\n   * it means user want to edit old question\r\n   * so we fetch question to API\r\n   * @return {Function} - fetch to API for question data\r\n   */\r\n  checkIfQuestionCreated () {\r\n    if (this.props.location && this.props.location.search.length > 0) {\r\n      const query = new URLSearchParams(this.props.location.search);\r\n      const question = query.get('question');\r\n\r\n      return this.getQuestion(question)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method fetches to API for question data\r\n   * if any - renders it\r\n   * @returns {Function} - fetch to API\r\n   */\r\n  getQuestion (question) {\r\n    return this.getData(`question/${question}`)\r\n               .then(rep => {\r\n                  if (rep) {\r\n                    this.setState(rep, this.prepareCanvas)\r\n                  }\r\n               })\r\n               .catch(window.alert)\r\n  }\r\n\r\n  /**\r\n   * Method handles upload of slide and photo\r\n   * then it gets dimensions of slide and prepares canvas for it\r\n   * @return {void}\r\n   */\r\n  uploadPhotos (e) {\r\n    e.preventDefault();\r\n\r\n    const data = this.props.handleFormData || this.handleFormData();\r\n    const handleUpload = this.props.handleUpload || this.handleUpload;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    this.postFile('preupload', data)\r\n      .then(handleUpload)\r\n      .catch(window.alert)\r\n      .finally(() => this.setState({ loading: false }));\r\n  }\r\n\r\n  /**\r\n    * Method takes response form API and set state for canvas drawing\r\n    * @param {Object} rep - reply from API\r\n    * @retusn {void}\r\n    */\r\n  handleUpload (rep) {\r\n    const { name } = this.state;\r\n    const imgPath = `/images/${name}_slide.${rep.type}`;\r\n    this.drawer.reset();\r\n\r\n    this.setState({\r\n      imgPath: imgPath,\r\n      dimensions: rep\r\n    }, this.prepareCanvas)\r\n  }\r\n\r\n  /**\r\n   * Method gatheres all formData to single object for upload\r\n   * @return {Object} - object to upload\r\n   */\r\n  handleFormData () {\r\n    const slide = document.querySelector('input[name=\"slide\"]');\r\n    const photo = document.querySelector('input[name=\"photo\"]');\r\n    const { name, isDanger } = this.state;\r\n    const data = new FormData();\r\n\r\n    data.append('question', name);\r\n    data.append('slide', slide.files[0]);\r\n    if (isDanger === '1') data.append('photo', photo.files[0]);\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Method handles changes in input and pass it to state\r\n   * @returns {void}\r\n   */\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  /**\r\n   * Method sets canvas width and heigth, add background image\r\n   * and inits drawing dangerzone rectangels\r\n   * @returns {void}\r\n   */\r\n  prepareCanvas () {\r\n    this.setCanvasDimensions();\r\n\r\n    const background = new Image();\r\n\r\n    background.src = this.state.imgPath;\r\n    background.onload = () => {\r\n      this.setCanvasBackground(background)\r\n      this.drawDangerZone();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method set canvas width and heigth - both for background and draw layers\r\n   * @returns {void}\r\n   */\r\n  setCanvasDimensions () {\r\n    const { width, height } = this.state.dimensions;\r\n\r\n    this.getCanvasDraw().width = width;\r\n    this.getCanvasDraw().height = height;\r\n    this.getCanvasBackground().width = width;\r\n    this.getCanvasBackground().height = height;\r\n  }\r\n\r\n  /**\r\n   * Method calls background layer canvas to draw background\r\n   * @returns {Function} - drawImage method of canvas\r\n   */\r\n  setCanvasBackground (bg) {\r\n    return this.getCanvasBackground().getContext('2d').drawImage(bg, 0, 0)\r\n  }\r\n\r\n  /**\r\n   * Method draws old rectangles got from API if any\r\n   * and starts to listen to new user draw\r\n   * @returns {Function} - start method of this.draw\r\n   */\r\n  drawDangerZone (c) {\r\n    const { dangerZones } = this.state;\r\n\r\n    if (dangerZones.length > 0) this.drawer.drawOldZones(dangerZones);\r\n\r\n    return this.drawer.start()\r\n  }\r\n\r\n  /**\r\n   * Method calls clearZones mthod of this.drawer\r\n   * to clear canvas draw layer\r\n   */\r\n  clearCanvas () {\r\n    return this.drawer.clearZones()\r\n  }\r\n\r\n  /**\r\n   * Method gatheres all question data to single object and post to API\r\n   * @returns {Function} - fetch post API\r\n   */\r\n  saveQuestion () {\r\n    const { imgPath, name, isDanger, dimensions } = this.state;\r\n\r\n    const question = {\r\n      name,\r\n      isDanger,\r\n      dangerZones: this.drawer.getZones(),\r\n      imgPath,\r\n      dimensions\r\n     };\r\n\r\n     this.setState({ loading: true });\r\n\r\n     return this.postData('savequestion', question)\r\n                .then(rep => window.alert('Успешно сохранено!'))\r\n                .catch(window.alert)\r\n                .finally(() => this.setState({ loading: false }))\r\n  }\r\n\r\n  render () {\r\n    const { loading, isDanger, name } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='formArea'>\r\n          <form onSubmit={this.uploadPhotos}>\r\n            <div>\r\n              <label>\r\n                Вопрос: &emsp;\r\n                <input\r\n                  id='name'\r\n                  onChange={this.handleChange}\r\n                  pattern='[0-9]+_[0-9]+'\r\n                  name='name'\r\n                  type='text'\r\n                  value = {name.length > 0 ? name : ''}\r\n                  placeholder='№ Теста_№ вопроса'\r\n                  required\r\n                />\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                Загрузите слайд: &emsp;\r\n                <input\r\n                  name='slide'\r\n                  type='file'\r\n                  required\r\n                />\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                Багаж опасен? &emsp;\r\n                <select\r\n                  id='isDanger'\r\n                  onChange={this.handleChange}\r\n                  value={isDanger === '1' ? '1' : '0'}\r\n                >\r\n                  <option value='1'>Да</option>\r\n                  <option value='0'>нет</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            {\r\n              isDanger === '1' ?\r\n              <div>\r\n                <label>\r\n                  Загрузите фото: &emsp;\r\n                  <input\r\n                    name='photo'\r\n                    type='file'\r\n                    required\r\n                  />\r\n                </label>\r\n              </div> :\r\n              <span></span>\r\n            }\r\n            <div>\r\n              <input disabled={loading} type='submit' value='Продолжить'/>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <div className='canvasControls'>\r\n            <button className='danger' onClick={this.clearCanvas}>Очистить</button>\r\n            <button className='success' disabled={loading || name === ''} onClick={this.saveQuestion}>Сохранить</button>\r\n          </div>\r\n          <div className='createQuestion canvasArea'>\r\n            <canvas id=\"canvasBackground\"></canvas>\r\n            <canvas id=\"canvasDrawArea\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateQuestion)\r\nexport { CreateQuestion };\r\n","import React from 'react'\r\nimport Header from '../Header'\r\nimport Menu from '../Menu'\r\nimport Test from '../Test'\r\nimport Admin from '../Admin'\r\nimport Forbidden from '../Forbidden'\r\nimport CreateTest from '../CreateTest'\r\nimport CreateQuestion from '../CreateQuestion'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport '../../main.sass'\r\nimport { postData } from '../../actions.js'\r\nimport { setToken } from '../../helpers'\r\n\r\nclass App extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isAdmin: false,\r\n      authFail: false,\r\n      isLogging: false,\r\n      token: undefined\r\n    }\r\n\r\n    this.login = this.login.bind(this)\r\n    this.logoff = this.logoff.bind(this)\r\n    this.handleAuth = this.handleAuth.bind(this)\r\n\r\n    this.postData = this.props.postData || postData;\r\n    this.setToken = this.props.setToken || setToken;\r\n  }\r\n\r\n  login (e) {\r\n    e.preventDefault()\r\n\r\n    const data = {\r\n      login: e.target.login.value,\r\n      password: e.target.password.value\r\n    }\r\n\r\n    this.setState({ isLogging: true })\r\n\r\n    return this.postData('login', data)\r\n               .then(this.handleAuth)\r\n               .catch(console.log)\r\n               .finally(() => this.setState({ isLogging: false }))\r\n  }\r\n\r\n  handleAuth (rep) {\r\n    if (rep.auth) this.setToken(rep.token);\r\n    this.setState({ isAdmin: rep.auth, authFail: !rep.auth, token: rep.token })\r\n  }\r\n\r\n  logoff () {\r\n    this.setState({\r\n      isAdmin: false,\r\n      token: undefined\r\n     })\r\n\r\n     this.setToken(null)\r\n  }\r\n\r\n  render () {\r\n    const { isAdmin, authFail, isLogging } = this.state\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Header\r\n           isAdmin={isAdmin}\r\n           authFail={authFail}\r\n           isLogging = {isLogging}\r\n           login={this.login}\r\n           logoff={this.logoff}\r\n           />\r\n          <Switch>\r\n            <Route path='/' render={Menu} exact/>\r\n            <Route path='/test' render={Test}/>\r\n            <Route path='/admin' render={isAdmin ? Admin : Forbidden}/>\r\n            <Route path='/create/test' render={isAdmin ? CreateTest : Forbidden}/>\r\n            <Route path='/create/question' render={isAdmin ? CreateQuestion : Forbidden}/>\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDom.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}