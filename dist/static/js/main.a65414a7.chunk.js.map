{"version":3,"sources":["components/Header/Login.js","components/Header/index.js","components/Menu/index.js","helpers.js","components/Drawer/index.js","components/Test/Slide.js","components/Test/User.js","config.js","actions.js","components/Test/index.js","components/Admin/index.js","components/Forbidden/index.js","components/CreateTest/index.js","components/CreateQuestion/index.js","index.js"],"names":["withRouter","props","login","authFail","isLogging","react_default","a","createElement","className","onSubmit","type","name","placeholder","disabled","value","isAdmin","logoff","Link","to","onClick","Header_Login","Menu","React","Component","handleResponse","response","json","then","ok","Promise","reject","setToken","token","localStorage","setItem","getToken","getItem","comments","right","yellow","red1","red2","time","Drawer","canvas","Object","classCallCheck","this","ctx","getContext","zones","x1","x2","y1","y2","prevProperties","clearListeners","isDrawing","handelMouseUp","bind","handelMouseMove","handelMouseDown","clearZones","e","offsetX","offsetY","clearPreviousRect","rectProperties","getRectProperties","drawRect","saveZones","_this$ctx","color","arguments","length","undefined","strokeStyle","rect","apply","toConsumableArray","stroke","_this$prevProperties","slicedToArray","x","y","width","heigth","clearRect","beginPath","leftUpCorner","getLeftUpCorner","rightDownCorner","getRightDownCorner","push","concat","rectArray","_this","forEach","dimensions","height","Math","min","max","addEventListener","removeEventListener","Slide","_this$props","possibleConstructorReturn","getPrototypeOf","call","settings","question","state","canvasBackground","canvasDraw","comment","warningShowed","answered","result","slideShowed","photoShowed","setClear","assertThisInitialized","nextQuestion","handleCanvasClick","clearTimers","setQuestionTimers","showWarning","handleTimer","prepareCanvas","setNewQuestion","showPhoto","timers","drawer","document","querySelector","prevProps","prevState","prevQuestion","removeClickListener","_this$props2","setState","getCanvasDraw","_this2","setCanvasDimensions","background","Image","src","imgPath","onload","setCanvasBackground","animateSlideShow","setClickListener","catch","window","alert","_this3","resolve","setTimer","_this$state$question$","getCanvasBackground","bg","drawImage","c","dangerZones","drawOldZones","isDanger","redError","finishQuestion","timer","l","totalTimers","setTimeout","_this$state$settings","timeWarning","clearTimeout","_this$state$settings2","yellowError","checkIfClickInDangerZone","isRight","some","zone","_this4","handlePhotoPosition","photo","style","top","clientY","naturalHeight","left","clientX","naturalWidth","classList","add","drawDangerZone","showResult","sendResult","_this$state","dangerPicture","id","alt","PureComponent","handleSubmit","handleChange","onChange","required","API_URL","defaultFetch","method","body","configFetch","mode","headers","Accept","Content-Type","assign","JSON","stringify","postData","url","data","fetch","rep","err","getData","postFile","Test","loading","testStarted","testFinished","user","tests","currentTest","currentQuestion","questions","total","setSettings","getSettings","getTests","target","preventDefault","chooseTest","settingsArray","settingsObject","tune","howMany","chosenTest","floor","random","getQuestions","setCurrentQuestion","errorThreshold","components_Test_Slide","components_Test_User","Admin","deleteObj","refreshTest","obj","_this5","confirm","_e$target","description","dataset","handleTypes","i","val","typesMap","number","Number","_this6","map","key","_id","data-description","test","q","Forbidden","CreateTest","finally","CreateQuestion","uploadPhotos","clearCanvas","saveQuestion","checkIfQuestionCreated","reset","location","search","URLSearchParams","get","getQuestion","handleFormData","slide","FormData","append","files","_this$state$dimension","start","_this$state2","getZones","_this$state3","pattern","App","handleAuth","password","console","log","auth","BrowserRouter","components_Header","Switch","Route","path","render","exact","ReactDom","src_App","getElementById"],"mappings":"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","file":"static/js/main.a65414a7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './Header.sass'\r\n\r\nconst Login = props => {\r\n  const { login, authFail, isLogging } = props\r\n\r\n  return (\r\n      <form className='loginForm' onSubmit = { login }>\r\n        {\r\n          authFail ?\r\n            <div className='authFailMessage'>Неверное имя пользователя или пароль!</div>\r\n          :\r\n            ''\r\n        }\r\n        <span>\r\n          <input type='login' name='login' placeholder='login'/>\r\n          <input type='password' name='password' placeholder='password'/>\r\n        </span>\r\n        <span>\r\n          <input disabled = { isLogging } type='submit' value='Войти'/>\r\n        </span>\r\n      </form>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Login)\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Login from './Login'\r\nimport './Header.sass'\r\n\r\nconst Header = props => {\r\n  const { isAdmin, authFail, logoff, login } = props\r\n\r\n  return (\r\n    <div className='headerArea'>\r\n      <Link className='header' to='/'>\r\n        <h1>XRay-test</h1>\r\n      </Link>\r\n      {\r\n        isAdmin\r\n          ? <div className='loginArea'>\r\n            Вход выполнен\r\n            <a className='logoff' onClick={logoff}>\r\n              Выйти\r\n            </a>\r\n          </div>\r\n          : <Login login={login} authFail={authFail}/>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  isAdmin: PropTypes.bool.isRequired,\r\n  logoff: PropTypes.func.isRequired,\r\n  login: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import React from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport './Menu.sass'\r\n\r\nclass Menu extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className='container'>\r\n        <div className='menuItem'>\r\n          <Link className='menuButton' to='/test'>Начать тест</Link>\r\n        </div>\r\n        <div className='menuItem'>\r\n          <Link className='menuButton' to='/admin'>Настройки</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Menu)\n","/**\r\n * Fetch method helper makes json transformation\r\n * @param {object} response - response object got from server\r\n * @returns {Promise} - boolean represents if json operation success\r\n */\r\nexport const handleResponse = response => response.json().then(json => response.ok ? json : Promise.reject(json))\r\n\r\n/**\r\n * Function saves access token in localStorage\r\n * @param {object} data - object that contains access token data (login, token, id)\r\n * @returns {null} - returns nothing if param wasnt defined\r\n */\r\nexport const setToken = token => {\r\n  return localStorage.setItem('token', token);\r\n}\r\n\r\n/**\r\n * Function get access token from localStorage\r\n * @returns {string} - if access token is stored in localStorage\r\n * @returns {boolean} - false boolean represents if is no access token\r\n */\r\nexport const getToken = () => {\r\n  if (localStorage.getItem('token')) {\n    return localStorage.getItem('token')\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Comments for differen results\r\n */\r\nexport const comments = {\r\n  right: 'Поздравляем! Правильный ответ.',\r\n  yellow: 'Ошибка! Опасных предметов нет!',\r\n  red1: 'Ошибка! Опасный предмет есть!',\r\n  red2: 'Ошибка! Опасного предмета нет в обозначенной Вами области!',\r\n  time: 'Время истекло!'\r\n}\r\n","class Drawer {\r\n  constructor (canvas) {\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d');\r\n\r\n    this.zones = [];\r\n\r\n    this.x1 = 0;\r\n    this.x2 = 0;\r\n    this.y1 = 0;\r\n    this.y2 = 0;\r\n\r\n    this.prevProperties = [0, 0, 0, 0];\r\n\r\n    this.clearListeners();\r\n    this.isDrawing = false;\r\n\r\n    this.handelMouseUp = this.handelMouseUp.bind(this);\r\n    this.handelMouseMove = this.handelMouseMove.bind(this);\r\n    this.handelMouseDown = this.handelMouseDown.bind(this);\r\n    this.clearZones = this.clearZones.bind(this);\r\n  }\r\n\r\n  handelMouseDown (e) {\r\n    this.isDrawing = true;\r\n\r\n    this.x1 = e.offsetX;\r\n    this.y1 = e.offsetY;\r\n  }\r\n\r\n  handelMouseMove (e) {\r\n    if (this.isDrawing) {\r\n      this.clearPreviousRect();\r\n\r\n      this.x2 = e.offsetX;\r\n      this.y2 = e.offsetY;\r\n\r\n      const rectProperties = this.getRectProperties();\r\n\r\n      this.drawRect(rectProperties);\r\n      this.prevProperties = rectProperties;\r\n    }\r\n  }\r\n\r\n  handelMouseUp (e) {\r\n    this.isDrawing = false;\r\n\r\n    this.clearPreviousRect();\r\n\r\n    this.x2 = e.offsetX;\r\n    this.y2 = e.offsetY;\r\n\r\n    const rectProperties = this.getRectProperties();\r\n\r\n    this.drawRect(rectProperties);\r\n    this.prevProperties = [0, 0, 0, 0];\r\n    this.saveZones();\r\n  }\r\n\r\n  drawRect (rectProperties, color = 'red') {\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.rect(...rectProperties);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  clearPreviousRect () {\r\n    const [x, y, width, heigth] = this.prevProperties;\r\n\r\n    this.ctx.clearRect(x - 1, y - 1, width + 2, heigth + 2);\r\n    this.ctx.beginPath();\r\n  }\r\n\r\n  saveZones () {\r\n    const leftUpCorner = this.getLeftUpCorner();\r\n    const rightDownCorner = this.getRightDownCorner();\r\n\r\n    this.zones.push([...leftUpCorner, ...rightDownCorner]);\r\n  }\r\n\r\n  /**\r\n   * Method draws rectangles got from API\r\n   */\r\n  drawOldZones (rectArray) {\r\n    this.zones = rectArray;\r\n\r\n    rectArray.forEach(dimensions => {\r\n      const rectProperties = [dimensions[0], dimensions[1]];\r\n      const width = dimensions[2] - dimensions[0];\r\n      const height = dimensions[3] - dimensions[1];\r\n\r\n      rectProperties.push(width);\r\n      rectProperties.push(height);\r\n\r\n      this.drawRect(rectProperties);\r\n    })\r\n  }\r\n\r\n  getLeftUpCorner () {\r\n    const { x1, x2, y1, y2 } = this;\r\n\r\n    return [Math.min(x1, x2), Math.min(y1, y2)]\r\n  }\r\n\r\n  getRightDownCorner () {\r\n    const { x1, x2, y1, y2 } = this;\r\n\r\n    return [Math.max(x1, x2), Math.max(y1, y2)]\r\n  }\r\n\r\n  getRectProperties () {\r\n    const leftUpCorner = this.getLeftUpCorner();\r\n    const rightDownCorner = this.getRightDownCorner();\r\n\r\n    let width = rightDownCorner[0] - leftUpCorner[0];\r\n    let height = rightDownCorner[1] - leftUpCorner[1];\r\n\r\n    return [...leftUpCorner, width, height];\r\n  }\r\n\r\n  start () {\r\n    this.canvas.addEventListener('mousedown', this.handelMouseDown)\r\n    this.canvas.addEventListener('mouseup', this.handelMouseUp)\r\n    this.canvas.addEventListener('mousemove', this.handelMouseMove)\r\n  }\r\n\r\n  clearListeners () {\r\n    this.canvas.removeEventListener('mousedown', this.handelMouseDown)\r\n    this.canvas.removeEventListener('mouseup', this.handelMouseUp)\r\n    this.canvas.removeEventListener('mousemove', this.handelMouseMove)\r\n  }\r\n\r\n  getZones () {\r\n    return this.zones;\r\n  }\r\n\r\n  clearZones () {\r\n    this.zones = [];\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.ctx.beginPath();\r\n  }\r\n\r\n  reset () {\r\n    this.clearListeners();\r\n    this.clearZones();\r\n  }\r\n}\r\n\r\nexport default Drawer;\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './Slide.sass'\r\nimport { comments } from './../../helpers';\r\nimport Drawer from '../Drawer'\r\n\r\nclass Slide extends React.PureComponent {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    const { settings, question } = this.props;\r\n    const canvasDraw = '#canvasDrawArea';\r\n    const canvasBackground = '#canvasBackground';\r\n\r\n    this.state = {\r\n      settings,\r\n      question,\r\n      canvasBackground,\r\n      canvasDraw,\r\n      comment: comments.right,\r\n      warningShowed: false,\r\n      answered: false,\r\n      result: 0,\r\n      slideShowed: false,\r\n      photoShowed: false\r\n    }\r\n\r\n    this.setClear = this.setClear.bind(this);\r\n    this.nextQuestion = this.nextQuestion.bind(this);\r\n    this.handleCanvasClick = this.handleCanvasClick.bind(this);\r\n    this.clearTimers = this.clearTimers.bind(this);\r\n    this.setQuestionTimers = this.setQuestionTimers.bind(this);\r\n    this.showWarning = this.showWarning.bind(this);\r\n    this.handleTimer = this.handleTimer.bind(this);\r\n    this.prepareCanvas = this.prepareCanvas.bind(this);\r\n    this.setNewQuestion = this.setNewQuestion.bind(this);\r\n    this.showPhoto = this.showPhoto.bind(this);\r\n\r\n    this.timers = [];\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { canvasDraw } = this.state;\r\n\r\n    this.drawer = new Drawer(document.querySelector(canvasDraw));\r\n    this.setNewQuestion();\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState) {\r\n    const prevQuestion = prevProps.question;\r\n    const newQuestion = this.props.question;\r\n\r\n    if (newQuestion.name !== prevQuestion.name) {\r\n       this.setNewQuestion()\r\n    }\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this.clearTimers();\r\n    this.removeClickListener();\r\n  }\r\n\r\n  setNewQuestion () {\r\n    const { settings, question } = this.props;\r\n\r\n    this.setState({\r\n      settings,\r\n      question,\r\n      comment: comments.right,\r\n      answered: false,\r\n      slideShowed: true,\r\n      warningShowed: false,\r\n      result: 0\r\n    }, this.prepareCanvas);\r\n  }\r\n\r\n  removeClickListener () {\r\n    const drawLayer = this.getCanvasDraw();\r\n\r\n    drawLayer.removeEventListener('click', this.handleCanvasClick)\r\n  }\r\n\r\n  /**\r\n   * Method sets canvas width and heigth, add background image\r\n   * and inits drawing dangerzone rectangels\r\n   * @returns {void}\r\n   */\r\n  prepareCanvas () {\r\n    this.setCanvasDimensions();\r\n\r\n    const background = new Image();\r\n\r\n    background.src = this.state.question.imgPath;\r\n    background.onload = () => {\r\n      this.setCanvasBackground(background);\r\n      this.animateSlideShow()\r\n          .then(() => {\r\n            this.setQuestionTimers();\r\n            this.setClickListener();\r\n          })\r\n          .catch(window.alert);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method removes class 'canvasBeyondScreen' from canvasBackground\r\n   * to make it animated drive from the right end of screen\r\n   * @returns {void}\r\n   */\r\n  animateSlideShow () {\r\n    return new Promise((resolve, reject) => {\r\n        // 3s - time of animation. then timer starts and user can click\r\n        this.setTimer(() => resolve(), 3000)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method set canvas width and heigth - both for background and draw layers\r\n   * @returns {void}\r\n   */\r\n  setCanvasDimensions () {\r\n    const { width, height } = this.state.question.dimensions;\r\n\r\n    this.getCanvasDraw().width = width;\r\n    this.getCanvasDraw().height = height;\r\n    this.getCanvasBackground().width = width;\r\n    this.getCanvasBackground().height = height;\r\n  }\r\n\r\n  /**\r\n   * Method calls background layer canvas to draw background\r\n   * @returns {Function} - drawImage method of canvas\r\n   */\r\n  setCanvasBackground (bg) {\r\n    return this.getCanvasBackground().getContext('2d').drawImage(bg, 0, 0)\r\n  }\r\n\r\n  /**\r\n   * Method draws old rectangles got from API if any\r\n   * and starts to listen to new user draw\r\n   * @returns {Function} - draw method of this.draw\r\n   */\r\n  drawDangerZone (c) {\r\n    const { dangerZones } = this.state.question;\r\n    if (dangerZones.length > 0) return this.drawer.drawOldZones(dangerZones);\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas draw layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasDraw () {\r\n    return document.querySelector(this.state.canvasDraw)\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas background layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasBackground () {\r\n    return document.querySelector(this.state.canvasBackground)\r\n  }\r\n\r\n  setClear () {\r\n    const { isDanger } = this.state.question;\r\n    const { redError } = this.state.settings;\r\n\r\n    if (isDanger === '1') {\r\n      this.setState({\r\n        comment: comments.red1,\r\n        result: redError\r\n      }, this.finishQuestion)\r\n    } else this.finishQuestion();\r\n  }\r\n\r\n  setClickListener () {\r\n    const drawLayer = this.getCanvasDraw();\r\n\r\n    drawLayer.addEventListener('click', this.handleCanvasClick)\r\n  }\r\n\r\n  /**\r\n   * Method add timer to this.timers array\r\n   * for proper handling them\r\n   * @param {Function} timer - function to be called in time l\r\n   * @param {Number} l - time to call function\r\n   * @returns {void}\r\n   */\r\n  setTimer (timer, l) {\r\n    const totalTimers = this.timers.length;\r\n\r\n    this.timers[totalTimers] = setTimeout(timer, l);\r\n  }\r\n\r\n  /**\r\n   * Method adds timers for showing warning and\r\n   * for total time for question\r\n   * @returns {void}\r\n   */\r\n  setQuestionTimers () {\r\n    const { timeWarning, time } = this.state.settings;\r\n\r\n    this.setTimer(this.showWarning, timeWarning * 1000)\r\n    this.setTimer(this.handleTimer, time * 1000)\r\n  }\r\n\r\n  /**\r\n   * Method clears all timers in this.timers array\r\n   * @returns {void}\r\n   */\r\n  clearTimers () {\r\n    this.timers.forEach(timer => {\r\n      clearTimeout(timer)\r\n    });\r\n\r\n    this.timers = [];\r\n  }\r\n\r\n  handleTimer () {\r\n    const { answered } = this.state;\r\n    const { redError, yellowError } = this.state.settings;\r\n    const { isDanger } = this.state.question;\r\n\r\n    if (!answered) {\r\n      let result;\r\n\r\n      result = isDanger === '1' ? redError : yellowError;\r\n      return this.setState({ comment: comments.time, answered: true, result }, this.finishQuestion)\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  showWarning () {\r\n    return this.setState({ warningShowed: true })\r\n  }\r\n\r\n  handleCanvasClick (e) {\r\n    const { answered } = this.state;\r\n    const { isDanger } = this.state.question;\r\n    const { yellowError } = this.state.settings;\r\n\r\n    if (isDanger === '0' && !answered) {\r\n      return this.setState({ comment: comments.yellow, result: yellowError }, this.finishQuestion)\r\n    }\r\n\r\n    return this.checkIfClickInDangerZone(e)\r\n  }\r\n\r\n  checkIfClickInDangerZone (e) {\r\n    const x = e.offsetX;\r\n    const y = e.offsetY;\r\n    const { answered } = this.state;\r\n    const { dangerZones } = this.state.question;\r\n    const { redError } = this.state.settings;\r\n    const isRight = dangerZones.some(zone =>\r\n      x > zone[0] && y > zone[1] && x < zone[2] && y < zone[3]\r\n    );\r\n\r\n    if (!answered) {\r\n      if (isRight) this.finishQuestion();\r\n      else this.setState({ comment: comments.red2, result: redError }, this.finishQuestion)\r\n    }\r\n\r\n    if (isRight) this.showPhoto(e);\r\n  }\r\n\r\n  showPhoto (e) {\r\n    this.setState({ photoShowed: true }, () => {\r\n      this.handlePhotoPosition(e);\r\n      this.setTimer(this.setState.bind(this, { photoShowed: false }), 2000)\r\n    });\r\n  }\r\n\r\n  handlePhotoPosition (e) {\r\n    const photo = document.querySelector('.dangerPicture');\r\n\r\n    photo.style.top = e.clientY - (photo.naturalHeight / 2) + 'px';\r\n    photo.style.left = e.clientX - (photo.naturalWidth / 2) + 'px';\r\n    this.setTimer(() => photo.classList.add('naturalSize'), 20);\r\n  }\r\n\r\n  finishQuestion () {\r\n    this.setState({ answered: true });\r\n    this.clearTimers();\r\n    this.drawDangerZone();\r\n    this.showResult();\r\n  }\r\n\r\n  showResult () {\r\n    const { result } = this.state;\r\n    const { sendResult } = this.props;\r\n\r\n    return sendResult(result);\r\n  }\r\n\r\n  nextQuestion () {\r\n    const { nextQuestion } = this.props;\r\n\r\n    this.removeClickListener();\r\n    this.setState({ slideShowed: false });\r\n\r\n    return nextQuestion();\r\n  }\r\n\r\n  render () {\r\n    const { answered, question, warningShowed, result, photoShowed, comment, slideShowed } = this.state;\r\n    const { yellowError } = this.state.settings;\r\n    const { dangerPicture } = question;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          Вопрос { question.name}\r\n        </div>\r\n        <div className='canvasArea'>\r\n          <div className='actionComment_container speech'>\r\n            {\r\n              answered ?\r\n              <div id='actionComment' className = { result === 0 ? 'green' : result === yellowError ? 'yellow' : 'red'} >{ answered ? comment : '' }</div> :\r\n              ''\r\n            }\r\n          </div>\r\n          <div className='markIcon_cotainer'>\r\n            {\r\n              answered ?\r\n              <span\r\n                id='markIcon'\r\n                className = { result === 0 ? 'greenMark' : result === yellowError ? 'yellowError' : 'redError'}\r\n              ></span> :\r\n              ''\r\n            }\r\n          </div>\r\n          <div className='clearButton_container'>\r\n            <button id='clearButton' disabled = { answered } onClick= { this.setClear } >&#9745;</button>\r\n          </div>\r\n          <div className='canvas_container'>\r\n            { slideShowed ?\r\n                <canvas className='animatedShow' id=\"canvasBackground\"></canvas>\r\n              :\r\n              ''\r\n            }\r\n          </div>\r\n          <div className='canvas_container'>\r\n            <canvas id=\"canvasDrawArea\"></canvas>\r\n          </div>\r\n          <div className='timerWarning_container'>\r\n            { warningShowed ?\r\n                <span id='timerWarning'>Внимание! Время истекает!</span>\r\n              :\r\n                ''\r\n            }\r\n          </div>\r\n          <div className='forwardButton_container'>\r\n            { /* Disabled when photoShowed coz otherwise you can see next danger picture when clicking 'forward' before prev danger picture disappears */ }\r\n            <button id='forwardButton' disabled = { !answered || photoShowed} onClick = { this.nextQuestion }>&#x25ba;</button>\r\n          </div>\r\n        </div>\r\n        <img className={photoShowed ? 'dangerPicture' : 'hidden'} src= { dangerPicture } alt='Опасный предмет'/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSlide.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  question: PropTypes.object.isRequired,\r\n  sendResult: PropTypes.func.isRequired,\r\n  nextQuestion: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(Slide)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './User.sass'\r\n\r\nconst User = props => {\r\n  const { handleSubmit, handleChange } = props;\r\n\r\n  return (\r\n      <div>\r\n        <div className='paranja'>\r\n        </div>\r\n        <div className='userLoginArea'>\r\n          <form className = 'userLogin' onSubmit = { handleSubmit }>\r\n            <div>\r\n              <span>\r\n                <label>\r\n                  Ваше имя: &emsp;\r\n                  <input type='text' id='user' onChange = { handleChange } required/>\r\n                </label>\r\n              </span>\r\n              <span>\r\n                <input type='submit' value='Начать тест'/>\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nUser.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(User)\r\n","import { getToken } from './helpers'\r\n\r\nexport const API_URL = 'http://localhost:3001'\r\n\r\nexport const defaultFetch = function (method = 'GET', body) {\r\n  const configFetch = {\r\n      method,\r\n      mode: 'cors',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'token': getToken()\r\n      }\r\n    }\r\n\r\n  if (body) Object.assign(configFetch, { body: JSON.stringify(body) })\r\n\r\n  return configFetch\r\n}\n\nexport const fileFetch = function (body) {\n  return {\n      method: 'POST',\n      mode: 'cors',\n      body: body,\n      headers: {\n        'token': getToken()\n      }\n    }\n}\n","import { API_URL, defaultFetch, fileFetch } from './config'\r\nimport { handleResponse } from './helpers'\r\n\r\nconst postData = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, defaultFetch('POST', data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst getData = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, defaultFetch('GET', data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst deleteData = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, defaultFetch('DELETE', data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nconst postFile = function (url, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${API_URL}/${url}`, fileFetch(data))\r\n     .then(handleResponse)\r\n     .then(rep => resolve(rep))\r\n     .catch(err => reject(err))\r\n  })\r\n}\r\n\r\nexport { postData, getData, postFile, deleteData }\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Slide from './Slide'\r\nimport User from './User'\r\nimport './Test.sass'\r\nimport { getData } from './../../actions'\r\n\r\nclass Test extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      loading: false,\r\n      testStarted: false,\r\n      testFinished: false,\r\n      user: '',\r\n      settings: {},\r\n      tests: [],\r\n      currentTest: '',\r\n      currentQuestion: -1,\r\n      questions: [],\r\n      total: 100\r\n    }\r\n\r\n    this.setSettings = this.setSettings.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.nextQuestion = this.nextQuestion.bind(this);\r\n    this.sendResult = this.sendResult.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getSettings();\r\n    this.getTests();\r\n  }\r\n\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault()\r\n\r\n    this.chooseTest()\r\n  }\r\n\r\n  getSettings () {\r\n    return getData('settings')\r\n            .then(settings => this.setSettings(settings))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTests () {\r\n    return getData('tests')\r\n            .then(tests => this.setState({ tests }))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  setSettings (settingsArray) {\r\n    const settingsObject = {};\r\n\r\n    settingsArray.forEach(tune => {\r\n      settingsObject[tune.name] = tune.value;\r\n    })\r\n\r\n    this.setState({ settings: settingsObject })\r\n  }\r\n\r\n  chooseTest () {\r\n    const { tests } = this.state;\r\n    const howMany = tests.length;\r\n    const variant = Math.floor(Math.random() * howMany);\r\n    const chosenTest = tests[variant].name;\r\n\r\n    this.getQuestions(chosenTest);\r\n  }\r\n\r\n  getQuestions (chosenTest) {\r\n    return getData(`questions/${chosenTest}`)\r\n            .then(questions => this.setState({ questions }, this.setCurrentQuestion))\r\n            .catch(err => window.alert(err))\r\n  }\r\n\r\n  setCurrentQuestion () {\r\n    const currentQuestion = this.state.currentQuestion + 1;\r\n    const totalQuestions = this.state.questions.length;\r\n\r\n    if (currentQuestion < totalQuestions) this.setState({ testStarted: true, currentQuestion })\r\n    else this.setState({ testFinished: true, testStarted: false })\r\n  }\r\n\r\n  nextQuestion () {\r\n    return this.setCurrentQuestion();\r\n  }\r\n\r\n  sendResult (result) {\r\n    let { total } = this.state;\r\n\r\n    total = total - result;\r\n    this.setState({ total });\r\n  }\r\n\r\n  render () {\r\n    const { testStarted, settings, currentQuestion, questions, total, testFinished } = this.state;\r\n    const { errorThreshold } = settings;\r\n\r\n    return (\r\n      <div className='container'>\r\n        { testStarted ?\r\n            (<div className='testArea'>\r\n              <div>\r\n                Итого: { total }%\r\n              </div>\r\n              <Slide\r\n                question = { questions[currentQuestion] }\r\n                settings = { settings }\r\n                sendResult = { this.sendResult }\r\n                nextQuestion = { this.nextQuestion }\r\n              />\r\n            </div>)\r\n          :\r\n          testFinished ?\r\n            (<div className='resultArea'>\r\n              <h2>\r\n                Ваш результат:\r\n                <span\r\n                className = { total < errorThreshold ? 'fail' : total < 100 ? 'enought' : 'perfect'}\r\n                > { total }%</span>\r\n              </h2>\r\n            </div>)\r\n          :\r\n            (<div className='userArea'>\r\n              <User\r\n                handleChange = { this.handleChange }\r\n                handleSubmit = { this.handleSubmit }\r\n              />\r\n            </div>)\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Test)\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { getData, deleteData, postData } from './../../actions'\r\n\r\nclass Admin extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      questions: [],\r\n      settings: [],\r\n      tests: [],\r\n      err: false\r\n    }\r\n\r\n    this.deleteObj = this.deleteObj.bind(this);\r\n    this.refreshTest = this.refreshTest.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getSettings();\r\n    this.getTests();\r\n    this.getQuestions();\r\n  }\r\n\r\n  getSettings () {\r\n    return getData('settings')\r\n            .then(settings => this.setState({ settings }))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getTests () {\r\n    return getData('tests')\r\n            .then(tests => this.setState({ tests }))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getQuestions () {\r\n    return getData('questions')\r\n            .then(questions => this.setState({ questions }))\r\n            .catch(err => this.setState({ err: true }))\r\n  }\r\n\r\n  getData () {\r\n    this.getTests();\r\n    this.getQuestions();\r\n  }\r\n\r\n  deleteObj (obj, name) {\r\n    let conf = window.confirm('Вы уверены?');\r\n\r\n    if (conf) {\r\n      return deleteData(`deleteobj/${obj}/${name}`)\r\n              .then(rep => this.getData())\r\n              .catch(err => this.setState({ err: true }))\r\n    }\r\n  }\r\n\r\n  refreshTest (name) {\r\n    return postData('test', { name })\r\n            .then(rep => window.alert('Успешно обновлено!'))\r\n            .catch(err => window.alert(err))\r\n  }\r\n\r\n  handleChange (e) {\r\n    let { value, type } = e.target;\r\n    const { description } = e.target.dataset;\r\n    const name = e.target.id;\r\n    const { settings } = this.state;\r\n\r\n    value = this.handleTypes(value, type);\r\n\r\n    settings.forEach((tune, i) => {\r\n      if (name === tune.name) settings[i] = { name, value, type, description }\r\n    })\r\n\r\n    this.setState({ settings })\r\n  }\r\n\r\n  handleTypes (val, type) {\r\n    const typesMap = {\r\n      number: () => Number(val)\r\n    }\r\n\r\n    if (typesMap[type]) return typesMap[type](val)\r\n    else return val\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault();\r\n\r\n    const { settings } = this.state;\r\n\r\n    return postData('settings', { settings })\r\n            .then(rep => window.alert('Успешно сохранено!'))\r\n            .catch(err => window.alert(err))\r\n  }\r\n\r\n  render () {\r\n    const { settings, tests, questions } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='newTest'>\r\n          <div className='menuItem'>\r\n            <Link className='menuButton' to='/create/test'>Создать новый тест</Link>\r\n            <Link className='menuButton' to='/create/question'>Создать новый вопрос</Link>\r\n          </div>\r\n        </div>\r\n          <h2>Настройки</h2>\r\n          <div className='formArea'>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {\r\n                settings.map(tune => {\r\n                  return <div key={tune._id}>\r\n                    <label>\r\n                      {tune.description}: &emsp;\r\n                      <input\r\n                        id={tune.name}\r\n                        data-description={tune.description}\r\n                        type={tune.type}\r\n                        value={tune.value}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                })\r\n              }\r\n              <div>\r\n                <input type='submit' value='Сохранить'/>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        <div>\r\n        </div>\r\n        <div className='oldTest'>\r\n          <h2>Тесты</h2>\r\n          <ul>\r\n            {\r\n              tests.map(test => {\r\n                return <li key={test._id}>{test.name} &emsp;\r\n                <a onClick={() => this.refreshTest(test.name)}>Обновить</a> &emsp;\r\n                <a className='danger' onClick={() => this.deleteObj('Test', test.name)}>Удалить</a>\r\n                </li>\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n        <div className='oldQuestions'>\r\n          <h2>Вопросы</h2>\r\n          <ul>\r\n            {\r\n              questions.map(q => {\r\n                return <li key={q._id}>{q.name} &emsp;\r\n                  <Link to={`/create/question?question=${q.name}`}>Изменить</Link>&emsp;\r\n                  <a className='danger' onClick={() => this.deleteObj('Question', q.name)}>Удалить</a>\r\n                </li>\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Admin)\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Forbidden extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>403 Нет доступа</h1>\r\n        <h3>Залогиньтесь для продолжения</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Forbidden)\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { postData } from './../../actions'\r\n\r\nclass CreateTest extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      err: false,\r\n      loading: false,\r\n      name: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault();\r\n\r\n    const { name } = this.state;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    return postData('test', { name })\r\n            .then(rep => window.alert('Успешно сохранено!'))\r\n            .catch(err => window.alert(err))\r\n            .finally(() => this.setState({ loading: false }))\r\n  }\r\n\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  render () {\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='formArea'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div>\r\n              <span>\r\n                <label>\r\n                  Номер теста: &emsp;<input id='name' onChange={this.handleChange} type='number' min='1'/>\r\n                </label>\r\n              </span>\r\n              <span>\r\n                <input disabled= { loading } type='submit' value='Создать'/>\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateTest)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { postFile, postData, getData } from './../../actions'\r\nimport Drawer from '../Drawer'\r\nimport './CreateQuestion.sass'\r\n\r\nclass CreateQuestion extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      loading: false,\r\n      err: false,\r\n      imgPath: '',\r\n      dimensions: { width: 0, height: 0 },\r\n      dangerZones: [],\r\n      name: '',\r\n      isDanger: '1'\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.uploadPhotos = this.uploadPhotos.bind(this);\r\n    this.clearCanvas = this.clearCanvas.bind(this);\r\n    this.saveQuestion = this.saveQuestion.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    const canvasDraw = '#canvasDrawArea';\r\n    const canvasBackground = '#canvasBackground';\r\n    this.setState({ canvasBackground, canvasDraw })\r\n\r\n    this.drawer = new Drawer(document.querySelector(canvasDraw));\r\n    this.checkIfQuestionCreated()\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this.drawer.reset();\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas draw layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasDraw () {\r\n    return document.querySelector(this.state.canvasDraw)\r\n  }\r\n\r\n  /**\r\n   * Get selector for canvas background layer\r\n   * @returns {Object} - DOM selector\r\n   */\r\n  getCanvasBackground () {\r\n    return document.querySelector(this.state.canvasBackground)\r\n  }\r\n\r\n  /**\r\n   * Method checks location query\r\n   * if query is defined ( /create/question?question=name )\r\n   * it means user want to edit old question\r\n   * so we fetch question to API\r\n   * @return {Function} - fetch to API for question data\r\n   */\r\n  checkIfQuestionCreated () {\r\n    if (this.props.location.search.length > 0) {\r\n      const query = new URLSearchParams(this.props.location.search);\r\n      const question = query.get('question');\r\n\r\n      return this.getQuestion(question)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method fetches to API for question data\r\n   * if any - renders it\r\n   * @returns {Function} - fetch to API\r\n   */\r\n  getQuestion (question) {\r\n    return getData(`question/${question}`)\r\n            .then(rep => {\r\n              if (rep) {\r\n                this.setState(rep, this.prepareCanvas)\r\n              }\r\n            })\r\n            .catch(err => window.alert(err))\r\n  }\r\n\r\n  /**\r\n   * Method handles upload of slide and photo\r\n   * then it gets dimensions of slide and prepares canvas for it\r\n   * @return {void}\r\n   */\r\n  uploadPhotos (e) {\r\n    e.preventDefault();\r\n\r\n    const data = this.handleFormData();\r\n\r\n    this.setState({ loading: true });\r\n    postFile('preupload', data)\r\n      .then(rep => {\r\n        const { name } = this.state;\r\n        const imgPath = `/images/${name}_slide.${rep.type}`;\r\n        this.drawer.reset();\r\n\r\n        this.setState({\r\n          imgPath: imgPath,\r\n          dimensions: rep\r\n        }, this.prepareCanvas)\r\n      })\r\n      .catch(err => window.alert(err))\r\n      .finally(() => this.setState({ loading: false }));\r\n  }\r\n\r\n  /**\r\n   * Method gatheres all formData to single object for upload\r\n   * @return {Object} - object to upload\r\n   */\r\n  handleFormData () {\r\n    const slide = document.querySelector('input[name=\"slide\"]');\r\n    const photo = document.querySelector('input[name=\"photo\"]');\r\n    const { name, isDanger } = this.state;\r\n    const data = new FormData();\r\n\r\n    data.append('question', name);\r\n    data.append('slide', slide.files[0]);\r\n    if (isDanger === '1') data.append('photo', photo.files[0]);\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Method handles changes in input and pass it to state\r\n   * @returns {void}\r\n   */\r\n  handleChange (e) {\r\n    const data = {};\r\n\r\n    data[e.target.id] = e.target.value;\r\n\r\n    this.setState(data);\r\n  }\r\n\r\n  /**\r\n   * Method sets canvas width and heigth, add background image\r\n   * and inits drawing dangerzone rectangels\r\n   * @returns {void}\r\n   */\r\n  prepareCanvas () {\r\n    this.setCanvasDimensions();\r\n\r\n    const background = new Image();\r\n\r\n    background.src = this.state.imgPath;\r\n    background.onload = () => {\r\n      this.setCanvasBackground(background)\r\n      this.drawDangerZone();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method set canvas width and heigth - both for background and draw layers\r\n   * @returns {void}\r\n   */\r\n  setCanvasDimensions () {\r\n    const { width, height } = this.state.dimensions;\r\n\r\n    this.getCanvasDraw().width = width;\r\n    this.getCanvasDraw().height = height;\r\n    this.getCanvasBackground().width = width;\r\n    this.getCanvasBackground().height = height;\r\n  }\r\n\r\n  /**\r\n   * Method calls background layer canvas to draw background\r\n   * @returns {Function} - drawImage method of canvas\r\n   */\r\n  setCanvasBackground (bg) {\r\n    return this.getCanvasBackground().getContext('2d').drawImage(bg, 0, 0)\r\n  }\r\n\r\n  /**\r\n   * Method draws old rectangles got from API if any\r\n   * and starts to listen to new user draw\r\n   * @returns {Function} - start method of this.draw\r\n   */\r\n  drawDangerZone (c) {\r\n    const { dangerZones } = this.state;\r\n\r\n    if (dangerZones.length > 0) this.drawer.drawOldZones(dangerZones);\r\n\r\n    return this.drawer.start()\r\n  }\r\n\r\n  /**\r\n   * Method calls clearZones mthod of this.drawer\r\n   * to clear canvas draw layer\r\n   */\r\n  clearCanvas () {\r\n    return this.drawer.clearZones()\r\n  }\r\n\r\n  /**\r\n   * Method gatheres all question data to single object and post to API\r\n   * @returns {Function} - fetch post API\r\n   */\r\n  saveQuestion () {\r\n    const { imgPath, name, isDanger, dimensions } = this.state;\r\n\r\n    const question = {\r\n      name,\r\n      isDanger,\r\n      dangerZones: this.drawer.getZones(),\r\n      imgPath,\r\n      dimensions\r\n     };\r\n\r\n     this.setState({ loading: true });\r\n\r\n     return postData('savequestion', question)\r\n              .then(rep => window.alert('Успешно сохранено!'))\r\n              .catch(err => window.alert(err))\r\n              .finally(() => this.setState({ loading: false }))\r\n  }\r\n\r\n  render () {\r\n    const { loading, isDanger, name } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='formArea'>\r\n          <form onSubmit={this.uploadPhotos}>\r\n            <div>\r\n              <label>\r\n                Вопрос: &emsp;\r\n                <input\r\n                  id='name'\r\n                  onChange={this.handleChange}\r\n                  pattern='[0-9]+_[0-9]+'\r\n                  name='name'\r\n                  type='text'\r\n                  value = {name.length > 0 ? name : ''}\r\n                  placeholder='№ Теста_№ вопроса'\r\n                  required\r\n                />\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                Загрузите слайд: &emsp;\r\n                <input\r\n                  name='slide'\r\n                  type='file'\r\n                  required\r\n                />\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                Багаж опасен? &emsp;\r\n                <select\r\n                  id='isDanger'\r\n                  onChange={this.handleChange}\r\n                  value={isDanger === '1' ? '1' : '0'}\r\n                >\r\n                  <option value='1'>Да</option>\r\n                  <option value='0'>нет</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            {\r\n              isDanger === '1' ?\r\n              <div>\r\n                <label>\r\n                  Загрузите фото: &emsp;\r\n                  <input\r\n                    name='photo'\r\n                    type='file'\r\n                    required\r\n                  />\r\n                </label>\r\n              </div> :\r\n              <span></span>\r\n            }\r\n            <div>\r\n              <input disabled={loading} type='submit' value='Продолжить'/>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <div className='canvasControls'>\r\n            <button className='danger' onClick={this.clearCanvas}>Очистить</button>\r\n            <button className='success' disabled={loading || name === ''} onClick={this.saveQuestion}>Сохранить</button>\r\n          </div>\r\n          <div className='createQuestion canvasArea'>\r\n            <canvas id=\"canvasBackground\"></canvas>\r\n            <canvas id=\"canvasDrawArea\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateQuestion)\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport Header from './components/Header'\r\nimport Menu from './components/Menu'\r\nimport Test from './components/Test'\r\nimport Admin from './components/Admin'\r\nimport Forbidden from './components/Forbidden'\r\nimport CreateTest from './components/CreateTest'\r\nimport CreateQuestion from './components/CreateQuestion'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport './main.sass'\r\nimport { postData } from './actions'\r\nimport { setToken } from './helpers'\r\n\r\nclass App extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      isAdmin: false,\r\n      authFail: false,\r\n      isLogging: false,\r\n      token: undefined\r\n    }\r\n\r\n    this.login = this.login.bind(this)\r\n    this.logoff = this.logoff.bind(this)\r\n    this.handleAuth = this.handleAuth.bind(this)\r\n  }\r\n\r\n  login (e) {\r\n    e.preventDefault()\r\n\r\n    const data = {\r\n      login: e.target.login.value,\r\n      password: e.target.password.value\r\n    }\r\n\r\n    this.setState({ isLogging: true })\r\n\r\n    postData('login', data)\r\n      .then(rep => this.handleAuth(rep))\r\n      .catch(err => console.log(err))\r\n      .finally(() => this.setState({ isLogging: false }))\r\n  }\r\n\r\n  handleAuth (rep) {\r\n    if (rep.auth) setToken(rep.token)\r\n    this.setState({ isAdmin: rep.auth, authFail: !rep.auth, token: rep.token })\r\n  }\r\n\r\n  logoff () {\r\n    this.setState({\r\n      isAdmin: false,\r\n      token: undefined\r\n     })\r\n\r\n     setToken(null)\r\n  }\r\n\r\n  render () {\r\n    const { isAdmin, authFail, isLogging } = this.state\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Header\r\n           isAdmin={isAdmin}\r\n           authFail={authFail}\r\n           isLogging = {isLogging}\r\n           login={this.login}\r\n           logoff={this.logoff}\r\n           />\r\n          <Switch>\r\n            <Route path='/' render={Menu} exact/>\r\n            <Route path='/test' render={Test}/>\r\n            <Route path='/admin' render={isAdmin ? Admin : Forbidden}/>\r\n            <Route path='/create/test' render={isAdmin ? CreateTest : Forbidden}/>\r\n            <Route path='/create/question' render={isAdmin ? CreateQuestion : Forbidden}/>\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nReactDom.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}